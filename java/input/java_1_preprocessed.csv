stratum,class,comment,summary,Expand,rational,deprecation,usage,Ownership,Pointer
1,Abfss.java,"azure blob file system implementation of abstractfilesystem.
this impl delegates to the old filesystem",azure blob file system implementation of abstractfilesystem.,this impl delegates to the old filesystem,,,,,
1,AbstractContractGetFileStatusTest.java,"test getfilestatus and related listing operations.
the tree parameters. kept small to avoid killing object store test runs too much.
accept everything.
the tree parameters. kept small to avoid killing object store test runs too much.
accept nothing.
the tree parameters. kept small to avoid killing object store test runs too much.
path filter which only expects paths whose final name element
equals the @code match field.
the tree parameters. kept small to avoid killing object store test runs too much.
a filesystem filter which exposes the protected method
@link #listlocatedstatus path, pathfilter .",test getfilestatus and related listing operations.,"the tree parameters. kept small to avoid killing object store test runs too much.
accept everything.
the tree parameters. kept small to avoid killing object store test runs too much.
accept nothing.
the tree parameters. kept small to avoid killing object store test runs too much.
path filter which only expects paths whose final name element
equals the @code match field.
the tree parameters. kept small to avoid killing object store test runs too much.
a filesystem filter which exposes the protected method
@link #listlocatedstatus path, pathfilter .",,,,,
1,AbstractFSContract.java,"class representing a filesystem contract that a filesystem
implementation is expected implement.

part of this contract class is to allow fs implementations to
provide specific opt outs and limits, so that tests can be
skip unsupported features eg case sensitivity tests ,
dangerous operations eg trying to delete the root directory ,
and limit filesize and other numeric variables for scale tests",class representing a filesystem contract that a filesystem implementation is expected implement.,,"part of this contract class is to allow fs implementations to provide specific opt outs and limits, so that tests can be skip unsupported features eg case sensitivity tests , dangerous operations eg trying to delete the root directory , and limit filesize and other numeric variables for scale tests",,,,
1,AbstractS3ACommitterFactory.java,dynamically create the output committer based on subclass type and settings.,,dynamically create the output committer based on subclass type and settings.,,,,,
1,AbstractTFLaunchCommandTestHelper.java,"this class is an abstract base class for testing tensorboard and tensorflow
launch commands.",this class is an abstract base class for testing tensorboard and tensorflow and launch commands.,,this class is an abstract base class for testing tensorboard and tensorflow and launch commands.,,,,
1,ApplicationConstants.java,"this is the api for the applications comprising of constants that yarn sets
up for the applications and the containers.

todo investigate the semantics and security of each cross boundary refs.

the type of launch for the container.

environment for applications.

some of the environment variables for applications are em final em
ie they cannot be modified by the applications.",this is the api for the applications comprising of constants that yarn sets up for the applications and the containers.,the type of launch for the container. environment for applications. some of the environment variables for applications are em final em ie they cannot be modified by the applications.,,,,,
1,ApplicationStateData.java,contains all the state data that needs to be stored persistently for an application,contains all the state data that needs to be stored persistently for an application,,needs to be stored persistently for an application,,,,
1,AutoInputFormat.java,"an @link inputformat that tries to deduce the types of the input files
automatically. it can currently handle text and sequence files.",an @link inputformat that tries to deduce the types of the input files automatically.,it can currently handle text and sequence files.,,,,,an @link inputformat that tries to deduce the types of the input files automatically.
1,BalancingPolicy.java,"balancing policy.
since a datanode may contain multiple block pools,
@link pool implies @link node
but not the other way around

cluster is balanced if each node is balanced.

cluster is balanced if each pool in each node is balanced.",balancing policy.,"since a datanode may contain multiple block pools, @link pool implies @link node but not the other way around",cluster is balanced if each node is balanced. cluster is balanced if each pool in each node is balanced.,,,,"since a datanode may contain multiple block pools, @link pool implies @link node but not the other way around"
1,BaseRouterWebServicesTest.java,"base class for all the routerrmadminservice test cases. it provides utility
methods that can be used by the concrete test case classes.",base class for all the routerrmadminservice test cases.,,,,it provides utility methods that can be used by the concrete test case classes.,,
1,BatchedRequests.java,"a grouping of scheduling requests which are sent to the placementalgorithm
to place as a batch. the placement algorithm tends to give more optimal
placements if more requests are batched together.
placementalgorithmoutput attempt the number of times the requests in this
iterator type.","a grouping of scheduling requests which are sent to the placementalgorithm
to place as a batch
iterator type.","the placement algorithm tends to give more optimal
placements if more requests are batched together.",,,placementalgorithmoutput attempt the number of times the requests in this,,
1,BlockPlacementStatusWithNodeGroup.java,"an implementation of @see blockplacementstatus for
@see blockplacementpolicywithnodegroup",an implementation of @see blockplacementstatus,,for @see blockplacementpolicywithnodegroup,,,,for @see blockplacementpolicywithnodegroup
1,BlocksMap.java,"this class maintains the map from a block to its metadata.
block s metadata currently includes blockcollection it belongs to and
the datanodes that store the block.",this class maintains the map from a block to its metadata.,"block s metadata currently includes blockcollection it belongs to and
the datanodes that store the block.",,,,,
1,BlockUtils.java,utils functions to help block functions.,utils functions to help block functions,,utils functions to help block functions,,,,
1,ByteArrayEncodingState.java,"a utility class that maintains encoding state during an encode call using
byte array inputs.",a utility class that maintains encoding state during an encode call using byte array inputs.,a utility class that maintains encoding state during an encode call using byte array inputs.,,,,,
1,CapacitySchedulerPlanFollower.java,"this class implements a @link planfollower . this is invoked on a timer, and
it is in charge to publish the state of the @link plan s to the underlying
@link capacityscheduler . this implementation does so, by
adding removing resizing leaf queues in the scheduler, thus affecting the
dynamic behavior of the scheduler in a way that is consistent with the
content of the plan. it also updates the plan s view on how much resources
are available in the cluster.
this implementation of planfollower is relatively stateless, and it can
synchronize schedulers and plans that have arbitrary changes performing set
differences among existing queues . this makes it resilient to frequency of
synchronization, and rm restart issues no catch up is necessary .","this class implements a @link planfollower . this is invoked on a timer, and
it is in charge to publish the state of the @link plan s to the underlying
@link capacityscheduler .","this implementation does so, by
adding removing resizing leaf queues in the scheduler, thus affecting the
dynamic behavior of the scheduler in a way that is consistent with the
content of the plan. it also updates the plan s view on how much resources
are available in the cluster.","this implementation of planfollower is relatively stateless, and it can
synchronize schedulers and plans that have arbitrary changes performing set
differences among existing queues . this makes it resilient to frequency of
synchronization, and rm restart issues no catch up is necessary .",,,,
1,Classpath.java,"command line utility for getting the full classpath needed to launch a hadoop
client application. if the hadoop script is called with classpath as the
command, then it simply prints the classpath and exits immediately without
launching a jvm. the output likely will include wildcards in the classpath.
if there are arguments passed to the classpath command, then this class gets
called. with the glob argument, it prints the full classpath with wildcards
expanded. this is useful in situations where wildcard syntax isn t usable.
with the jar argument, it writes the classpath as a manifest in a jar file.
this is useful in environments with short limitations on the maximum command
line length, where it may not be possible to specify the full classpath in a
command. for example, the maximum command line length on windows is 8191
characters.",command line utility for getting the full classpath needed to launch a hadoop client application.,"if the hadoop script is called with classpath as the command, then it simply prints the classpath and exits immediately without launching a jvm. the output likely will include wildcards in the classpath. if there are arguments passed to the classpath command, then this class gets called. with the glob argument, it prints the full classpath with wildcards expanded. this is useful in situations where wildcard syntax isn t usable. with the jar argument, it writes the classpath as a manifest in a jar file. this is useful in environments with short limitations on the maximum command line length, where it may not be possible to specify the full classpath in a command. for example, the maximum command line length on windows is 8191 characters.",,,,,
1,ComparableVersion.java,"code source of this file http grepcode.com file repo1.maven.org maven2 org.apache.maven maven artifact 31.1 org apache maven artifact versioning comparableversion.java modifications made on top of the source 1. changed package org.apache.maven.artifact.versioning to package org.apache.hadoop.util 2. removed author tags to clear hadoop author tag warning
generic implementation of version comparison.
p features
ul
li mixing of code code dash and code . code dot separators, li
li transition between characters and digits also constitutes a separator
code 10alpha1 &gt 1, 0, alpha, 1 code li
li unlimited number of version components, li
li version components in the text can be digits or strings, li
li strings are checked for well known qualifiers and the qualifier ordering is used for version ordering.
well known qualifiers case insensitive are ul
li code alpha code or code a code li
li code beta code or code b code li
li code milestone code or code m code li
li code rc code or code cr code li
li code snapshot code li
li code the empty string code or code ga code or code final code li
li code sp code li
ul
unknown qualifiers are considered after known qualifiers, with lexical order always case insensitive ,
li
li a dash usually precedes a qualifier, and is always less important than something preceded with a dot. li
ul p

@see a href https cwiki.apache.org confluence display mavenold versioning versioning on maven wiki a

represents a numeric item in the version item list.

represents a string in the version item list, usually a qualifier.

represents a version list item. this class is used both for the global item list and for sub lists which start
with number in the version specification .","generic implementation of version comparison. represents a numeric item in the version item list.

represents a string in the version item list, usually a qualifier.

represents a version list item. this class is used both for the global item list and for sub lists which start
with number in the version specification .",,,,"generic implementation of version comparison.
p features
ul
li mixing of code code dash and code . code dot separators, li
li transition between characters and digits also constitutes a separator
code 10alpha1 &gt 1, 0, alpha, 1 code li
li unlimited number of version components, li
li version components in the text can be digits or strings, li
li strings are checked for well known qualifiers and the qualifier ordering is used for version ordering.
well known qualifiers case insensitive are ul
li code alpha code or code a code li
li code beta code or code b code li
li code milestone code or code m code li
li code rc code or code cr code li
li code snapshot code li
li code the empty string code or code ga code or code final code li
li code sp code li
ul
unknown qualifiers are considered after known qualifiers, with lexical order always case insensitive ,
li
li a dash usually precedes a qualifier, and is always less important than something preceded with a dot. li
ul p",,code source of this file http grepcode.com file repo1.maven.org maven2 org.apache.maven maven artifact 31.1 org apache maven artifact versioning comparableversion.java modifications made on top of the source 1. changed package org.apache.maven.artifact.versioning to package org.apache.hadoop.util 2. removed author tags to clear hadoop author tag warning . @see a href https cwiki.apache.org confluence display mavenold versioning versioning on maven wiki a
1,ConfigurationException.java,exception to throw in case of a configuration problem.,exception to throw in case of a configuration problem.,,,,,,
1,ContainerFinishData.java,"the class contains the fields that can be determined when
code rmcontainer code finishes, and that need to be stored persistently.","the class contains the fields that can be determined when code rmcontainer code finishes, and that need to be stored persistently.",,"the class contains the fields that can be determined when code rmcontainer code finishes, and that need to be stored persistently.",,,,
1,CpuTimeTracker.java,utility for sampling and computing cpu usage.,utility for sampling and computing cpu usage,,utility for sampling and computing cpu usage,,,,
1,DBProfile.java,"user visible configs based rocksdb tuning page. documentation for options.
p
https github.com facebook rocksdb blob master include rocksdb options.h
p
most tuning parameters are based on this url.
p
https github.com facebook rocksdb wiki setup options and basic tuning",user visible configs based rocksdb tuning page.,,,,"documentation for options.
p
https github.com facebook rocksdb blob master include rocksdb options.h
p
most tuning parameters are based on this url.
p
https github.com facebook rocksdb wiki setup options and basic tuning",,"documentation for options.
p
https github.com facebook rocksdb blob master include rocksdb options.h
p
most tuning parameters are based on this url.
p
https github.com facebook rocksdb wiki setup options and basic tuning"
1,DefaultAnonymizingRumenSerializer.java,default rumen json serializer.,default rumen json serializer.,,,,,,
1,DelegatingSSLSocketFactory.java,"a @link sslsocketfactory that can delegate to various ssl implementations.
specifically, either openssl or jsse can be used. openssl offers better
performance than jsse and is made available via the
a href https github.com wildfly wildfly openssl wildlfy openssl a
library.

p
the factory has several different modes of operation
ul
li openssl uses the wildly openssl library to delegate to the
system installed openssl. if the wildfly openssl integration is not
properly setup, an exception is thrown. li
li default attempts to use the openssl mode, if it cannot load the
necessary libraries, it falls back to the default jsee mode. li
li default jsse delegates to the jsse implementation of ssl, but
it disables the gcm cipher when running on java 8. li
li default jsse with gcm delegates to the jsse implementation of
ssl with no modification to the list of enabled ciphers. li
ul
p
this should only be modified within the #initializedefaultfactory
default indicates ordered, preferred openssl, if failed to load then fall
back to default jsse.

p
default jsse is not truly the the default jsse implementation because
the gcm cipher is disabled when running on java 8. however, the name
was not changed in order to preserve backwards compatibility. instead,
a new mode called default jsse with gcm delegates to the default jsse
implementation with no changes to the list of enabled ciphers.
p",a @link sslsocketfactory that can delegate to various ssl implementations.,"specifically, either openssl or jsse can be used. openssl offers better
performance than jsse and is made available via the
a href https github.com wildfly wildfly openssl wildlfy openssl a
library.","p
default jsse is not truly the the default jsse implementation because
the gcm cipher is disabled when running on java 8. however, the name
was not changed in order to preserve backwards compatibility. instead,
a new mode called default jsse with gcm delegates to the default jsse
implementation with no changes to the list of enabled ciphers.
p",,"p
the factory has several different modes of operation
ul
li openssl uses the wildly openssl library to delegate to the
system installed openssl. if the wildfly openssl integration is not
properly setup, an exception is thrown. li
li default attempts to use the openssl mode, if it cannot load the
necessary libraries, it falls back to the default jsee mode. li
li default jsse delegates to the jsse implementation of ssl, but
it disables the gcm cipher when running on java 8. li
li default jsse with gcm delegates to the jsse implementation of
ssl with no modification to the list of enabled ciphers. li
ul
p
this should only be modified within the #initializedefaultfactory
default indicates ordered, preferred openssl, if failed to load then fall
back to default jsse.",,"a @link sslsocketfactory that can delegate to various ssl implementations.
openssl offers better
performance than jsse and is made available via the
a href https github.com wildfly wildfly openssl wildlfy openssl a
library."
1,DelegationTokenIdentifier.java,a delegation token identifier that is specific to hdfs.,a delegation token identifier that is specific to hdfs.,a delegation token identifier that is specific to hdfs.,,,,,
1,DeleteApplicationHomeSubClusterRequest.java,"the request to code federation state store code to delete the mapping of
home subcluster of a submitted application.",the request to code federation state store code to delete the mapping of home subcluster of a submitted application.,,,,,,
1,DFSConfigKeys.java,"this class contains constants for configuration keys and default values
used in hdfs.",this class contains constants for configuration keys and default values used in hdfs.,,this class contains constants for configuration keys and default values used in hdfs.,,,,
1,DfsServlet.java,a base class for the servlets in dfs.,a base class for the servlets in dfs,,,,,,
1,DiskBalancerCluster.java,"diskbalancercluster represents the nodes that we are working against.
p
please note
semantics of inclusionlist and exclusionlists.
p
if a non empty inclusionlist is specified then the diskbalancer assumes that
the user is only interested in processing that list of nodes. this node list
is checked against the exclusionlist and only the nodes in inclusionlist but
not in exclusionlist is processed.
p
if inclusionlist is empty, then we assume that all live nodes in the nodes is
to be processed by diskbalancer. in that case diskbalancer will avoid any
nodes specified in the exclusionlist but will process all nodes in the
cluster.
p
in other words, an empty inclusionlist is means all the nodes otherwise
only a given list is processed and exclusionlist is always honored.",diskbalancercluster represents the nodes that we are working against.,"please note
semantics of inclusionlist and exclusionlists.
p
if a non empty inclusionlist is specified then the diskbalancer assumes that
the user is only interested in processing that list of nodes. this node list
is checked against the exclusionlist and only the nodes in inclusionlist but
not in exclusionlist is processed.
p
if inclusionlist is empty, then we assume that all live nodes in the nodes is
to be processed by diskbalancer. in that case diskbalancer will avoid any
nodes specified in the exclusionlist but will process all nodes in the
cluster.
p
in other words, an empty inclusionlist is means all the nodes otherwise
only a given list is processed and exclusionlist is always honored.",,,,,
1,DistributedSchedulingAllocateRequest.java,"object used by the application master when distributed scheduling is enabled,
in order to forward the @link allocaterequest for guaranteed containers to
the resource manager, and to notify the resource manager about the allocation
of opportunistic containers through the distributed scheduler.","object used by the application master when distributed scheduling is enabled,","in order to forward the @link allocaterequest for guaranteed containers to the resource manager, and to notify the resource manager about the allocation of opportunistic containers through the distributed scheduler.",,,,,"in order to forward the @link allocaterequest for guaranteed containers to the resource manager, and to notify the resource manager about the allocation of opportunistic containers through the distributed scheduler."
1,DockerKillCommand.java,encapsulates the docker kill command and its command line arguments.,encapsulates the docker kill command and its command line arguments.,,,,,,
1,EditLogTailer.java,"editlogtailer represents a thread which periodically reads from edits
journals and applies the transactions contained within to a given
fsnamesystem.

the thread which does the actual work of tailing edits journals and
applying the transactions to the fsns.

manage the active namenode proxy . this cannot just be the a single proxy since we could
failover across a number of namenodes, rather than just between an active and a standby.
p
we lazily get a proxy to one of the configured namenodes and attempt to make the request
against it. if it doesn t succeed, either because the proxy failed to be created or the request
failed, we try the next nn in the list. we try this up to the configuration maximum number of
retries before throwing up our hands. a working proxy is retained across attempts since we
expect the active namenode to switch rarely.
p
this mechanism is b very bad b for cases where we care about being i fast i it just
blindly goes and tries namenodes.","editlogtailer represents a thread which periodically reads from edits
journals and applies the transactions contained within to a given
fsnamesystem.","the thread which does the actual work of tailing edits journals and
applying the transactions to the fsns.","manage the active namenode proxy . this cannot just be the a single proxy since we could
failover across a number of namenodes, rather than just between an active and a standby.
p
we lazily get a proxy to one of the configured namenodes and attempt to make the request
against it. if it doesn t succeed, either because the proxy failed to be created or the request
failed, we try the next nn in the list. we try this up to the configuration maximum number of
retries before throwing up our hands. a working proxy is retained across attempts since we
expect the active namenode to switch rarely.
p
this mechanism is b very bad b for cases where we care about being i fast i it just
blindly goes and tries namenodes.",,,,
1,ErasureCodingPolicyManager.java,"this manages erasure coding policies predefined and activated in the system.
it loads customized policies and syncs with persisted ones in
namenode image.

this class is instantiated by the fsnamesystem.",this manages erasure coding policies predefined and activated in the system,"it loads customized policies and syncs with persisted ones in
namenode image.",,,this class is instantiated by the fsnamesystem.,,this class is instantiated by the fsnamesystem.
1,EventWatcher.java,"event watcher the re send a message after timeout.
p
event watcher will send the tracked payload event after a timeout period
unless a confirmation from the original event completion event is arrived.

@param timeout payload the type of the events which are tracked.
@param completion payload the type of event which could cancel the
tracking.",event watcher the re send a message after timeout.,,"event watcher will send the tracked payload event after a timeout period
unless a confirmation from the original event completion event is arrived.",,,,"@param timeout payload the type of the events which are tracked.
@param completion payload the type of event which could cancel the
tracking."
1,Expression.java,"interface describing an expression to be used in the
@link org.apache.hadoop.fs.shell.find.find command.",interface describing an expression to be used in the @link org.apache.hadoop.fs.shell.find.find command.,,to be used in the @link org.apache.hadoop.fs.shell.find.find command.,,,,to be used in the @link org.apache.hadoop.fs.shell.find.find command.
1,FairOrderingPolicy.java,"an orderingpolicy which orders schedulableentities for fairness see
fairscheduler
fairsharepolicy , generally, processes with lesser usage are lesser. if
sizedbasedweight is set to true then an application with high demand
may be prioritized ahead of an application with less usage. this
is to offset the tendency to favor small apps, which could result in
starvation for large apps if many small ones enter and leave the queue
continuously optional, default false","an orderingpolicy which orders schedulableentities for fairness see
fairscheduler
fairsharepolicy , generally, processes with lesser usage are lesser",,,,"if
sizedbasedweight is set to true then an application with high demand
may be prioritized ahead of an application with less usage. this
is to offset the tendency to favor small apps, which could result in
starvation for large apps if many small ones enter and leave the queue
continuously optional, default false",,"an orderingpolicy which orders schedulableentities for fairness see
fairscheduler
fairsharepolicy , generally, processes with lesser usage are lesser"
1,FederationPolicyException.java,generic policy exception.,generic policy exception,,,,,,
1,FederationProtocolPBTranslator.java,"helper class for setting getting data elements in an object backed by a
protobuf implementation.",helper class for setting getting data elements in an object backed by a protobuf implementation.,,for setting getting data elements in an object backed by a protobuf implementation.,,,,
1,FederationStateStoreInvalidInputException.java,"exception thrown by the @code federationmembershipstatestoreinputvalidator ,
@code federationapplicationhomesubclusterstoreinputvalidator ,
@code federationpolicystoreinputvalidator if the input is invalid.","exception thrown by the @code federationmembershipstatestoreinputvalidator ,",,,,,,"exception thrown by the @code federationmembershipstatestoreinputvalidator , @code federationapplicationhomesubclusterstoreinputvalidator , @code federationpolicystoreinputvalidator if the input is invalid."
1,FileSystemApplicationHistoryStore.java,"file system implementation of @link applicationhistorystore . in this
implementation, one application will have just one file in the file system,
which contains all the history data of one application, and its attempts and
containers. @link #applicationstarted applicationstartdata is supposed to
be invoked first when writing any history data of one application and it will
open a file, while @link #applicationfinished applicationfinishdata is
supposed to be last writing operation and will close the file.",file system implementation of @link applicationhistorystore .,"in this implementation, one application will have just one file in the file system, which contains all the history data of one application, and its attempts and containers. @link #applicationstarted applicationstartdata is supposed to
be invoked first when writing any history data of one application and it will
open a file, while @link #applicationfinished applicationfinishdata is
supposed to be last writing operation and will close the file.",,,,,"file system implementation of @link applicationhistorystore . @link #applicationstarted applicationstartdata is supposed to
be invoked first when writing any history data of one application and it will
open a file, while @link #applicationfinished applicationfinishdata is
supposed to be last writing operation and will close the file."
1,FsConstants.java,filesystem related constants.,filesystem related constants,,,,,,
1,GetApplicationHomeSubClusterResponsePBImpl.java,"protocol buffer based implementation of
@link getapplicationhomesubclusterresponse .",protocol buffer based implementation of @link getapplicationhomesubclusterresponse .,,,,,,protocol buffer based implementation of @link getapplicationhomesubclusterresponse .
1,GetNamespaceInfoResponse.java,api response for listing hdfs namespaces present in the state store.,api response for listing hdfs namespaces present in the state store.,,,,,,
1,GetNodesToAttributesResponse.java,"p
the response sent by the code resourcemanager code to a client requesting
nodes to attributes mapping.
p

@see applicationclientprotocol#getnodestoattributes
getnodestoattributesrequest",the response sent by the code resourcemanager code to a client requesting nodes to attributes mapping.,,,,,,@see applicationclientprotocol#getnodestoattributes getnodestoattributesrequest
1,GetSafeModeRequestPBImpl.java,"protobuf implementation of the state store api object
getsafemoderequest.",protobuf implementation of the state store api object getsafemoderequest.,,,,,,
1,GetSubClusterPolicyConfigurationRequestPBImpl.java,"protocol buffer based implementation of
@link getsubclusterpolicyconfigurationrequest .",protocol buffer based implementation of @link getsubclusterpolicyconfigurationrequest .,,,,,,protocol buffer based implementation of @link getsubclusterpolicyconfigurationrequest .
1,HadoopIllegalArgumentException.java,"indicates that a method has been passed illegal or invalid argument. this
exception is thrown instead of illegalargumentexception to differentiate the
exception thrown in hadoop implementation from the one thrown in jdk.",indicates that a method has been passed illegal or invalid argument.,this exception is thrown instead of illegalargumentexception to differentiate the exception thrown in hadoop implementation from the one thrown in jdk.,,,,,
1,HashResolver.java,order the destinations based on consistent hashing.,order the destinations based on consistent hashing.,,,,,,
1,HttpHeaderConfigurations.java,responsible to keep all abfs http headers here.,,responsible to keep all abfs http headers here.,,,,,
1,IDataLoader.java,an idataloader loads data on demand,an idataloader loads data on demand,,,,,,
1,InconsistentS3ClientFactory.java,"s3 client factory used for testing with eventual consistency fault injection.
this client is for testing i only i it is in the production
@code hadoop aws module to enable integration tests to use this
just by editing the hadoop configuration used to bring up the client.",s3 client factory used for testing with eventual consistency fault injection.,,,,"this client is for testing i only i it is in the production
@code hadoop aws module to enable integration tests to use this
just by editing the hadoop configuration used to bring up the client.",,
1,InfoKeyHandler.java,executes info object.,executes info object,,,,,,
1,InvalidContainerRequestException.java,"thrown when an arguments are combined to construct a
code amrmclient.containerrequest code in an invalid way.",thrown when an arguments are combined to construct a code amrmclient.containerrequest code in an invalid way.,,,,,,
1,ITestAbfsReadWriteAndSeek.java,"test read, write and seek.
uses package private methods in abfsconfiguration, which is why it is in
this package.","test read, write and seek.",,"uses package private methods in abfsconfiguration, which is why it is in this package.",,,,
1,ITestAzureNativeContractSeek.java,contract test.,contract test,,,,,,
1,ITestCommitOperations.java,"test the low level binding of the s3a fs to the magic commit mechanism,
and handling of the commit operations.
this is done with an inconsistent client.","test the low level binding of the s3a fs to the magic commit mechanism, and handling of the commit operations.",,,,this is done with an inconsistent client.,,
1,ITestListPerformance.java,test list performance.,test list performance,,,,,,
1,ITestS3Select.java,"test the s3 select feature with some basic sql commands.
executed if the destination store declares its support for the feature.",test the s3 select feature with some basic sql commands.,executed if the destination store declares its support for the feature.,,,,,
1,ITestS3SelectCLI.java,"test the s3 select cli through some operations against landsat
and files generated from it.",test the s3 select cli through some operations against landsat and files generated from it.,,,,,,
1,KerberosDelegationTokenAuthenticator.java,"the code kerberosdelegationtokenauthenticator code provides support for
kerberos spnego authentication mechanism and support for hadoop delegation
token operations.
p
it falls back to the @link pseudodelegationtokenauthenticator if the http
endpoint does not trigger a spnego authentication","the code kerberosdelegationtokenauthenticator code provides support for
kerberos spnego authentication mechanism and support for hadoop delegation
token operations.","it falls back to the @link pseudodelegationtokenauthenticator if the http
endpoint does not trigger a spnego authentication",,,,,"it falls back to the @link pseudodelegationtokenauthenticator if the http
endpoint does not trigger a spnego authentication"
1,LocalizationStatusPBImpl.java,pb impl of @link localizationstatus .,pb impl of @link localizationstatus .,,,,,,pb impl of @link localizationstatus .
1,LocatedFileStatus.java,this class defines a filestatus that includes a file s block locations.,this class defines a filestatus that includes a file s block locations,,,,,,
1,LoggedTask.java,"a @link loggedtask represents a hadoop task that is part of a hadoop job.
it knows about the pssibly empty sequence of attempts, its i o footprint,
and its runtime.
all of the public methods are simply accessors for the instance variables we
want to write out in the json files.",a @link loggedtask represents a hadoop task that is part of a hadoop job.,"it knows about the pssibly empty sequence of attempts, its i o footprint,
and its runtime.",,,"all of the public methods are simply accessors for the instance variables we
want to write out in the json files.",,a @link loggedtask represents a hadoop task that is part of a hadoop job.
1,LogParserUtil.java,common utility functions for @link logparser .,common utility functions for @link logparser,,,,,,common utility functions for @link logparser
1,LogWebService.java,support only atsv2 client only.,,,,support only atsv2 client only,,,
1,LRUCacheHashMap.java,lru cache with a configurable maximum cache size and access order.,lru cache with a configurable maximum cache size and access order.,lru cache with a configurable maximum cache size and access order.,,,,,
1,MapContext.java,"the context that is given to the @link mapper .
@param keyin the key input type to the mapper
@param valuein the value input type to the mapper
@param keyout the key output type from the mapper
@param valueout the value output type from the mapper",the context that is given to the @link mapper .,,,,"@param keyin the key input type to the mapper
@param valuein the value input type to the mapper
@param keyout the key output type from the mapper
@param valueout the value output type from the mapper",,the context that is given to the @link mapper . @param keyin the key input type to the mapper @param valuein the value input type to the mapper @param keyout the key output type from the mapper @param valueout the value output type from the mapper
1,MetaBlockAlreadyExists.java,exception meta block with the same name already exists.,exception meta block with the same name already exists.,,,,,,
1,MetricsCache.java,"a metrics cache for sinks that don t support sparse updates.

cached record",a metrics cache for sinks that don t support sparse updates. context of the queues in scheduler.,cached record,,,,,
1,NativeBatchProcessor.java,"used to create channel, transfer data and command between java and native",,,"used to create channel, transfer data and command between java and native",,,,
1,NativeSingleLineParser.java,"this sample parser will parse the sample log and extract the resource
skyline.
p the expected log format is normalizedjobname numinstances submittime
starttime endtime jobinstancename memusage coreusage","this sample parser will parse the sample log and extract the resource
skyline.","p the expected log format is normalizedjobname numinstances submittime
starttime endtime jobinstancename memusage coreusage",,,,,
1,Nfs3Metrics.java,"this class is for maintaining the various nfs gateway activity statistics and
publishing them through the metrics interfaces.",this class is for maintaining the various nfs gateway activity statistics and publishing them through the metrics interfaces.,,,,,,
1,Nfs3Status.java,success or error status is reported in nfs3 responses.,success or error status is reported in nfs3 responses.,,,,,,
1,Node2ObjectsMap.java,"this data structure maintains the list of containers that is on a datanode.
this information is built from the dn container reports.",this data structure maintains the list of containers that is on a datanode.,this information is built from the dn container reports.,,,,,
1,NodeUpdateType.java,"p taxonomy of the code nodestate code that a
code node code might transition into. p",p taxonomy of the code nodestate code that a code node code might transition into. p,p taxonomy of the code nodestate code that a code node code might transition into. p,,,,,
1,NullOutputFormat.java,consume all outputs and put them in dev null.,consume all outputs and put them in dev null.,consume all outputs and put them in dev null.,,,,,
1,OMNodeDetails.java,"this class stores om node details.

builder class for omnodedetails.","this class stores om node details.

builder class for omnodedetails.",,,,,,builder class for omnodedetails.
1,OpportunisticContainersStatusPBImpl.java,protocol buffer implementation of opportunisticcontainersstatus.,protocol buffer implementation of opportunisticcontainersstatus,,,,,,
1,OzoneObj.java,"class representing an unique ozone object.

ozone objects supported for acl.

ozone objects supported for acl.",class representing an unique ozone object,ozone objects supported for acl.,,,,,
1,Parser.java,a class for parsing outputs,a class for parsing outputs,,,,,,
1,PartialOutputCommitter.java,"interface for an @link org.apache.hadoop.mapreduce.outputcommitter
implementing partial commit of task output, as during preemption.","interface for an @link org.apache.hadoop.mapreduce.outputcommitter implementing partial commit of task output, as during preemption.",,,,,,interface for an @link org.apache.hadoop.mapreduce.outputcommitter
1,PartitionResourcesInfo.java,this class represents queue user resource usage info for a given partition,this class represents queue user resource usage info for a given partition,,this class represents queue user resource usage info for a given partition,,,,
1,PlanningQuotaException.java,"this exception is thrown if the user quota is exceed while accepting or
updating a reservation.",this exception is thrown if the user quota is exceed while accepting or updating a reservation.,,,,,,
1,ProcessIdFileReader.java,helper functionality to read the pid from a file.,helper functionality to read the pid from a file.,,,,,,
1,QuasiMonteCarlo.java,"a map reduce program that estimates the value of pi
using a quasi monte carlo qmc method.
arbitrary integrals can be approximated numerically by qmc methods.
in this example,
we use a qmc method to approximate the integral i int s f x dx ,
where s 0,1 ^2 is a unit square,
x x 1,x 2 is a 2 dimensional point,
and f is a function describing the inscribed circle of the square s ,
f x 1 if 2x 1 1 ^2 2x 2 1 ^2 &lt 1 and f x 0 , otherwise.
it is easy to see that pi is equal to 4i .
so an approximation of pi is obtained once i is evaluated numerically.
there are better methods for computing pi.
we emphasize numerical approximation of arbitrary integrals in this example.
for computing many digits of pi, consider using bbp.

the implementation is discussed below.

mapper
generate points in a unit square
and then count points inside outside of the inscribed circle of the square.

reducer
accumulate points inside outside results from the mappers.

let numtotal numinside numoutside.
the fraction numinside numtotal is a rational approximation of
the value area of the circle area of the square i ,
where the area of the inscribed circle is pi 4
and the area of unit square is 1.
finally, the estimated value of pi is 4 numinside numtotal . 2 dimensional halton sequence h i ,
where h i is a 2 dimensional point and i 1 is the index.
halton sequence is used to generate sample points for pi estimation.
mapper class for pi estimation.
generate points in a unit square
and then count points inside outside of the inscribed circle of the square.

reducer class for pi estimation.
accumulate points inside outside results from the mappers.",a map reduce program that estimates the value of pi.,"using a quasi monte carlo qmc method. arbitrary integrals can be approximated numerically by qmc methods. there are better methods for computing pi.
we emphasize numerical approximation of arbitrary integrals in this example.
for computing many digits of pi, consider using bbp.

the implementation is discussed below.

mapper
generate points in a unit square
and then count points inside outside of the inscribed circle of the square.

reducer
accumulate points inside outside results from the mappers. mapper class for pi estimation.
generate points in a unit square
and then count points inside outside of the inscribed circle of the square.

reducer class for pi estimation.
accumulate points inside outside results from the mappers.",,,"in this example,
we use a qmc method to approximate the integral i int s f x dx ,
where s 0,1 ^2 is a unit square,
x x 1,x 2 is a 2 dimensional point,
and f is a function describing the inscribed circle of the square s ,
f x 1 if 2x 1 1 ^2 2x 2 1 ^2 &lt 1 and f x 0 , otherwise.
it is easy to see that pi is equal to 4i .
so an approximation of pi is obtained once i is evaluated numerically.
there are better methods for computing pi.
we emphasize numerical approximation of arbitrary integrals in this example.
for computing many digits of pi, consider using bbp.",,"in this example,
we use a qmc method to approximate the integral i int s f x dx ,"
1,Query.java,"check if a record matches a query. the query is usually a partial record.

@param t type of the record to query.",check if a record matches a query.,the query is usually a partial record.,,,,,@param t type of the record to query.
1,QueueName.java,represents a queue name.,represents a queue name.,,,,,,
1,RandomKeyGenerator.java,"data generator tool to generate as much keys as possible.

wrapper to hold ozone keyvalidate entry.

validates the write done in ozone cluster.",data generator tool to generate as much keys as possible.,"wrapper to hold ozone keyvalidate entry.

validates the write done in ozone cluster.",,,,,
1,ReencryptionUpdater.java,"class for finalizing re encrypt edek operations, by updating file xattrs with
edeks returned from reencryption.
p
the tasks are submitted by reencryptionhandler.
p
it is assumed only 1 updater will be running, since updating file xattrs
requires namespace write lock, and performance gain from multi threading
is limited.

class to track re encryption submissions of a single zone. it contains
all the submitted futures, and statistics about how far the futures are
processed.

class representing the task for one batch of a re encryption command. it
also contains statistics about how far this single batch has been executed.

class that encapsulates re encryption details of a file.","class for finalizing re encrypt edek operations. class representing the task for one batch of a re encryption command. it
also contains statistics about how far this single batch has been executed. class that encapsulates re encryption details of a file.","by updating file xattrs with edeks returned from reencryption. p the tasks are submitted by reencryptionhandler. p . it is assumed only 1 updater will be running, since updating file xattrs
requires namespace write lock, and performance gain from multi threading
is limited.

class to track re encryption submissions of a single zone. it contains
all the submitted futures, and statistics about how far the futures are
processed. it contains the
file inode, stores the initial edek of the file, and the new edek
after re encryption.
p
assumptions are the object initialization happens when dir lock is held,
and inode is valid and is encrypted during initialization.
p
namespace changes may happen during re encryption, and if inode is changed
the re encryption is skipped.",class for finalizing re encrypt edek operations,,,,
1,RegistryInternalConstants.java,"internal constants for the registry.

these are the things which aren t visible to users.",internal constants for the registry.,,these are the things which aren t visible to users.,,,,
1,RegistryOperations.java,registry operations,registry operations,,,,,,
1,ReInitializeContainerRequestPBImpl.java,checkstyle off,,,,,,,
1,ResourceBlacklistRequest.java,"@link resourceblacklistrequest encapsulates the list of resource names which should be added or removed from the em blacklist em of resources for the application.
@see resourcerequest
@see applicationmasterprotocol#allocate org.apache.hadoop.yarn.api.protocolrecords.allocaterequest",@link resourceblacklistrequest encapsulates the list of resource names which should be added or removed from the em blacklist em of resources for the application.,,,,,,"@link resourceblacklistrequest encapsulates the list of resource names which should be added or removed from the em blacklist em of resources for the application.
@see resourcerequest
@see applicationmasterprotocol#allocate org.apache.hadoop.yarn.api.protocolrecords.allocaterequest"
1,ResourceRequestsJsonVerifications.java,"performs value verifications on
@link org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.resourcerequestinfo
objects against the values of @link resourcerequest . with the help of the
@link builder , users can also make verifications of the custom resource
types and its values.

builder class for @link resourcerequestsjsonverifications .","performs value verifications on
@link org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.resourcerequestinfo
objects against the values of @link resourcerequest .

builder class for @link resourcerequestsjsonverifications .","with the help of the
@link builder , users can also make verifications of the custom resource
types and its values.",,,,,"performs value verifications on
@link org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.resourcerequestinfo
objects against the values of @link resourcerequest . with the help of the
@link builder , users can also make verifications of the custom resource
types and its values.

builder class for @link resourcerequestsjsonverifications ."
1,RetriableDirectoryCreateCommand.java,"this class extends retriable command to implement the creation of directories
with retries on failure.",this class extends retriable command to implement the creation of directories with retries on failure.,,,,,,
1,RMAdminRequestInterceptor.java,"defines the contract to be implemented by the request intercepter classes,
that can be used to intercept and inspect messages sent from the client to
the resource manager.",defines the contract to be implemented by the request intercepter classes,,,,that can be used to intercept and inspect messages sent from the client to the resource manager.,,
1,RSLegacyRawErasureCoderFactory.java,a raw coder factory for the legacy raw reed solomon coder in java.,a raw coder factory for the legacy raw reed solomon coder in java.,,,,,,
1,SafeModeException.java,"this exception is thrown when the name node is in safe mode.
client cannot modified namespace until the safe mode is off.",,,,,client cannot modified namespace until the safe mode is off.,,
1,SchedulerQueueManager.java,context of the queues in scheduler.,context of the queues in scheduler.,,,,,,
1,SequenceFileRecordReader.java,an @link recordreader for @link sequencefile s.,an @link recordreader for @link sequencefile s.,,,,,,an @link recordreader for @link sequencefile s.
1,ShellBasedUnixGroupsMapping.java,"a simple shell based implementation of @link groupmappingserviceprovider that exec s the code groups code shell command to fetch the group
memberships of a given user.",a simple shell based implementation of @link groupmappingserviceprovider,that exec s the code groups code shell command to fetch the group memberships of a given user.,,,,,
1,StandardSocketFactory.java,specialized socketfactory to create sockets with a socks proxy,specialized socketfactory to create sockets with a socks proxy,,,,,,
1,StateStoreFileSystemImpl.java,"@link statestoredriver implementation based on a filesystem. the common
implementation uses hdfs as a backend. the path can be specified setting
dfs.federation.router.driver.fs.path hdfs host port path to store.",@link statestoredriver implementation based on a filesystem.,the common implementation uses hdfs as a backend.,,,the path can be specified setting dfs.federation.router.driver.fs.path hdfs host port path to store.,,@link statestoredriver implementation based on a filesystem.
1,StreamBaseRecordReader.java,"shared functionality for hadoopstreaming formats. a custom reader can be
defined to be a recordreader with the constructor below and is selected with
the option bin hadoopstreaming inputreader ...
@see streamxmlrecordreader",shared functionality for hadoopstreaming formats.,,,,"a custom reader can be
defined to be a recordreader with the constructor below and is selected with
the option bin hadoopstreaming inputreader ...",,a custom reader can be defined to be a recordreader with the constructor below and is selected with the option bin hadoopstreaming inputreader ... @see streamxmlrecordreader
1,StructureGenerator.java,"this program generates a random namespace structure with the following
constraints
1. the number of subdirectories is a random number in minwidth, maxwidth .
2. the maximum depth of each subdirectory is a random number 2 maxdepth 3, maxdepth .
3. files are randomly placed in the empty directories. the size of each
file follows gaussian distribution.
the generated namespace structure is described by two files in the output
directory. each line of the first file contains the full name of a leaf directory. each line of the second file contains
the full name of a file and its size, separated by a blank.
the synopsis of the command is
java structuregenerator
maxdepth maxdepth maximum depth of the directory tree default is 5.
minwidth minwidth minimum number of subdirectories per directories default is 1
maxwidth maxwidth maximum number of subdirectories per directories default is 5
numoffiles #offiles the total number of files default is 10.
avgfilesize avgfilesizeinblocks average size of blocks default is 1.
outdir outdir output directory default is the current directory.
seed seed random number generator seed default is the current time.
in memory representation of a directory in memory representation of a file",this program generates a random namespace structure,"this program generates a random namespace structure with the following
constraints
1. the number of subdirectories is a random number in minwidth, maxwidth .
2. the maximum depth of each subdirectory is a random number 2 maxdepth 3, maxdepth .
3. files are randomly placed in the empty directories. the size of each
file follows gaussian distribution.
the generated namespace structure is described by two files in the output
directory. each line of the first file contains the full name of a leaf directory. each line of the second file contains
the full name of a file and its size, separated by a blank.",,,"the synopsis of the command is
java structuregenerator
maxdepth maxdepth maximum depth of the directory tree default is 5.
minwidth minwidth minimum number of subdirectories per directories default is 1
maxwidth maxwidth maximum number of subdirectories per directories default is 5
numoffiles #offiles the total number of files default is 10.
avgfilesize avgfilesizeinblocks average size of blocks default is 1.
outdir outdir output directory default is the current directory.
seed seed random number generator seed default is the current time.
in memory representation of a directory in memory representation of a file",,
1,SwiftBadRequestException.java,"thrown to indicate that data locality can t be calculated or requested path is incorrect.
data locality can t be calculated if openstack swift version is old.",thrown to indicate that data locality can t be calculated or requested path is incorrect.,,,data locality can t be calculated if openstack swift version is old.,,,
1,SwiftRestClient.java,"this implements the client side of the swift rest api.

the core actions put, get and query data in the swift object store,
after authenticating the client.

b logging b

logging at debug level displays detail about the actions of this
client, including http requests and responses excluding authentication
details.

get the current operation statistics.
@return a snapshot of the statistics

base class for all swift rest operations.

@param m request
@param r result

get the current operation statistics.
@return a snapshot of the statistics

there s a special type for auth messages, so that low level
message handlers can react to auth failures differently from everything
else.

get the current operation statistics.
@return a snapshot of the statistics

generate an auth message.
@param r response

get the current operation statistics.
@return a snapshot of the statistics

create operation.

@param r result type

get the current operation statistics.
@return a snapshot of the statistics

delete operation.

@param r",this implements the client side of the swift rest api.,"the core actions put, get and query data in the swift object store, after authenticating the client. b logging b logging at debug level displays detail about the actions of this client, including http requests and responses excluding authentication details.",,,,,"get the current operation statistics. @return a snapshot of the statistics. base class for all swift rest operations.

@param m request
@param r result

get the current operation statistics.
@return a snapshot of the statistics

get the current operation statistics.
@return a snapshot of the statistics

generate an auth message.
@param r response

get the current operation statistics.
@return a snapshot of the statistics

create operation.

@param r result type

get the current operation statistics.
@return a snapshot of the statistics

delete operation.

@param r"
1,TableConfig.java,class that maintains table configuration.,class that maintains table configuration.,,,,,,
1,TestAddBlock.java,test addblockop is written and read correctly,test addblockop is written and read correctly,test addblockop is written and read correctly,,,,,
1,TestAdlContractDeleteLive.java,test delete contract test.,test delete contract test.,,,,,,
1,TestAdlContractSeekLive.java,test seek operation on adl file system.,test seek operation on adl file system.,,,,,,
1,TestConfServlet.java,"basic test case that the confservlet can write configuration
to its output in xml and json format.",basic test case that the confservlet can write configuration to its output in xml and json format.,basic test case that the confservlet can write configuration to its output in xml and json format.,,,,,
1,TestConnCache.java,"this class tests the client connection caching in a single node
mini cluster.",this class tests the client connection,caching in a single node mini cluster.,,,,,
1,TestCustomOauthTokenProvider.java,"test custom oauth token providers.
this is a unit test not an e2e integration test because that would
require oauth auth setup, always.
instead this just checks that the creation works and that everything
is propagated.",test custom oauth token providers.,"instead this just checks that the creation works and that everything
is propagated.","this is a unit test not an e2e integration test because that would require oauth auth setup, always.",,,,
1,TestDataDrivenDBInputFormat.java,"import org.apache.hadoop.examples.dbcountpageview
test aspects of datadrivendbinputformat",test aspects of datadrivendbinputformat,,,,,,
1,TestDominantResourceFairnessPolicy.java,"comparator.compare sched1, sched2 0 means that sched1 should get a
container before sched2",,"comparator.compare sched1, sched2 0 means that sched1 should get a container before sched2",,,,,
1,TestEditLogFileOutputStream.java,test the editlogfileoutputstream,test the editlogfileoutputstream,,,,,,
1,TestFederationPolicyUtils.java,unit test for @link federationpolicyutils .,unit test for @link federationpolicyutils .,,,,,,unit test for @link federationpolicyutils .
1,TestFileSizeCountTask.java,unit test for file size count task.,unit test for file size count task,,,,,,
1,TestHandler.java,tests handler interface.,tests handler interface.,,,,,,
1,TestHDFSServerPorts.java,"this test checks correctness of port usage by hdfs components
namenode, datanode, secondarynamenode and backupnode.
the correct behavior is br when a specific port is provided the server must either start on that port or fail by throwing @link java.net.bindexception . br
if the port 0 ephemeral then the server should choose a free port and start on it.","this test checks correctness of port usage by hdfs components
namenode, datanode, secondarynamenode and backupnode.","the correct behavior is br when a specific port is provided the server must either start on that port or fail by throwing @link java.net.bindexception . br
if the port 0 ephemeral then the server should choose a free port and start on it.",,,,,
1,TestKeyInputStream.java,tests @link keyinputstream .,tests @link keyinputstream .,,,,,,tests @link keyinputstream .
1,TestMetricsVisitor.java,test the metric visitor interface,test the metric visitor interface,,,,,,
1,TestNativeAzureFileSystemUploadLogic.java,"tests for the upload, buffering and flush logic in wasb.
just an arbitrary number so that the values i write have a predictable
various scenarios to test in how often we flush data while uploading.","tests for the upload, buffering and flush logic in wasb.",just an arbitrary number so that the values i write have a predictable,various scenarios to test in how often we flush data while uploading.,,,,
1,TestOmMultipartKeyInfoCodec.java,this class tests ommultipartkeyinfocodec.,this class tests ommultipartkeyinfocodec.,,,,,,
1,TestOMVolumeRequest.java,base test class for volume request.,base test class for volume request,,base test class for volume request,,,,
1,TestOzoneNativeAuthorizer.java,test class for @link ozonenativeauthorizer .,test class for @link ozonenativeauthorizer .,,,,,,test class for @link ozonenativeauthorizer .
1,TestProtoBufRpc.java,"test for testing protocol buffer based rpc mechanism.
this test depends on test.proto definition of types in src test proto
and protobuf service definition from src test test rpc service.proto",test for testing protocol buffer based rpc mechanism.,"this test depends on test.proto definition of types in src test proto
and protobuf service definition from src test test rpc service.proto",,,,,
1,TestRDBStore.java,rdbstore tests.,rdbstore tests.,,,,,,
1,TestRegistrySecurityHelper.java,test for registry security operations,test for registry security operations,,,,,,
1,TestRollingFileSystemSinkWithLocal.java,"test the @link rollingfilesystemsink class in the context of the local file
system.",test the @link rollingfilesystemsink class in the context of the local file system.,,,,,,test the @link rollingfilesystemsink class in the context of the local file system.
1,TestRouterWebServiceUtil.java,test class to validate routerwebserviceutil methods.,test class to validate routerwebserviceutil methods.,,,,,,
1,TestS3BucketManager.java,tests for s3 bucket manager.,tests for s3 bucket manager.,,,,,,tests for s3 bucket manager.
1,TestSaveNamespace.java,"test various failure scenarios during savenamespace operation.
cases covered
ol
li recover from failure while saving into the second storage directory li
li recover from failure while moving current into lastcheckpoint.tmp li
li recover from failure while moving lastcheckpoint.tmp into
previous.checkpoint li
li recover from failure while rolling edits file li
ol",test various failure scenarios during savenamespace operation.,"cases covered
ol
li recover from failure while saving into the second storage directory li
li recover from failure while moving current into lastcheckpoint.tmp li
li recover from failure while moving lastcheckpoint.tmp into
previous.checkpoint li
li recover from failure while rolling edits file li
ol",,,,,
1,TestSCMDatanodeHeartbeatDispatcher.java,this class tests the behavior of scmdatanodeheartbeatdispatcher.,this class tests the behavior of scmdatanodeheartbeatdispatcher.,,,,,,
1,TestSequenceFile.java,support for flat files of binary key value pairs.,support for flat files of binary key value pairs,support for flat files of binary key value pairs,,,,,
1,TestSeveralNameNodes.java,test that we can start several and run with namenodes on the same minicluster,test that we can start several and run with namenodes on the same minicluster,we can start several and run with namenodes on the same minicluster,,,,,
1,TestSwiftFileSystemContract.java,"this is the full filesystem contract test which requires the
default config set up to point to a filesystem.

some of the tests override the base class tests these
are where swiftfs does not implement those features, or
when the behavior of swiftfs does not match the normal
contract which normally means that directories and equal files
are being treated as equal.","this is the full filesystem contract test which requires the
default config set up to point to a filesystem.",,"some of the tests override the base class tests these
are where swiftfs does not implement those features, or
when the behavior of swiftfs does not match the normal
contract which normally means that directories and equal files
are being treated as equal.",,,,
1,TestTaskCommit.java,"special committer that does not cleanup temporary files in
aborttask
the framework s fileoutputcommitter cleans up any temporary
files left behind in aborttask. we want the test case to
find these files and hence short circuit aborttask.

special committer that always requires commit.","special committer that does not cleanup temporary files in
aborttask",,"the framework s fileoutputcommitter cleans up any temporary
files left behind in aborttask. we want the test case to
find these files and hence short circuit aborttask.",,special committer that always requires commit.,,
1,TestTaskContext.java,tests context api and @link statusreporter#getprogress via @link taskattemptcontext#getprogress api .,tests context api and @link statusreporter#getprogress via @link taskattemptcontext#getprogress api .,,,,,,tests context api and @link statusreporter#getprogress via @link taskattemptcontext#getprogress api .
1,TestTopCLI.java,test class for topcli.,test class for topcli.,,,,,,
1,TestUpgradeDomainBlockPlacementPolicy.java,"end to end test case for upgrade domain
the test configs upgrade domain for nodes via admin json
config file and put some nodes to decommission state.
the test then verifies replicas are placed on the nodes that
satisfy the upgrade domain policy.",end to end test case for upgrade domain,"the test configs upgrade domain for nodes via admin json
config file and put some nodes to decommission state.
the test then verifies replicas are placed on the nodes that
satisfy the upgrade domain policy.",,,,,
1,TextInputFormat.java,"an @link inputformat for plain text files. files are broken into lines.
either linefeed or carriage return are used to signal end of line. keys are
the position in the file, and values are the line of text..",an @link inputformat for plain text files. files are broken into lines.,"either linefeed or carriage return are used to signal end of line. keys are the position in the file, and values are the line of text..",,,,,an @link inputformat for plain text files. files are broken into lines.
1,TimelineDataToRetrieve.java,"encapsulates information regarding which data to retrieve for each entity
while querying. br
data to retrieve contains the following br
ul
li b confstoretrieve b used for deciding which configs to return
in response. this is represented as a @link timelinefilterlist object
containing @link timelineprefixfilter objects. these can either be
exact config keys or prefixes which are then compared against config
keys to decide configs inside entities to return in response. if null
or empty, all configurations will be fetched if fieldstoretrieve
contains @link field#configs or @link field#all . this should not be
confused with configfilters which is used to decide which entities to
return instead. li
li b metricstoretrieve b used for deciding which metrics to return
in response. this is represented as a @link timelinefilterlist object
containing @link timelineprefixfilter objects. these can either be
exact metric ids or prefixes which are then compared against metric
ids to decide metrics inside entities to return in response. if null
or empty, all metrics will be fetched if fieldstoretrieve contains
@link field#metrics or @link field#all . this should not be confused
with metricfilters which is used to decide which entities to return
instead. li
li b fieldstoretrieve b specifies which fields of the entity
object to retrieve, see @link field . if null, retrieves 3 fields,
namely entity id, entity type and entity created time. all fields will
be returned if @link field#all is specified. li
li b metricslimit b if fieldstoretrieve contains metrics all or
metricstoretrieve is specified, this limit defines an upper limit to the
number of metrics to return. this parameter is ignored if metrics are not to
be fetched. li
li b metricstimestart b metric values before this timestamp would not
be retrieved. if null or @literal 0 , defaults to 0. li
li b metricstimeend b metric values after this timestamp would not
be retrieved. if null or @literal 0 , defaults to @link long#max value .
li
ul","encapsulates information regarding which data to retrieve for each entity
while querying. br","data to retrieve contains the following br
ul
li b confstoretrieve b used for deciding which configs to return
in response. this is represented as a @link timelinefilterlist object
containing @link timelineprefixfilter objects. these can either be
exact config keys or prefixes which are then compared against config
keys to decide configs inside entities to return in response. if null
or empty, all configurations will be fetched if fieldstoretrieve
contains @link field#configs or @link field#all . this should not be
confused with configfilters which is used to decide which entities to
return instead. li
li b metricstoretrieve b used for deciding which metrics to return
in response. this is represented as a @link timelinefilterlist object
containing @link timelineprefixfilter objects. these can either be
exact metric ids or prefixes which are then compared against metric
ids to decide metrics inside entities to return in response. if null
or empty, all metrics will be fetched if fieldstoretrieve contains
@link field#metrics or @link field#all . this should not be confused
with metricfilters which is used to decide which entities to return
instead. li
li b fieldstoretrieve b specifies which fields of the entity
object to retrieve, see @link field . if null, retrieves 3 fields,
namely entity id, entity type and entity created time. all fields will
be returned if @link field#all is specified. li
li b metricslimit b if fieldstoretrieve contains metrics all or
metricstoretrieve is specified, this limit defines an upper limit to the
number of metrics to return. this parameter is ignored if metrics are not to
be fetched. li
li b metricstimestart b metric values before this timestamp would not
be retrieved. if null or @literal 0 , defaults to 0. li
li b metricstimeend b metric values after this timestamp would not
be retrieved. if null or @literal 0 , defaults to @link long#max value .
li
ul",,,,,"data to retrieve contains the following br
ul
li b confstoretrieve b used for deciding which configs to return
in response. this is represented as a @link timelinefilterlist object
containing @link timelineprefixfilter objects. these can either be
exact config keys or prefixes which are then compared against config
keys to decide configs inside entities to return in response. if null
or empty, all configurations will be fetched if fieldstoretrieve
contains @link field#configs or @link field#all . this should not be
confused with configfilters which is used to decide which entities to
return instead. li
li b metricstoretrieve b used for deciding which metrics to return
in response. this is represented as a @link timelinefilterlist object
containing @link timelineprefixfilter objects. these can either be
exact metric ids or prefixes which are then compared against metric
ids to decide metrics inside entities to return in response. if null
or empty, all metrics will be fetched if fieldstoretrieve contains
@link field#metrics or @link field#all . this should not be confused
with metricfilters which is used to decide which entities to return
instead. li
li b fieldstoretrieve b specifies which fields of the entity
object to retrieve, see @link field . if null, retrieves 3 fields,
namely entity id, entity type and entity created time. all fields will
be returned if @link field#all is specified. li
li b metricslimit b if fieldstoretrieve contains metrics all or
metricstoretrieve is specified, this limit defines an upper limit to the
number of metrics to return. this parameter is ignored if metrics are not to
be fetched. li
li b metricstimestart b metric values before this timestamp would not
be retrieved. if null or @literal 0 , defaults to 0. li
li b metricstimeend b metric values after this timestamp would not
be retrieved. if null or @literal 0 , defaults to @link long#max value .
li
ul"
1,TimelineStorageMonitor.java,"this abstract class is for monitoring health of timeline storage.
different storages supported by atsv2.",this abstract class is for monitoring health of timeline storage,,for monitoring health of timeline storage,,,,
1,TonyRuntimeFactory.java,implementation of runtimefactory with tony runtime,implementation of runtimefactory with tony runtime,,,,,,implementation of runtimefactory with tony runtime
1,TypedEvent.java,"basic event implementation to implement custom events.

@param t",basic event implementation,,to implement custom events.,,@param t,,
1,UniformSizeInputFormat.java,"uniformsizeinputformat extends the inputformat class, to produce
input splits for distcp.
it looks at the copy listing and groups the contents into input splits such
that the total number of bytes to be copied for each input split is
uniform.","uniformsizeinputformat extends the inputformat class, to produce
input splits for distcp.","it looks at the copy listing and groups the contents into input splits such
that the total number of bytes to be copied for each input split is
uniform.",,,,,
1,Utils.java,"a utility class. it provides
a path filter utility to filter out output part files in the output dir

this class filters output part files from the given directory
it does not accept files with filenames logs and success.
this can be used to list paths of output directory as follows
path filelist fileutil.stat2paths fs.liststatus outdir,
new outputfilesfilter

this class filters log files from directory given
it doesnt accept paths having logs.
this can be used to list paths of output directory as follows
path filelist fileutil.stat2paths fs.liststatus outdir,
new outputlogfilter","a utility class. it provides
a path filter utility to filter out output part files in the output dir","this class filters output part files from the given directory
it does not accept files with filenames logs and success.

this class filters log files from directory given
it doesnt accept paths having logs.",,,"this class filters output part files from the given directory
it does not accept files with filenames logs and success.
this can be used to list paths of output directory as follows
path filelist fileutil.stat2paths fs.liststatus outdir,
new outputfilesfilter

this class filters log files from directory given
it doesnt accept paths having logs.
this can be used to list paths of output directory as follows
path filelist fileutil.stat2paths fs.liststatus outdir,
new outputlogfilter",,
1,VolumeSet.java,volumeset to manage hdds volumes in a datanode.,volumeset to manage hdds volumes in a datanode.,,,,,,volumeset to manage hdds volumes in a datanode.
1,WritableComparator.java,"a comparator for @link writablecomparable s.

p this base implementation uses the natural ordering. to define alternate
orderings, override @link #compare writablecomparable,writablecomparable .

p one may optimize compare intensive operations by overriding
@link #compare byte ,int,int,byte ,int,int . static utility methods are
provided to assist in optimized implementations of this method.",a comparator for @link writablecomparable s.,"p this base implementation uses the natural ordering. to define alternate
orderings, override @link #compare writablecomparable,writablecomparable .",,,"p this base implementation uses the natural ordering. to define alternate
orderings, override @link #compare writablecomparable,writablecomparable .

p one may optimize compare intensive operations by overriding
@link #compare byte ,int,int,byte ,int,int . static utility methods are
provided to assist in optimized implementations of this method.",,"a comparator for @link writablecomparable s.

p this base implementation uses the natural ordering. to define alternate
orderings, override @link #compare writablecomparable,writablecomparable .

p one may optimize compare intensive operations by overriding
@link #compare byte ,int,int,byte ,int,int . static utility methods are
provided to assist in optimized implementations of this method."
1,YarnAuthorizationProvider.java,"an implementation of the interface will provide authorization related
information and enforce permission check. it is excepted that any of the
methods defined in this interface should be non blocking call and should not
involve expensive computation as these method could be invoked in rpc.","an implementation of the interface will provide authorization related
information and enforce permission check.","it is excepted that any of the
methods defined in this interface should be non blocking call and should not
involve expensive computation as these method could be invoked in rpc.","it is excepted that any of the
methods defined in this interface should be non blocking call and should not
involve expensive computation as these method could be invoked in rpc.",,,,
1,YarnServiceJobSubmitter.java,submit a job to cluster.,submit a job to cluster.,,,,,,
2,ChunkFetchSuccess.java,"response to @link chunkfetchrequest when a chunk exists and has been successfully fetched.

note that the server side encoding of this messages does not include the buffer itself, as this
may be written by netty in a more efficient manner ie, zero copy write .
similarly, the client side decoding will reuse the netty bytebuf as the buffer.",response to @link chunkfetchrequest when a chunk exists and has been successfully fetched.,"similarly, the client side decoding will reuse the netty bytebuf as the buffer.",,,,,
2,ExecutorPlugin.java,"a plugin which can be automatically instantiated within each spark executor. users can specify
plugins which should be created with the spark.executor.plugins configuration. an instance
of each plugin will be created for every executor, including those created by dynamic allocation,
before the executor starts running any tasks.

the specific api exposed to the end users still considered to be very unstable. we will
hopefully be able to keep compatibility by providing default implementations for any methods
added, but make no guarantees this will always be possible across all spark releases.

spark does nothing to verify the plugin is doing legitimate things, or to manage the resources
it uses. a plugin acquires the same privileges as the user running the task. a bad plugin
could also interfere with task execution and make the executor fail in unexpected ways.",a plugin which can be automatically instantiated within each spark executor.,"users can specify plugins which should be created with the spark.executor.plugins configuration. an instance of each plugin will be created for every executor, including those created by dynamic allocation, before the executor starts running any tasks.",,,,,
2,FlatMapFunction.java,a function that returns zero or more output records from each input record.,a function that returns zero or more output records from each input record.,,,,,,
2,JavaRecord.java,java bean class to be used with the example javasqlnetworkwordcount.,,,,,java bean class to be used with the example javasqlnetworkwordcount.,,
2,JavaStreamingTestExample.java,"perform streaming testing using welch s 2 sample t test on a stream of data, where the data
stream arrives as text files in a directory. stops when the two groups are statistically
significant p value 005 or after a user specified timeout in number of batches is exceeded.

the rows of the text files must be in the form boolean, double . for example
false, 392
true, 9932

usage
javastreamingtestexample datadir batchduration numbatchestimeout

to run on your local machine using the directory datadir with 5 seconds between each batch and
a timeout after 100 insignificant batches, call
bin run example mllib.javastreamingtestexample datadir 5 100

as you add text files to datadir the significance test wil continually update every
batchduration seconds until the test becomes significant p value 005 or the number of
batches processed exceeds numbatchestimeout .","perform streaming testing using welch s 2 sample t test on a stream of data, where the data
stream arrives as text files in a directory. stops when the two groups are statistically
significant p value 005 or after a user specified timeout in number of batches is exceeded.","the rows of the text files must be in the form boolean, double . for example
false, 392
true, 9932",,,"usage
javastreamingtestexample datadir batchduration numbatchestimeout

to run on your local machine using the directory datadir with 5 seconds between each batch and
a timeout after 100 insignificant batches, call
bin run example mllib.javastreamingtestexample datadir 5 100

as you add text files to datadir the significance test wil continually update every
batchduration seconds until the test becomes significant p value 005 or the number of
batches processed exceeds numbatchestimeout .",,
2,KVStore.java,"abstraction for a local key value store for storing app data.

p
there are two main features provided by the implementations of this interface
p

h3 serialization h3

p
if the underlying data store requires serialization, data will be serialized to and deserialized
using a @link kvstoreserializer , which can be customized by the application. the serializer is
based on jackson, so it supports all the jackson annotations for controlling the serialization of
app defined types.
p

p
data is also automatically compressed to save disk space.
p

h3 automatic key management h3

p
when using the built in key management, the implementation will automatically create unique
keys for each type written to the store. keys are based on the type name, and always start
with the prefix character so that it s easy to use both manual and automatic key
management apis without conflicts .
p

p
another feature of automatic key management is indexing by annotating fields or methods of
objects written to the store with @link kvindex , indices are created to sort the data
by the values of those properties. this makes it possible to provide sorting without having
to load all instances of those types from the store.
p

p
kvstore instances are thread safe for both reads and writes.
p",abstraction for a local key value store for storing app data.,"p
there are two main features provided by the implementations of this interface
p

h3 serialization h3

p
if the underlying data store requires serialization, data will be serialized to and deserialized
using a @link kvstoreserializer , which can be customized by the application. the serializer is
based on jackson, so it supports all the jackson annotations for controlling the serialization of
app defined types.
p

p
data is also automatically compressed to save disk space.
p

h3 automatic key management h3

p
when using the built in key management, the implementation will automatically create unique
keys for each type written to the store. keys are based on the type name, and always start
with the prefix character so that it s easy to use both manual and automatic key
management apis without conflicts .
p

p
another feature of automatic key management is indexing by annotating fields or methods of
objects written to the store with @link kvindex , indices are created to sort the data
by the values of those properties. this makes it possible to provide sorting without having
to load all instances of those types from the store.
p

p
kvstore instances are thread safe for both reads and writes.
p",,,,,"@link kvstoreserializer
@link kvindex"
2,LevelDB.java,"implementation of kvstore that uses leveldb as the underlying data store.
needs to be public for jackson.",implementation of kvstore that uses leveldb as the underlying data store.,,,,,,
2,LocalDiskShuffleDataIO.java,"implementation of the @link shuffledataio plugin system that replicates the local shuffle
storage and index file functionality that has historically been used from spark 24 and earlier.","implementation of the @link shuffledataio plugin system that replicates the local shuffle
storage and index file functionality that has historically been used from spark 24 and earlier.",,,,,,@link shuffledataio
2,MessageWithHeader.java,"a wrapper message that holds two separate pieces a header and a body .

the header must be a bytebuf, while the body can be a bytebuf or a fileregion.",a wrapper message that holds two separate pieces a header and a body .,,,,,,
2,RemoveBlocks.java,request to remove a set of blocks.,request to remove a set of blocks.,,,,,,
2,StreamHandle.java,"identifier for a fixed number of chunks to read from a stream created by an open blocks
message. this is used by @link org.apache.spark.network.shuffle.oneforoneblockfetcher .","identifier for a fixed number of chunks to read from a stream created by an open blocks
message",,,,,,this is used by @link org.apache.spark.network.shuffle.oneforoneblockfetcher .
2,TBoolColumn.java,"the set of fields this struct contains, along with convenience methods for finding and manipulating them.","the set of fields this struct contains, along with convenience methods for finding and manipulating them.",,,,,,
2,UploadBlockStream.java,"a request to upload a block, which the destination should receive as a stream.

the actual block data is not contained here. it will be passed to the streamcallbackwithid
that is returned from rpchandler.receivestream","a request to upload a block, which the destination should receive as a stream.","the actual block data is not contained here. it will be passed to the streamcallbackwithid
that is returned from rpchandler.receivestream",,,,,
3,AbstractCPropertyTab.java,"it is a parent for all standard property tabs
in new cdt model.

although it s enough for new tabs to implement
icpropertytab interface only, it would be better
to extend them from this class.

in this case, we ll able to use
a lot of utility methods via provider link.
in particular, it allows to get current project,
configuration etc see icpropertyprovider interface.
a standard way to create buttons ins edit del etc
and to handle their events see buttonpressed int
several utility methods to create widgets in the
uniform manner setuplabel , setuptext etc .
means to handle control messages which are the main
communication way for new cdt model pages and tabs.",it is a parent for all standard property tabs in new cdt model.,,"in this case, we ll able to use
a lot of utility methods via provider link.
in particular, it allows to get current project,
configuration etc see icpropertyprovider interface.
a standard way to create buttons ins edit del etc
and to handle their events see buttonpressed int
several utility methods to create widgets in the
uniform manner setuplabel , setuptext etc .
means to handle control messages which are the main
communication way for new cdt model pages and tabs.",,"although it s enough for new tabs to implement icpropertytab interface only, it would be better to extend them from this class.",,
3,AbstractTrialUndoActionProvider.java,"base class for parser action classes which support trial, undo and
final actions.

action for a null rule","base class for parser action classes which support trial, undo and final actions.",action for a null rule,,,,,
3,AddBreakpointRulerAction.java,ruler action to add breakpoint with a dialog properties.,ruler action to add breakpoint with a dialog properties.,,,,,,
3,AddLineBreakpointActionDelegate.java,"a delegate for the add line breakpoint action.
p
initially derived from addfunctionbreakpointactiondelegate",a delegate for the add line breakpoint action.,initially derived from addfunctionbreakpointactiondelegate,,,,,
3,AddMemoryBlocks.java,"adds memory blocks to the memory view.

p
cdt adapter logic will link us to a cmemoryblockretrievalextension
if and only if the cdi backend support memory spaces. when this is the case,
the platform will call us to add a memory monitor to the memory view. we
must put up a dialog, handle the user input, create the memory blocks
with default renderings and add them to the view.

p
@since 32

in order to avoid duplicating the addmemoryblocks method one version for expressions, one for memory space address, we pass in a an opaque parameter and let the logic within addmemoryblocks differentiate where needed via isinstanceof request object used to get the memory spaces",adds memory blocks to the memory view.,"p cdt adapter logic will link us to a cmemoryblockretrievalextension if and only if the cdi backend support memory spaces. when this is the case, the platform will call us to add a memory monitor to the memory view. we must put up a dialog, handle the user input, create the memory blocks with default renderings and add them to the view. p",,@since 32,"in order to avoid duplicating the addmemoryblocks method one version for expressions, one for memory space address, we pass in a an opaque parameter and let the logic within addmemoryblocks differentiate where needed via isinstanceof request object used to get the memory spaces",,
3,AllTemplateEngineTests.java,"this is a testsuite, the testcases created to test template engine are
added to testsuite.
the test suite will execute all the testcases added to the suite.

@since 40","this is a testsuite, the testcases created to test template engine are added to testsuite.",the test suite will execute all the testcases added to the suite.,,@since 40,,,
3,AutoconfMacroParameterListValidator.java,"this class provides the macro call parameter parsing for the autoconf editor hover
it is modified from the cdt class cparameterlistvalidator

@author jjohnstn",this class provides the macro call parameter parsing for the autoconf editor hover,it is modified from the cdt class cparameterlistvalidator,,,,@author jjohnstn,
3,AutotoolsProblemMarkerInfo.java,@noextend this class is not intended to be subclassed by clients.,,,,,@noextend this class is not intended to be subclassed by clients,,
3,BindingClassifierTest.java,tests for @link bindingclassifier .,tests for @link bindingclassifier .,,,,,,@link bindingclassifier
3,C99BuildASTParserAction.java,"semantic actions called by the c99 parser to build an ast.

@author mike kucera",semantic actions called by the c99 parser to build an ast.,,,,,@author mike kucera,
3,CConfigurationDescriptionCache.java,"cconfigurationdescriptioncache is a proxy class for serialization of configuration description data.

an inspection of the scenario where user changes project properties and saves it yields
following sequence of events
ol
li initialization
ul
li after eclipse started a project is being opened. a new cconfigurationdescriptioncache is created
with cconfigurationdescriptioncache icstorageelement storage, cprojectdescription parent constructor.
li any clients needed icconfigurationdescription get cconfigurationdescription using constructor
cconfigurationdescription cconfigurationdata data, string buildsystemid, icdataproxycontainer cr
where the cconfigurationdescriptioncache is passed as data. the reference to cache is kept in field fcfgcache.
li fcfgcache is used to getspecsettings cconfigurationspecsettings, after that fcfgcache is set to null.
ul
li user enters project properties settings
ul
li another cconfigurationdescription settings configuration created using the same constructor setting fcfgcache
to the cconfigurationdescriptioncache.
ul
li user changes settings in the settings configuration cconfigurationdescription and saves it
ul
li new cconfigurationdescriptioncache is created from the cconfigurationdescription via constructor
cconfigurationdescriptioncache icconfigurationdescription basedescription, ... where
basedescription is saved as fbasedescription.
li cconfigurationdescriptioncache.applydata ... is used to persist the data. at that point
reference fbasedescription gets set to null.
ul
ol

@see icconfigurationdescription
@see cconfigurationdescription
@see cprojectdescriptionevent",cconfigurationdescriptioncache is a proxy class for serialization of configuration description data.,,,,"an inspection of the scenario where user changes project properties and saves it yields
following sequence of events
ol
li initialization
ul
li after eclipse started a project is being opened. a new cconfigurationdescriptioncache is created
with cconfigurationdescriptioncache icstorageelement storage, cprojectdescription parent constructor.
li any clients needed icconfigurationdescription get cconfigurationdescription using constructor
cconfigurationdescription cconfigurationdata data, string buildsystemid, icdataproxycontainer cr
where the cconfigurationdescriptioncache is passed as data. the reference to cache is kept in field fcfgcache.
li fcfgcache is used to getspecsettings cconfigurationspecsettings, after that fcfgcache is set to null.
ul
li user enters project properties settings
ul
li another cconfigurationdescription settings configuration created using the same constructor setting fcfgcache
to the cconfigurationdescriptioncache.
ul
li user changes settings in the settings configuration cconfigurationdescription and saves it
ul
li new cconfigurationdescriptioncache is created from the cconfigurationdescription via constructor
cconfigurationdescriptioncache icconfigurationdescription basedescription, ... where
basedescription is saved as fbasedescription.
li cconfigurationdescriptioncache.applydata ... is used to persist the data. at that point
reference fbasedescription gets set to null.
ul
ol

@see icconfigurationdescription
@see cconfigurationdescription
@see cprojectdescriptionevent",,"@see icconfigurationdescription
@see cconfigurationdescription
@see cprojectdescriptionevent"
3,CDebugModelPresentation.java,@see idebugmodelpresentation,,,,,,,@see idebugmodelpresentation
3,CElementDelta.java,@see icelementdelta,,,,,,,@see icelementdelta
3,ClangToolChain.java,"the clang toolchain. there s little different from the gcc toolchain other
than the toolchain type and name.

@author dschaefer",the clang toolchain.,there s little different from the gcc toolchain other than the toolchain type and name.,,,,@author dschaefer,
3,CommonBuildTab.java,"common utilities for core build launch configuration tabs.

@since 91",common utilities for core build launch configuration tabs.,,,@since 91,,,
3,ContainerTabModel.java,"@since 12.1
@author jjohnstn",,,,@since 12.1,,@author jjohnstn,
3,CoreBuildGenericLaunchConfigProvider.java,"core launch configuration provider used by generic target types.

@since 83",core launch configuration provider used by generic target types.,,,@since 83,,,
3,CPPASTProblem.java,c specific implementation allows actions to visit the problem.,c specific implementation allows actions to visit the problem.,,,,,,
3,CPPASTReferenceOperator.java,reference operator for declarators.,reference operator for declarators,,,,,,
3,CPPDeferredFunction.java,"represents a reference to a member function instance , which cannot be resolved because
an argument depends on a template parameter. a compiler would resolve it during instantiation.","represents a reference to a member function instance , which cannot be resolved because an argument depends on a template parameter.",a compiler would resolve it during instantiation.,,,,,
3,CPPImplicitVariable.java,"represents a variable implicitly created in c code.
for example the initializer of a structured binding decomposition dcl.struct.bind
code auto first, second decomposed code

the code initializerevaluation code has to be supplied.",represents a variable implicitly created in c code.,,,,"for example the initializer of a structured binding decomposition dcl.struct.bind
code auto first, second decomposed code

the code initializerevaluation code has to be supplied.",,
3,CPPTemplates.java,"collection of static methods to perform template instantiation, member specialization and
type instantiation.","collection of static methods to perform template instantiation, member specialization and type instantiation.",,,,,,
3,CPropertyTester.java,a property tester that determines if a file is an executable or a c c project.,a property tester that determines if a file is an executable or a c c project.,,,,,,
3,CUIPreferenceInitializer.java,"this class implements the setting of the cui initial preference store settings.

@noextend this class is not intended to be subclassed by clients.",this class implements the setting of the cui initial preference store settings.,,,,@noextend this class is not intended to be subclassed by clients.,,
3,CWordFinder.java,"this is a helper class for the text editor to be able to determine, given a
particular offset in a document, various candidates segments for things like
context help, proposals and hovering.","this is a helper class for the text editor to be able to determine, given a particular offset in a document, various candidates segments for things like context help, proposals and hovering.",,,,,,
3,DefaultEnvironmentContextInfo.java,"the default implementation of the icontextinfo used by the environment variable provider
used to represent the configuration, project, workspace and eclipse environment contexts

@since 30",the default implementation of the icontextinfo used by the environment variable provider,,"used to represent the configuration, project, workspace and eclipse environment contexts",@since 30,,,
3,DefaultFortranDependencyCalculator.java,"this class implements the dependency manager and output name provider interfaces
for a very quick & dirty ifort tool chain on win32",this class implements the dependency manager and output name provider interfaces for a very quick & dirty ifort tool chain on win32,,,,,,
3,DisplayDsfExecutor.java,"dsf executor which uses the display thread to run the submitted runnables
and callables. the implementation is based on the default dsf executor
which still creates its own thread. however this thread blocks when running
each executable in the display thread.

@since 10",dsf executor which uses the display thread to run the submitted runnables and callables.,the implementation is based on the default dsf executor which still creates its own thread. however this thread blocks when running each executable in the display thread.,,@since 10,,,
3,DocCommentOwnerBlock.java,"project property page for setting documentation comment owner.
em this class is not intended for use outside of cdt em

@noextend this class is not intended to be subclassed by clients.
@noinstantiate this class is not intended to be instantiated by clients.",project property page for setting documentation comment owner.,,,,"em this class is not intended for use outside of cdt em

@noextend this class is not intended to be subclassed by clients.
@noinstantiate this class is not intended to be instantiated by clients.",,
3,DOMGCCParserExtensionTestSuite.java,@author jcamelon,,,,,,@author jcamelon,
3,DOMParserTestSuite.java,@author jcamelon,,,,,,@author jcamelon,
3,DsfDebugUITools.java,@since 11,,,,@since 11,,,
3,DummyPage.java,this class is just to replace a category reference in org.eclipse.cdt.ui that we exclude because we do not bring in the org.eclipse.cdt.managedbuild.ui plug in.,this class is just to replace a category reference in org.eclipse.cdt.ui,,that we exclude because we do not bring in the org.eclipse.cdt.managedbuild.ui plug in.,,,,
3,ElementNumberFormatsContribution.java,"dynamic menu contribution that shows available number formats in the current
selection of the view.

@since 22",dynamic menu contribution that shows available number formats in the current selection of the view.,,,@since 22,,,
3,FindStdLibPath.java,"the purpose is to find a path where stdc library is located.
currently the shell script is only for linux.

todo it might not be able to execute scripts therefore place the command into a variable.",,,the purpose is to find a path where stdc library is located.,,currently the shell script is only for linux.,,
3,FoldingConfigurationBlock.java,"configures c editor folding preferences.

@since 30",configures c editor folding preferences,,,@since 30,,,
3,FormattedValueTests.java,"tests to verify the operation of formattedvaluesvmutil
@since 22

helper class that stores some element paths and nodes using a certain format",tests to verify the operation of formattedvaluesvmutil,helper class that stores some element paths and nodes using a certain forma,,@since 22,,,
3,GCCKeywords.java,"@noextend this interface is not intended to be extended by clients.
@noinstantiate this class is not intended to be instantiated by clients.",,,,,"@noextend this interface is not intended to be extended by clients.
@noinstantiate this class is not intended to be instantiated by clients.",,
3,GDBControl_7_12.java,"need a new finallaunchsequence for gdb 712
@since 52",,,,"need a new finallaunchsequence for gdb 712
@since 52",,,
3,GdbExpressionVMProvider.java,"a specialization of expressionvmprovider that uses a gdb specific variable vm
node. to understand why this is necessary, see gdbvariablevmnode.",a specialization of expressionvmprovider,that uses a gdb specific variable vm node,,,,,"to understand why this is necessary, see gdbvariablevmnode"
3,GDBSourceLookup.java,"default implementation of @link igdbsourcelookup

@since 50",default implementation of @link igdbsourcelookup,,,@since 50,,,
3,GnuMakefileGenerator.java,"this is a specialized makefile generator that takes advantage of the
extensions present in gnu make.

@since 12
@noinstantiate this class is not intended to be instantiated by clients.
string constants for makefile contents and messages private static final string auto dep comment .autodeps non nls 1 private static final string message managedmakebuilder.message non nls 1 private static final string build error message .error non nls 1 private static final string dep incl comment .module.dep.includes non nls 1 private static final string mod incl comment .module.make.includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute
imanagedbuildermakefilegenerator m e t h o d s

m a k e f i l e s p o p u l a t i o n m e t h o d s

m a i n makefile m a k e f i l e m e t h o d s

s o u r c e s sources.mk m a k e f i l e m e t h o d s

f r a g m e n t subdir.mk m a k e f i l e m e t h o d s

m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s

adds a macro addition prefix to a map of macro names to entries.
entry prefixes look like
c srcs
addprefix root ,

r e s o u r c e v i s i t o r m e t h o d s

o t h e r m e t h o d s

process a string denoting a filepath in a way compatible for gnu make rules, handling
windows drive letters and whitespace appropriately.
p p
the context these paths appear in is on the right hand side of a rule header. ie
p p
target dep1 dep2 dep3
p
@param path the string denoting the path to process
@throws nullpointerexception is path is null
@return a suitable make rule compatible path

this class walks the delta supplied by the build system to determine
what resources have been changed. the logic is very simple. if a
buildable resource non header has been added or removed, the directories
in which they are located are dirty so the makefile fragments for them
have to be regenerated.
p
the actual dependencies are recalculated as a result of the build step
itself. we are relying on make to do the right things when confronted
with a dependency on a moved header file. that said, make will treat
the missing header file in a dependency rule as a target it has to build
unless told otherwise. these dummy targets are added to the makefile
to avoid a missing target error.
string constants for makefile contents and messages private static final string auto dep comment .autodeps non nls 1 private static final string message managedmakebuilder.message non nls 1 private static final string build error message .error non nls 1 private static final string dep incl comment .module.dep.includes non nls 1 private static final string mod incl comment .module.make.includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute
imanagedbuildermakefilegenerator m e t h o d s

m a k e f i l e s p o p u l a t i o n m e t h o d s

m a i n makefile m a k e f i l e m e t h o d s

s o u r c e s sources.mk m a k e f i l e m e t h o d s

f r a g m e n t subdir.mk m a k e f i l e m e t h o d s

m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s

adds a macro addition prefix to a map of macro names to entries.
entry prefixes look like
c srcs
addprefix root ,

r e s o u r c e v i s i t o r m e t h o d s

o t h e r m e t h o d s

process a string denoting a filepath in a way compatible for gnu make rules, handling
windows drive letters and whitespace appropriately.
p p
the context these paths appear in is on the right hand side of a rule header. ie
p p
target dep1 dep2 dep3
p
@param path the string denoting the path to process
@throws nullpointerexception is path is null
@return a suitable make rule compatible path

this class is used to recursively walk the project and determine which
modules contribute buildable source files.",this is a specialized makefile generator that takes advantage of the extensions present in gnu make.,,,@since 12,"@noinstantiate this class is not intended to be instantiated by clients.
string constants for makefile contents and messages private static final string auto dep comment .autodeps non nls 1 private static final string message managedmakebuilder.message non nls 1 private static final string build error message .error non nls 1 private static final string dep incl comment .module.dep.includes non nls 1 private static final string mod incl comment .module.make.includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute
imanagedbuildermakefilegenerator m e t h o d s

m a k e f i l e s p o p u l a t i o n m e t h o d s

m a i n makefile m a k e f i l e m e t h o d s

s o u r c e s sources.mk m a k e f i l e m e t h o d s

f r a g m e n t subdir.mk m a k e f i l e m e t h o d s

m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s

adds a macro addition prefix to a map of macro names to entries.
entry prefixes look like
c srcs
addprefix root ,

r e s o u r c e v i s i t o r m e t h o d s

o t h e r m e t h o d s

process a string denoting a filepath in a way compatible for gnu make rules, handling
windows drive letters and whitespace appropriately.
p p
the context these paths appear in is on the right hand side of a rule header. ie
p p
target dep1 dep2 dep3
p
@param path the string denoting the path to process
@throws nullpointerexception is path is null
@return a suitable make rule compatible path

this class walks the delta supplied by the build system to determine
what resources have been changed. the logic is very simple. if a
buildable resource non header has been added or removed, the directories
in which they are located are dirty so the makefile fragments for them
have to be regenerated.
p
the actual dependencies are recalculated as a result of the build step
itself. we are relying on make to do the right things when confronted
with a dependency on a moved header file. that said, make will treat
the missing header file in a dependency rule as a target it has to build
unless told otherwise. these dummy targets are added to the makefile
to avoid a missing target error.
string constants for makefile contents and messages private static final string auto dep comment .autodeps non nls 1 private static final string message managedmakebuilder.message non nls 1 private static final string build error message .error non nls 1 private static final string dep incl comment .module.dep.includes non nls 1 private static final string mod incl comment .module.make.includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute
imanagedbuildermakefilegenerator m e t h o d s

m a k e f i l e s p o p u l a t i o n m e t h o d s

m a i n makefile m a k e f i l e m e t h o d s

s o u r c e s sources.mk m a k e f i l e m e t h o d s

f r a g m e n t subdir.mk m a k e f i l e m e t h o d s

m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s

adds a macro addition prefix to a map of macro names to entries.
entry prefixes look like
c srcs
addprefix root ,

r e s o u r c e v i s i t o r m e t h o d s

o t h e r m e t h o d s

process a string denoting a filepath in a way compatible for gnu make rules, handling
windows drive letters and whitespace appropriately.
p p
the context these paths appear in is on the right hand side of a rule header. ie
p p
target dep1 dep2 dep3
p
@param path the string denoting the path to process
@throws nullpointerexception is path is null
@return a suitable make rule compatible path

this class is used to recursively walk the project and determine which
modules contribute buildable source files.",,
3,GroupDebugContextsCommandHandler.java,"command handler to trigger grouping of debug contexts operation.

@since 71",command handler to trigger grouping of debug contexts operation.,,,@since 71,,,
3,IBHistoryAction.java,action used for the include browser forward backward buttons,action used for the include browser forward backward buttons,,,,,,
3,IBuildObject.java,"@noextend this class is not intended to be subclassed by clients.
@noimplement this interface is not intended to be implemented by clients.",,,,,"@noextend this class is not intended to be subclassed by clients
@noimplement this interface is not intended to be implemented by clients.",,
3,ICLanguageSettingPathEntry.java,"representation in the project model of language settings entries of
path kind such as include paths i or include files and others.
see interface hierarchy for more specifics.",representation in the project model of language settings entries of path kind such as include paths i or include files and others.,,,,,,see interface hierarchy for more specifics.
3,ICLibraryFileEntry.java,"representation in the project model of language settings entries
such as library file l gcc option . see @link icsettingentry#library file .",representation in the project model of language settings entries such as library file l gcc option .,,,,,,see @link icsettingentry#library file .
3,ICodeReaderFactory.java,"this is the interface that an ast service uses to delegate the construction
of a codereader.

@author jcamelon
@deprecated replaced by @link includefilecontentprovider
@noreference this interface is not intended to be referenced by clients.",this is the interface that an ast service uses to delegate the construction of a codereader.,,,@deprecated replaced by @link includefilecontentprovider,@noreference this interface is not intended to be referenced by clients.,@author jcamelon,@link includefilecontentprovider
3,ICPointerType.java,"@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.",,,,,"@noextend this class is not intended to be subclassed by clients
@noimplement this interface is not intended to be implemented by clients.",,
3,ICPPAliasTemplateInstance.java,"represents an instance of an alias template 145.7 .
@since 55

@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.",represents an instance of an alias template 145.7 .,,,@since 55,"@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.",,
3,ICPPASTLinkageSpecification.java,"this interface represents a linkage specification. eg extern c ...

@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.",this interface represents a linkage specification. eg extern c ...,,,,"@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.",,
3,ICPPASTVirtSpecifier.java,"a virt specifier at the end of a function declaration.
there are two virt specifiers, final and override .

@noimplement this interface is not intended to be implemented by clients.
@noextend this interface is not intended to be extended by clients.
@since 57",a virt specifier at the end of a function declaration.,"there are two virt specifiers, final and override .",,@since 57,"@noimplement this interface is not intended to be implemented by clients.
@noextend this interface is not intended to be extended by clients.",,
3,ICPPPointerToMemberType.java,"@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.",,,,,"@noextend this class is not intended to be subclassed by clients
@noimplement this interface is not intended to be implemented by clients.",,
3,ICSourceNotFoundDescription.java,"this interface is used to provide a description of a debug element,
usually a stack frame, when no source can be located for it.
an instance is usually provided by an adapter.","this interface is used to provide a description of a debug element, usually a stack frame, when no source can be located for it.",an instance is usually provided by an adapter.,,,,,
3,IDsfDebugServicesFactory.java,"a factory to create dsf services. using this interface allows
to easily have different service implementation for different backends.

@since 11",a factory to create dsf services.,,using this interface allows to easily have different service implementation for different backends.,@since 11,,,
3,IGDBTraceControl.java,"the tracecontrol service provides access to the debugger tracing functionality.
it is used to do such things as start and stop tracing.

@since 30
gdb specific part
marker interface for a context on which trace operations can be performed
gdb specific part
specific trace record context. it describes tracing data.
gdb specific part
this is the model data interface that corresponds to itracerecorddmcontext.
gdb specific part
trace events
gdb specific part @since 44",the tracecontrol service provides access to the debugger tracing functionality.,"gdb specific part
marker interface for a context on which trace operations can be performed
gdb specific part
specific trace record context. it describes tracing data.
gdb specific part
this is the model data interface that corresponds to itracerecorddmcontext.
gdb specific part
trace events
gdb specific part",it is used to do such things as start and stop tracing.,"@since 30
@since 44",,,
3,IInclude.java,"represents an include declaration in a c translation unit.

@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.",represents an include declaration in a c translation unit,,,,"@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.",,
3,IJSSwitchCase.java,"a javascript switch case from the a href https github.com estree estree blob master spec.md#switchcase estree
specification a",a javascript switch case from the a href https github.com estree estree blob master spec.md#switchcase estree specification a,,,,,,
3,IMacroEntry.java,"@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.",,,,,"@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.",,
3,IMIBackend.java,"service for controlling the back end process.
@since 11

event indicating that the back end process has started or terminated.",service for controlling the back end process.,event indicating that the back end process has started or terminated,,@since 11,,,
3,IMSASTDeclspecList.java,"represents a microsoft attribute specifier, introduced by declspec.

@since 66
@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.","represents a microsoft attribute specifier, introduced by declspec.",,,@since 66,"@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.",,
3,INodeFactory.java,"control flow graph node factory

@noextend this interface is not intended to be extended by clients.",control flow graph node factory,,,,@noextend this interface is not intended to be extended by clients.,,
3,IPropertyChangeParticipant.java,"implemented by classes which can optionally participate in property
change events, and report whether an event would affect them without
adapting to it.
p
clients may implement this interface.
p

@since 50","implemented by classes which can optionally participate in property change events, and report whether an event would affect them without adapting to it.",,,@since 50,"p
clients may implement this interface.
p",,
3,IRefreshAllTarget.java,"a retargetable action target which allows a debugger to refresh all of its
active views with fresh data from the debug target.

@since 11",a retargetable action target which allows a debugger to refresh all of its active views with fresh data from the debug target.,,,@since 11,,,
3,IRegisters2.java,"service extension of iregisters to manage user defined register groups
@since 26",service extension of iregisters to manage user defined register groups,,,@since 26,,,
3,IScannerInfoConsoleParser.java,"parses a line of command output looking for scanner info entries.

@author vhirsl",parses a line of command output looking for scanner info entries.,,,,,@author vhirsl,
3,ITestItem.java,"base interface to the structural item of test hierarchy test suite or test
case .

@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.

represents status of the test item.

@note order of values is significant cause enumeration values comparison
is necessary",represents status of the test item,"base interface to the structural item of test hierarchy test suite or test case .
@note order of values is significant cause enumeration values comparison is necessary",,,"@noextend this interface is not intended to be extended by clients.
@noimplement this interface is not intended to be implemented by clients.",,
3,IViewInMemory.java,"provides the ability to view a variable in the memory view.
@since 74",provides the ability to view a variable in the memory view.,,,@since 74,,,
3,LanguageSettingsProvidersSerializer.java,"helper class handling serialization and notifications for language settings entries @link iclanguagesettingentry .
those are for readability of xml only
dummy class to represent ill defined provider.
those are for readability of xml only
language settings provider listener cfgdescription association
those are for readability of xml only
wrapper for workspace providers to ensure level of indirection. that way workspace providers
can be changed replaced without notifying changing the configurations which keep the providers
in their lists.
those are for readability of xml only
language settings change event implementation.","helper class handling serialization and notifications for language settings entries @link iclanguagesettingentry . those are for readability of xml only
dummy class to represent ill defined provider. those are for readability of xml only
language settings provider listener cfgdescription association those are for readability of xml only
wrapper for workspace providers to ensure level of indirection. that way workspace providers can be changed replaced without notifying changing the configurations which keep the providers in their lists those are for readability of xml only
language settings change event implementation.",,,,,,
3,MachOBinaryParserPage.java,@noextend this class is not intended to be subclassed by clients.,,,,,@noextend this class is not intended to be subclassed by clients.,,
3,ManageConfigRunner.java,@noextend this class is not intended to be subclassed by clients.,,,,,@noextend this class is not intended to be subclassed by clients,,
3,MIAsyncErrorProcessor.java,"in some cases gdb reports exec commands failure after the ^running event is fired.
for instance, if an invalid breakpoint is set no error is reported but the consequent
exec continue command fails.

36 exec continue thread 1
36^running
running,thread id all
gdb
& warning n
& cannot insert breakpoint 2. n
& cannot access memory at address 0x0 n
& n
36^error,msg command aborted.
gdb

this class handles these type of situations by firing mierrorevent when such an error appears.

@since 53",this class handles these type of situations by firing mierrorevent when such an error appears.,,"in some cases gdb reports exec commands failure after the ^running event is fired. for instance, if an invalid breakpoint is set no error is reported but the consequent exec continue command fails.",@since 53,,,
3,MIBreakpointsSynchronizer.java,"provides synchronization between breakpoints set from outside of the eclipse
breakpoint framework gdb console, trace files, etc and the breakpoints
view.
p
bug 530377 prior to fixing 530377, events that arrived from gdb faster than
dsf eclipse fully processed them could cause the state within the
synchronizer and manager to become corrupt. this would happen because it
takes multiple dsf stages to complete handling 1 event, so the handling of
the next event would become intermingled. that violated many assumptions in
the code that the code run in the respective requestmonitor would be on the
same state. this is an unsuprising assumption based on the general idea of
dsf as not requiring the normal synchronization primitives as everything is
single threaded. to resolve this problem, there is some code
@link #queueevent breakpointevent that ensures each event is fully
processed before the next event starts processing.

@since 42
catchpoint expressions gdb tracepoint commands
class to store an event that needs to be performed by the synchronizer

@see mibreakpointssynchronizer class documentation for design comments","provides synchronization between breakpoints set from outside of the eclipse breakpoint framework gdb console, trace files, etc and the breakpoints view.","catchpoint expressions gdb tracepoint commands
class to store an event that needs to be performed by the synchronizer
@see mibreakpointssynchronizer class documentation for design comment",,@since 42,,,"p
bug 530377 prior to fixing 530377, events that arrived from gdb faster than
dsf eclipse fully processed them could cause the state within the
synchronizer and manager to become corrupt. this would happen because it
takes multiple dsf stages to complete handling 1 event, so the handling of
the next event would become intermingled. that violated many assumptions in
the code that the code run in the respective requestmonitor would be on the
same state. this is an unsuprising assumption based on the general idea of
dsf as not requiring the normal synchronization primitives as everything is
single threaded. to resolve this problem, there is some code
@link #queueevent breakpointevent that ensures each event is fully
processed before the next event starts processing."
3,MIDataListRegisterNames.java,"data list register names regno

show a list of register names for the current target. if no
arguments are given, it shows a list of the names of all the registers.
if integer numbers are given as arguments, it will print a list of the
names of the registers corresponding to the arguments. to ensure
consistency between a register name and its number, the output list may
include empty register names.",show a list of register names for the current target.,"if no arguments are given, it shows a list of the names of all the registers.
if integer numbers are given as arguments, it will print a list of the names of the registers corresponding to the arguments.
to ensure consistency between a register name and its number, the output list may include empty register names.",,,data list register names regno,,
3,MIEnvironmentDirectory.java,"environment directory r pathdir

add directory pathdir to beginning of search path for source files.
r will first reset the path to its default",add directory pathdir to beginning of search path for source files.,,,,"environment directory r pathdir

r will first reset the path to its default",,
3,MIReverseDebugEnabler.java,"this class permits to enable, disable or toggle the reverse
debugging mode.

@since 42","this class permits to enable, disable or toggle the reverse debugging mode.",,,@since 42,,,
3,MIStack.java,"same as with frame objects, this is a base class for the ivariabledmdata object that uses an miarg object to
provide the data. sub classes must supply the miarg object.

class to track stack depth and debug frames for our internal cache

a map of threadid framescacheinfo, that can be cleared based on a context.
we use this cache for a few reasons
br
first, two commands such as
pre
stack info depth 11
stack info depth 2
pre
would both be sent to gdb because the command cache sees them as different.
this cache allows us to know that if we already asked for a stack depth
we can potentially re use the answer.
br
the same concept is applicable for the stack list frames command with different limits.
also, the stack depth can be deduced from the frames list, so we don t need to ask gdb for it again.
p
the second reason is that gdb is unreliable when it comes to returning frames. the mi protocol only allows to reply
with data or with error. when gdb is unwinding sometimes it gets both, and while the console cli protocol has no
problem with that, for mi, gdb replies randomly, sometimes with data, sometimes with error. if we cache the valid data
it will eliminate the issue with invalid data on subsequent invocations. we don t cache errors.

base class for the iframedmdata object that uses an miframe object to
provide the data. sub classes must provide the miframe object","same as with frame objects, this is a base class for the ivariabledmdata object that uses an miarg object to provide the data

base class for the iframedmdata object that uses an miframe object to provide the data.",class to track stack depth and debug frames for our internal cach,"a map of threadid framescacheinfo, that can be cleared based on a context.
we use this cache for a few reasons
br
first, two commands such as
pre
stack info depth 11
stack info depth 2
pre
would both be sent to gdb because the command cache sees them as different.
this cache allows us to know that if we already asked for a stack depth
we can potentially re use the answer.
br
the same concept is applicable for the stack list frames command with different limits.
also, the stack depth can be deduced from the frames list, so we don t need to ask gdb for it again.
p
the second reason is that gdb is unreliable when it comes to returning frames. the mi protocol only allows to reply
with data or with error. when gdb is unwinding sometimes it gets both, and while the console cli protocol has no
problem with that, for mi, gdb replies randomly, sometimes with data, sometimes with error. if we cache the valid data
it will eliminate the issue with invalid data on subsequent invocations. we don t cache errors.

base class for the iframedmdata object that uses an miframe object to
provide the data. sub classes must provide the miframe object",,sub classes must supply the miarg object,,
3,MIThreadCreatedEvent.java,this can only be detected by gdb mi after gdb 68.,,,,this can only be detected by gdb mi after gdb 68.,,,
3,MIThreadGroupAddedEvent.java,"thread group added,id i1

this can only be detected by gdb mi with gdb 72.
@since 51",,"thread group added,id i1",,"this can only be detected by gdb mi with gdb 72.
@since 51",,,
3,MultiCfgContributedEnvironment.java,@noextend this class is not intended to be subclassed by clients.,,,,,@noextend this class is not intended to be subclassed by clients.,,
3,MultiLaunchConfigurationTabGroup.java,"tab group for launch group.
@deprecated see bug 517722, launch groups are now part of platform.",tab group for launch group.,,,"@deprecated see bug 517722, launch groups are now part of platform.",,,
3,PDOMDependencyGenerator.java,"@author doug schaefer

@noextend this class is not intended to be subclassed by clients.
@noinstantiate this class is not intended to be instantiated by clients.",,,,,"@noextend this class is not intended to be subclassed by clients.
@noinstantiate this class is not intended to be instantiated by clients.",@author doug schaefer,
3,PDOMMacroReferenceName.java,"represents declarations, definitions and references to bindings, except for macros.","represents declarations, definitions and references to bindings, except for macros.",,,,,,
3,ProblemMarkerManager.java,"listens to resource deltas and filters for marker changes of type
imarker.problem viewers showing error ticks should register as listener to
this type.

visitors used to filter the element delta changes",listens to resource deltas and filters for marker changes of type imarker.problem,visitors used to filter the element delta change,,,viewers showing error ticks should register as listener to this type.,,
3,ProcessLauncher.java,"this class implements external process launching for internal builder.

note this class is subject to change and discuss,
and is currently available in experimental mode only",this class implements external process launching for internal builder.,,,,,,
3,ProcStatParser.java,"@author marc dumais
todo extend to more than the tick counters.
@see also http www.linuxhowtos.org system procstat.htm",,,,,,@author marc dumais,@see also http www.linuxhowtos.org system procstat.htm
3,QtPDOMNameIndex.java,"a data structure for storing lists of pdomnames that are indexed by a string key.
this is equivalent to the java type map string, list pdomname .",a data structure for storing lists of pdomnames that are indexed by a string key.,"this is equivalent to the java type map string, list pdomname",,,,,
3,RenameCSourceFolderChange.java,@author ee4 graf ifs,,,,,,@author ee4 graf ifs,
3,ResultsView.java,"represents a view part showing the testing results count statistics,
red green bar, tests hierarchy and test messages .
persistence tags
represents view orientation

@note code auto code state may be not acceptable for some methods see
their comments for details .","represents a view part showing the testing results count statistics, red green bar, tests hierarchy and test messages .
persistence tags represents view orientatio",,,,,,
3,ReturnCheckerTest.java,test for @see returncheckertest class,test for @see returncheckertest class,,,,,,test for @see returncheckertest class
3,RulerColumnDescriptor.java,"the description of an extension to the
code org.eclipse.ui.workbench.texteditor.rulercolumns code extension point. instances are
immutable. instances can be obtained from a @link rulercolumnregistry .

@since 72
@noinstantiate this class is not intended to be instantiated by clients.",the description of an extension to the code org.eclipse.ui.workbench.texteditor.rulercolumns code extension point,,,@since 72,"instances are immutable. instances can be obtained from a @link rulercolumnregistry .

@noinstantiate this class is not intended to be instantiated by clients.",,instances can be obtained from a @link rulercolumnregistry .
3,SCDOptionsEnum.java,"enumeration class for scanner configuration affecting command line options

@author vhirsl",enumeration class for scanner configuration affecting command line options,,,,,@author vhirsl,
3,SourceDocumentProvider.java,sourcedocumentprovider,,,,,,,
3,SourceLookupTest.java,"tests that interaction with source lookups works as expected.
p
all of these tests use one of sourcelookup .exe that was built from a file
that was moved since build time. at build time the sourcelookup.cc file was
located in the @link #build path directory, but it is now located in the
@link basetestcase#source path directory.
p
the wild card in sourcelookup .exe can be one of the following to cover the
different effective types of source lookups that need to be done depending on
how the program was compiled. each of these options produces different debug
information about where to find the source file. see the makefile for more
information.
ul
li b ac b absolute and canonical path no .. in path passed to gcc
li
li b an b absolute and non canonical path a .. in path passed to gcc
li
li b rc b relative and canonical path no .. in path passed to gcc
li
li b rn b relative and non canonical path a .. in path passed to gcc
li
li b no suffix b compilation that does not need mapping to be found
ul
in addition, there can also be a b dwarf2 b in the name. that means it is
designed to run with gdb 74, see comment in makefile for olddwarfflags.
p
the result of the variations on compilation arguments means that some of the
tests are parameterised.
p
some of the cdt source lookup features require newer versions of gdb than
others, therefore the relevant tests use assumegdbversion methods to be
skipped when appropriate.",tests that interaction with source lookups works as expected.,"p all of these tests use one of sourcelookup .exe that was built from a file that was moved since build time. at build time the sourcelookup.cc file was located in the @link #build path directory, but it is now located in the @link basetestcase#source path directory. p",,"in addition, there can also be a b dwarf2 b in the name. that means it is
designed to run with gdb 74, see comment in makefile for olddwarfflags.
p
the result of the variations on compilation arguments means that some of the
tests are parameterised.
p
some of the cdt source lookup features require newer versions of gdb than
others, therefore the relevant tests use assumegdbversion methods to be
skipped when appropriate.","the wild card in sourcelookup .exe can be one of the following to cover the
different effective types of source lookups that need to be done depending on
how the program was compiled. each of these options produces different debug
information about where to find the source file. see the makefile for more
information.
ul
li b ac b absolute and canonical path no .. in path passed to gcc
li
li b an b absolute and non canonical path a .. in path passed to gcc
li
li b rc b relative and canonical path no .. in path passed to gcc
li
li b rn b relative and non canonical path a .. in path passed to gcc
li
li b no suffix b compilation that does not need mapping to be found
ul",,"see the makefile for more
information."
3,SpellEvent.java,spell event fired for words detected by a spell check iterator.,spell event fired for words detected by a spell check iterator.,,,,,,
3,StandardCElementLabelProvider.java,"celementlabelprovider that respects settings from the appearance preference page.
triggers a viewer update when a preference changes.

@deprecated use @link appearanceawarelabelprovider instead.",celementlabelprovider that respects settings from the appearance preference page.,triggers a viewer update when a preference changes.,,@deprecated use @link appearanceawarelabelprovider instead.,,,
3,StringDialogField.java,dialog field containing a label and a text control.,dialog field containing a label and a text control.,,,,,,
3,TestsRunnerProvidersManager.java,"collects the data from the tests runner provider plug in extension points and
provides the convenient access to it.",collects the data from the tests runner provider plug in extension points and provides the convenient access to it.,,,,,,
3,ToggleDynamicPrintfAdapter.java,"toggles a dynamic printf in a c c editor.

@since 75",toggles a dynamic printf in a c c editor.,,,@since 75,,,
3,TracepointActionsPropertyPage.java,"property page for tracepoint actions

@since 21",property page for tracepoint actions,,,@since 21,,,
3,TracingConsole.java,"a console that is used to print traces. the console is attached to a launch.

any input to this console is read and discarded, since this console should be
read only. we don t actually make the console read only because it is nice
for the user to be able to add delimiters such as empty lines within the traces.

@since 21
this class was moved from package org.eclipse.cdt.dsf.gdb.internal.ui.tracing

a reading job which will prevent the input stream
from filling up. we don t actually do anything with
the data we read, since the trace console should not
accept input.

but instead of making the console read only, we allow
the user to type things to allow for comments to be
inserted within the traces.",a console that is used to print traces. the console is attached to a launch.,"all of these tests use one of sourcelookup .exe that was built from a file that was moved since build time. at build time the sourcelookup.cc file was located in the @link #build path directory, but it is now located in the @link basetestcase#source path directory. p",we don t actually make the console read only because it is nice for the user to be able to add delimiters such as empty lines within the traces.,"@since 21
this class was moved from package org.eclipse.cdt.dsf.gdb.internal.ui.tracing","a reading job which will prevent the input stream from filling up. we don t actually do anything with the data we read, since the trace console should not accept input.

but instead of making the console read only, we allow the user to type things to allow for comments to be inserted within the traces.",,
3,TriggerCellModifier.java,cell modifier used to edit the trigger value.,cell modifier used to edit the trigger value.,,,,,,
3,TypedCDTViewerFilter.java,"see org.eclipse.cdt.internal.ui.dialogs.typedviewerfilter

@noextend this class is not intended to be subclassed by clients.",,,,,@noextend this class is not intended to be subclassed by clients.,,see org.eclipse.cdt.internal.ui.dialogs.typedviewerfilter
3,UncallCommandHandler.java,"command handler to trigger an uncall operation

@since 70",command handler to trigger an uncall operation,,,@since 70,,,
3,UPCKeyword.java,"enumeration of keywords that upc adds to c99.

@author mike kucera",enumeration of keywords that upc adds to c99.,,,,,@author mike kucera,
3,UPCLanguage.java,"implementation of the ilanguage extension point, adds upc as a language to cdt.

@author mike kucera","implementation of the ilanguage extension point, adds upc as a language to cdt.",,,,,@author mike kucera,
3,VMHasChildrenUpdate.java,"helper class implementation of the @link ihaschildrenupdate update object.

@see vmviewerupdate

@since 10",helper class implementation of the @link ihaschildrenupdate update object.,,,@since 10,,,@see vmviewerupdate
3,WhiteSpaceOptions.java,"manage code formatter white space options on a higher level.

preview snippets.
private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages.whitespaceoptions vararg parameter, defaultcodeformatterconstants.formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages.whitespaceoptions vararg parameter, defaultcodeformatterconstants.formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages.whitespaceoptions return createoption root, workingvalues, formattermessages.whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants.formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages.whitespaceoptions throw createoption root, workingvalues, formattermessages.whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants.formatter insert space before parenthesized expression in throw, throw preview return root
represents a node in the options tree.

preview snippets.
private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages.whitespaceoptions vararg parameter, defaultcodeformatterconstants.formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages.whitespaceoptions vararg parameter, defaultcodeformatterconstants.formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages.whitespaceoptions return createoption root, workingvalues, formattermessages.whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants.formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages.whitespaceoptions throw createoption root, workingvalues, formattermessages.whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants.formatter insert space before parenthesized expression in throw, throw preview return root
a node representing a group of options in the tree.

preview snippets.
private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages.whitespaceoptions vararg parameter, defaultcodeformatterconstants.formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages.whitespaceoptions vararg parameter, defaultcodeformatterconstants.formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages.whitespaceoptions return createoption root, workingvalues, formattermessages.whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants.formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages.whitespaceoptions throw createoption root, workingvalues, formattermessages.whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants.formatter insert space before parenthesized expression in throw, throw preview return root
a node representing a concrete white space option in the tree.",manage code formatter white space options on a higher level.,,,,"preview snippets.
private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages.whitespaceoptions vararg parameter, defaultcodeformatterconstants.formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages.whitespaceoptions vararg parameter, defaultcodeformatterconstants.formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages.whitespaceoptions return createoption root, workingvalues, formattermessages.whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants.formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages.whitespaceoptions throw createoption root, workingvalues, formattermessages.whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants.formatter insert space before parenthesized expression in throw, throw preview return root
represents a node in the options tree.

preview snippets.
private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages.whitespaceoptions vararg parameter, defaultcodeformatterconstants.formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages.whitespaceoptions vararg parameter, defaultcodeformatterconstants.formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages.whitespaceoptions return createoption root, workingvalues, formattermessages.whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants.formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages.whitespaceoptions throw createoption root, workingvalues, formattermessages.whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants.formatter insert space before parenthesized expression in throw, throw preview return root
a node representing a group of options in the tree.

preview snippets.
private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages.whitespaceoptions vararg parameter, defaultcodeformatterconstants.formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages.whitespaceoptions vararg parameter, defaultcodeformatterconstants.formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages.whitespaceoptions return createoption root, workingvalues, formattermessages.whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants.formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages.whitespaceoptions throw createoption root, workingvalues, formattermessages.whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants.formatter insert space before parenthesized expression in throw, throw preview return root
a node representing a concrete white space option in the tree.",,
3,WordIgnoreProposal.java,proposal to ignore the word during the current editing session.,proposal to ignore the word during the current editing session.,,,,,,
3,WorkingCopyTests.java,"contains unit test cases for working copies. run using junit plugin test
configuration launcher.",contains unit test cases for working copies,,,,run using junit plugin test configuration launcher.,,
4,AbstractCollectionTester.java,"base class for collection testers.

@param e the element type of the collection to be tested.
@author kevin bourrillion",base class for collection testers.,,,,@param e the element type of the collection to be tested.,@author kevin bourrillion,
4,AbstractListeningExecutorService.java,"abstract @link listeningexecutorservice implementation that creates @link listenablefuture
instances for each @link runnable and @link callable submitted to it. these tasks are run
with the abstract @link #execute execute runnable method.

p in addition to @link #execute , subclasses must implement all methods related to shutdown and
termination.

@author chris povirk
@since 140","abstract @link listeningexecutorservice implementation that creates @link listenablefuture
instances for each @link runnable and @link callable submitted to it.","these tasks are run
with the abstract @link #execute execute runnable method.",,@since 140,"p in addition to @link #execute , subclasses must implement all methods related to shutdown and
termination.",@author chris povirk,
4,AbstractLoadingCache.java,"this class provides a skeletal implementation of the @code cache interface to minimize the
effort required to implement this interface.

p to implement a cache, the programmer needs only to extend this class and provide an
implementation for the @link #get object and @link #getifpresent methods. @link
#getunchecked , @link #get object, callable , and @link #getall are implemented in terms of
@code get @link #getallpresent is implemented in terms of @code getifpresent @link
#putall is implemented in terms of @link #put , @link #invalidateall iterable is implemented
in terms of @link #invalidate . the method @link #cleanup is a no op. all other methods throw
an @link unsupportedoperationexception .

@author charles fry
@since 110",this class provides a skeletal implementation of the @code cache interface,,"to minimize the
effort required to implement this interface.",@since 110,"p to implement a cache, the programmer needs only to extend this class and provide an
implementation for the @link #get object and @link #getifpresent methods. @link
#getunchecked , @link #get object, callable , and @link #getall are implemented in terms of
@code get @link #getallpresent is implemented in terms of @code getifpresent @link
#putall is implemented in terms of @link #put , @link #invalidateall iterable is implemented
in terms of @link #invalidate . the method @link #cleanup is a no op. all other methods throw
an @link unsupportedoperationexception .",@author charles fry,
4,AbstractMultimap.java,"a skeleton @code multimap implementation, not necessarily in terms of a @code map .

@author louis wasserman","a skeleton @code multimap implementation, not necessarily in terms of a @code map .",,,,,@author louis wasserman,
4,AbstractMultimapTester.java,"superclass for all @code multimap testers.

@author louis wasserman",superclass for all @code multimap testers.,,,,,@author louis wasserman,
4,AbstractSortedKeySortedSetMultimap.java,"basic implementation of a @link sortedsetmultimap with a sorted key set.

p this superclass allows @code treemultimap to override methods to return navigable set and
map types in non gwt only, while gwt code will inherit the sortedmap sortedset overrides.

@author louis wasserman",basic implementation of a @link sortedsetmultimap with a sorted key set.,,"p this superclass allows @code treemultimap to override methods to return navigable set and
map types in non gwt only, while gwt code will inherit the sortedmap sortedset overrides.",,,@author louis wasserman,
4,ArbitraryInstances.java,"supplies an arbitrary default instance for a wide range of types, often useful in testing
utilities.

p covers arrays, enums and common types defined in @code java.lang , @code java.lang.reflect ,
@code java.io , @code java.nio , @code java.math , @code java.util , @code
java.util.concurrent , @code java.util.regex , @code com.google.common.base , @code
com.google.common.collect and @code com.google.common.primitives . in addition, if the type
exposes at least one public static final constant of the same type, one of the constants will be
used or if the class exposes a public parameter less constructor then it will be new d and
returned.

p all default instances returned by @link #get are generics safe. clients won t get type
errors for using @code get comparator.class as a @code comparator foo , for example.
immutable empty instances are returned for collection types @code for string @code 0 for
number types reasonable default instance for other stateless types. for mutable types, a fresh
instance is created each time @code get is called.

@author kevin bourrillion
@author ben yu
@since 120
compare by tostring to satisfy 2 properties 1. compareto null should throw nullpointerexception internal implementations of some classes, with public default constructor that get needs. compare by tostring to satisfy 2 properties 1. compareto null should throw nullpointerexception 2. the order is deterministic and easy to understand, for debugging purpose. compare by tostring to satisfy 2 properties 1. compareto null should throw nullpointerexception always equal is a valid total ordering. and it works for any object.","supplies an arbitrary default instance for a wide range of types, often useful in testing
utilities.","p covers arrays, enums and common types defined in @code java.lang , @code java.lang.reflect ,
@code java.io , @code java.nio , @code java.math , @code java.util , @code
java.util.concurrent , @code java.util.regex , @code com.google.common.base , @code
com.google.common.collect and @code com.google.common.primitives . in addition, if the type
exposes at least one public static final constant of the same type, one of the constants will be
used or if the class exposes a public parameter less constructor then it will be new d and
returned.",,@since 120,"p all default instances returned by @link #get are generics safe. clients won t get type
errors for using @code get comparator.class as a @code comparator foo , for example.
immutable empty instances are returned for collection types @code for string @code 0 for
number types reasonable default instance for other stateless types. for mutable types, a fresh
instance is created each time @code get is called.","@author kevin bourrillion
@author ben yu",all default instances returned by @link #get are generics safe.
4,ArrayListMultimapGwtSerializationDependencies.java,"a dummy superclass to support gwt serialization of the element types of an @link
arraylistmultimap . the gwt supersource for this class contains a field for each type.

p for details about this hack, see @link gwtserializationdependencies , which takes the same
approach but with a subclass rather than a superclass.

p todo cpovirk consider applying this subclass approach to our other types.","a dummy superclass to support gwt serialization of the element types of an @link
arraylistmultimap .",the gwt supersource for this class contains a field for each type.,,,,,"p for details about this hack, see @link gwtserializationdependencies , which takes the same
approach but with a subclass rather than a superclass."
4,AtomicDoubleArrayTest.java,"source
http gee.cs.oswego.edu cgi bin viewcvs.cgi jsr166 src test tck jsr166e atomicdoublearraytest.java?revision 113
modified to adapt to guava coding conventions
unit test for @link atomicdoublearray .",unit test for @link atomicdoublearray .,,,,,,"source
http gee.cs.oswego.edu cgi bin viewcvs.cgi jsr166 src test tck jsr166e atomicdoublearraytest.java?revision 113
modified to adapt to guava coding conventions"
4,BaseEncodingBenchmark.java,benchmark for @code baseencoding performance.,benchmark for @code baseencoding performance.,,,,,,
4,BloomFilter.java,"a bloom filter for instances of @code t . a bloom filter offers an approximate containment test
with one sided error if it claims that an element is contained in it, this might be in error,
but if it claims that an element is i not i contained in it, then this is definitely true.

p if you are unfamiliar with bloom filters, this nice a
href http llimllib.github.com bloomfilter tutorial tutorial a may help you understand how
they work.

p the false positive probability @code fpp of a bloom filter is defined as the probability
that @linkplain #mightcontain object will erroneously return @code true for an object that
has not actually been put in the @code bloomfilter .

p bloom filters are serializable. they also support a more compact serial representation via the
@link #writeto and @link #readfrom methods. both serialized forms will continue to be
supported by future versions of this library. however, serial forms generated by newer versions
of the code may not be readable by older versions of the code eg, a serialized bloom filter
generated today may i not i be readable by a binary that was compiled 6 months ago .

p as of guava 230, this class is thread safe and lock free. it internally uses atomics and
compare and swap to ensure correctness when multiple threads are used to access it.

@param t the type of instances that the @code bloomfilter accepts
@author dimitris andreou
@author kevin bourrillion
@since 110 thread safe since 230
cheat sheet m total bits n expected insertions b m n, bits per insertion p expected false positive probability 1 optimal k b ln2 2 p 1 e ^ kn m ^k 3 for optimal k p 2 ^ k 06185^b 4 for optimal k m nlnp ln2 ^ 2
a strategy to translate t instances, to @code numhashfunctions bit indexes.

p implementations should be collections of pure functions ie stateless .","a bloom filter for instances of @code t . a bloom filter offers an approximate containment test
with one sided error if it claims that an element is contained in it, this might be in error,
but if it claims that an element is i not i contained in it, then this is definitely true.","p the false positive probability @code fpp of a bloom filter is defined as the probability
that @linkplain #mightcontain object will erroneously return @code true for an object that
has not actually been put in the @code bloomfilter .

p bloom filters are serializable. they also support a more compact serial representation via the
@link #writeto and @link #readfrom methods. both serialized forms will continue to be
supported by future versions of this library. however, serial forms generated by newer versions
of the code may not be readable by older versions of the code eg, a serialized bloom filter
generated today may i not i be readable by a binary that was compiled 6 months ago .",,"however, serial forms generated by newer versions
of the code may not be readable by older versions of the code eg, a serialized bloom filter
generated today may i not i be readable by a binary that was compiled 6 months ago .
p as of guava 230, this class is thread safe and lock free. it internally uses atomics and
compare and swap to ensure correctness when multiple threads are used to access it.
@since 110 thread safe since 230","@param t the type of instances that the @code bloomfilter accepts.
cheat sheet m total bits n expected insertions b m n, bits per insertion p expected false positive probability 1 optimal k b ln2 2 p 1 e ^ kn m ^k 3 for optimal k p 2 ^ k 06185^b 4 for optimal k m nlnp ln2 ^ 2
a strategy to translate t instances, to @code numhashfunctions bit indexes.

p implementations should be collections of pure functions ie stateless .","@author dimitris andreou
@author kevin bourrillion","p if you are unfamiliar with bloom filters, this nice a
href http llimllib.github.com bloomfilter tutorial tutorial a may help you understand how
they work.
p the false positive probability @code fpp of a bloom filter is defined as the probability
that @linkplain #mightcontain object will erroneously return @code true for an object that
has not actually been put in the @code bloomfilter .

p bloom filters are serializable. they also support a more compact serial representation via the
@link #writeto and @link #readfrom methods."
4,CacheBuilder.java,"a builder of @link loadingcache and @link cache instances having any combination of the
following features

ul
li automatic loading of entries into the cache
li least recently used eviction when a maximum size is exceeded
li time based expiration of entries, measured since last access or last write
li keys automatically wrapped in @linkplain weakreference weak references
li values automatically wrapped in @linkplain weakreference weak or @linkplain
softreference soft references
li notification of evicted or otherwise removed entries
li accumulation of cache access statistics
ul

p these features are all optional caches can be created using all or none of them. by default
cache instances created by @code cachebuilder will not perform any type of eviction.

p usage example

pre @code
loadingcache key, graph graphs cachebuilder.newbuilder
maximumsize 10000
expireafterwrite duration.ofminutes 10
removallistener my listener
build
new cacheloader key, graph
public graph load key key throws anyexception
return createexpensivegraph key

pre

p or equivalently,

pre @code
in real life this would come from a command line flag or config file
string spec maximumsize 10000,expireafterwrite 10m

loadingcache key, graph graphs cachebuilder.from spec
removallistener my listener
build
new cacheloader key, graph
public graph load key key throws anyexception
return createexpensivegraph key

pre

p the returned cache is implemented as a hash table with similar performance characteristics to
@link concurrenthashmap . it implements all optional operations of the @link loadingcache and
@link cache interfaces. the @code asmap view and its collection views have i weakly
consistent iterators i . this means that they are safe for concurrent use, but if other threads
modify the cache after the iterator is created, it is undefined which of these changes, if any,
are reflected in that iterator. these iterators never throw @link
concurrentmodificationexception .

p b note b by default, the returned cache uses equality comparisons the @link
object#equals equals method to determine equality for keys or values. however, if @link
#weakkeys was specified, the cache uses identity @code comparisons instead for keys.
likewise, if @link #weakvalues or @link #softvalues was specified, the cache uses identity
comparisons for values.

p entries are automatically evicted from the cache when any of @linkplain #maximumsize long
maximumsize , @linkplain #maximumweight long maximumweight , @linkplain #expireafterwrite
expireafterwrite , @linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys
weakkeys , @linkplain #weakvalues weakvalues , or @linkplain #softvalues softvalues are
requested.

p if @linkplain #maximumsize long maximumsize or @linkplain #maximumweight long
maximumweight is requested entries may be evicted on each cache modification.

p if @linkplain #expireafterwrite expireafterwrite or @linkplain #expireafteraccess
expireafteraccess is requested entries may be evicted on each cache modification, on occasional
cache accesses, or on calls to @link cache#cleanup . expired entries may be counted by @link
cache#size , but will never be visible to read or write operations.

p if @linkplain #weakkeys weakkeys , @linkplain #weakvalues weakvalues , or @linkplain
#softvalues softvalues are requested, it is possible for a key or value present in the cache to
be reclaimed by the garbage collector. entries with reclaimed keys or values may be removed from
the cache on each cache modification, on occasional cache accesses, or on calls to @link
cache#cleanup such entries may be counted in @link cache#size , but will never be visible to
read or write operations.

p certain cache configurations will result in the accrual of periodic maintenance tasks which
will be performed during write operations, or during occasional read operations in the absence of
writes. the @link cache#cleanup method of the returned cache will also perform maintenance, but
calling it should not be necessary with a high throughput cache. only caches built with
@linkplain #removallistener removallistener , @linkplain #expireafterwrite expireafterwrite ,
@linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys weakkeys , @linkplain
#weakvalues weakvalues , or @linkplain #softvalues softvalues perform periodic maintenance.

p the caches produced by @code cachebuilder are serializable, and the deserialized caches
retain all the configuration properties of the original cache. note that the serialized form does
i not i include cache contents, but only configuration.

p see the guava user guide article on a
href https github.com google guava wiki cachesexplained caching a for a higher level
explanation.

@param k the most general key type this builder will be able to create caches for. this is
normally @code object unless it is constrained by using a method like @code
#removallistener
@param v the most general value type this builder will be able to create caches for. this is
normally @code object unless it is constrained by using a method like @code
#removallistener
@author charles fry
@author kevin bourrillion
@since 100",a builder of @link loadingcache and @link cache instances,"having any combination of the
following features

ul
li automatic loading of entries into the cache
li least recently used eviction when a maximum size is exceeded
li time based expiration of entries, measured since last access or last write
li keys automatically wrapped in @linkplain weakreference weak references
li values automatically wrapped in @linkplain weakreference weak or @linkplain
softreference soft references
li notification of evicted or otherwise removed entries
li accumulation of cache access statistics
ul
p entries are automatically evicted from the cache when any of @linkplain #maximumsize long
maximumsize , @linkplain #maximumweight long maximumweight , @linkplain #expireafterwrite
expireafterwrite , @linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys
weakkeys , @linkplain #weakvalues weakvalues , or @linkplain #softvalues softvalues are
requested.",,@since 100,"p these features are all optional caches can be created using all or none of them. by default
cache instances created by @code cachebuilder will not perform any type of eviction.

p usage example

pre @code
loadingcache key, graph graphs cachebuilder.newbuilder
maximumsize 10000
expireafterwrite duration.ofminutes 10
removallistener my listener
build
new cacheloader key, graph
public graph load key key throws anyexception
return createexpensivegraph key

pre

p or equivalently,

pre @code
in real life this would come from a command line flag or config file
string spec maximumsize 10000,expireafterwrite 10m

loadingcache key, graph graphs cachebuilder.from spec
removallistener my listener
build
new cacheloader key, graph
public graph load key key throws anyexception
return createexpensivegraph key

pre

p the returned cache is implemented as a hash table with similar performance characteristics to
@link concurrenthashmap . it implements all optional operations of the @link loadingcache and
@link cache interfaces. the @code asmap view and its collection views have i weakly
consistent iterators i . this means that they are safe for concurrent use, but if other threads
modify the cache after the iterator is created, it is undefined which of these changes, if any,
are reflected in that iterator. these iterators never throw @link
concurrentmodificationexception .

p b note b by default, the returned cache uses equality comparisons the @link
object#equals equals method to determine equality for keys or values. however, if @link
#weakkeys was specified, the cache uses identity @code comparisons instead for keys.
likewise, if @link #weakvalues or @link #softvalues was specified, the cache uses identity
comparisons for values.

p entries are automatically evicted from the cache when any of @linkplain #maximumsize long
maximumsize , @linkplain #maximumweight long maximumweight , @linkplain #expireafterwrite
expireafterwrite , @linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys
weakkeys , @linkplain #weakvalues weakvalues , or @linkplain #softvalues softvalues are
requested.

p if @linkplain #maximumsize long maximumsize or @linkplain #maximumweight long
maximumweight is requested entries may be evicted on each cache modification.

p if @linkplain #expireafterwrite expireafterwrite or @linkplain #expireafteraccess
expireafteraccess is requested entries may be evicted on each cache modification, on occasional
cache accesses, or on calls to @link cache#cleanup . expired entries may be counted by @link
cache#size , but will never be visible to read or write operations.

p if @linkplain #weakkeys weakkeys , @linkplain #weakvalues weakvalues , or @linkplain
#softvalues softvalues are requested, it is possible for a key or value present in the cache to
be reclaimed by the garbage collector. entries with reclaimed keys or values may be removed from
the cache on each cache modification, on occasional cache accesses, or on calls to @link
cache#cleanup such entries may be counted in @link cache#size , but will never be visible to
read or write operations.

p certain cache configurations will result in the accrual of periodic maintenance tasks which
will be performed during write operations, or during occasional read operations in the absence of
writes. the @link cache#cleanup method of the returned cache will also perform maintenance, but
calling it should not be necessary with a high throughput cache. only caches built with
@linkplain #removallistener removallistener , @linkplain #expireafterwrite expireafterwrite ,
@linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys weakkeys , @linkplain
#weakvalues weakvalues , or @linkplain #softvalues softvalues perform periodic maintenance.

p the caches produced by @code cachebuilder are serializable, and the deserialized caches
retain all the configuration properties of the original cache. note that the serialized form does
i not i include cache contents, but only configuration.

@param k the most general key type this builder will be able to create caches for. this is
normally @code object unless it is constrained by using a method like @code
#removallistener
@param v the most general value type this builder will be able to create caches for. this is
normally @code object unless it is constrained by using a method like @code
#removallistener","@author charles fry
@author kevin bourrillion","p see the guava user guide article on a
href https github.com google guava wiki cachesexplained caching a for a higher level
explanation.
these iterators never throw @link
concurrentmodificationexception ."
4,CacheLoaderTest.java,"unit tests for @link cacheloader .

@author charles fry",unit tests for @link cacheloader .,,,,,@author charles fry,
4,CacheManualTest.java,@author charles fry,,,,,,@author charles fry,
4,ClassToInstanceMap.java,"a map, each entry of which maps a java a href http tinyurl.com 2cmwkz raw type a to an
instance of that type. in addition to implementing @code map , the additional type safe
operations @link #putinstance and @link #getinstance are available.

p like any other @code map class, object , this map may contain entries for primitive types,
and a primitive type and its corresponding wrapper type may map to different values.

p see the guava user guide article on a href
https github.com google guava wiki newcollectiontypesexplained#classtoinstancemap @code
classtoinstancemap a .

p to map a generic type to an instance of that type, use @link
com.google.common.reflect.typetoinstancemap instead.

@param b the common supertype that all entries must share often this is simply @link object
@author kevin bourrillion
@since 20","a map, each entry of which maps a java a href http tinyurl.com 2cmwkz raw type a to an
instance of that type. in addition to implementing @code map , the additional type safe
operations @link #putinstance and @link #getinstance are available.","p like any other @code map class, object , this map may contain entries for primitive types,
and a primitive type and its corresponding wrapper type may map to different values.",,@since 20,"p to map a generic type to an instance of that type, use @link
com.google.common.reflect.typetoinstancemap instead.

@param b the common supertype that all entries must share often this is simply @link object",@author kevin bourrillion,"p see the guava user guide article on a href
https github.com google guava wiki newcollectiontypesexplained#classtoinstancemap @code
classtoinstancemap a ."
4,CloseablesTest.java,"unit tests for @link closeables .

p checks proper closing behavior, and ensures that ioexceptions on closeable.close are not
propagated out from the @link closeables#close method if @code swallowexception is true.

@author michael lancaster",unit tests for @link closeables .,"p checks proper closing behavior, and ensures that ioexceptions on closeable.close are not
propagated out from the @link closeables#close method if @code swallowexception is true.",,,,@author michael lancaster,
4,CollectionTestSuiteBuilder.java,"concrete instantiation of @link abstractcollectiontestsuitebuilder for testing collections that
do not have a more specific tester like @link listtestsuitebuilder or @link
settestsuitebuilder .

@author chris povirk
@author louis wasserman","concrete instantiation of @link abstractcollectiontestsuitebuilder for testing collections that
do not have a more specific tester like @link listtestsuitebuilder or @link
settestsuitebuilder .",,,,,"@author chris povirk
@author louis wasserman","@link abstractcollectiontestsuitebuilder
@link listtestsuitebuilder or @link
settestsuitebuilder ."
4,ConflictingRequirementsException.java,"thrown when requirements on a tester method or class conflict with each other.

@author george van den driessche",thrown when requirements on a tester method or class conflict with each other.,,,,,@author george van den driessche,
4,CountingOutputStream.java,"an outputstream that counts the number of bytes written.

@author chris nokleberg
@since 10",an outputstream that counts the number of bytes written.,,,@since 10,,@author chris nokleberg,
4,DescendingMultiset.java,"a skeleton implementation of a descending multiset. only needs @code forwardmultiset and
@code entryiterator .

@author louis wasserman",a skeleton implementation of a descending multiset.,,,,,@author louis wasserman,"only needs @code forwardmultiset and
@code entryiterator ."
4,EqualsTester.java,"tester for equals and hashcode methods of a class.

p the simplest use case is

pre
new equalstester .addequalitygroup foo .testequals
pre

p this tests @code foo.equals foo , @code foo.equals null , and a few other operations.

p for more extensive testing, add multiple equality groups. each group should contain objects
that are equal to each other but unequal to the objects in any other group. for example

pre
new equalstester
addequalitygroup new user page , new user page
addequalitygroup new user sergey
testequals
pre

p this tests

ul
li comparing each object against itself returns true
li comparing each object against null returns false
li comparing each object against an instance of an incompatible class returns false
li comparing each pair of objects within the same equality group returns true
li comparing each pair of objects from different equality groups returns false
li the hash codes of any two equal objects are equal
ul

p when a test fails, the error message labels the objects involved in the failed comparison as
follows

ul
li @code group i i i @code , item i j i @code refers to the
i j i sup th sup item in the i i i sup th sup equality group, where both equality
groups and the items within equality groups are numbered starting from 1. when either a
constructor argument or an equal object is provided, that becomes group 1.
ul

@author jim mcmaster
@author jige yu
@since 100

class used to test whether equals correctly handles an instance of an incompatible class.
since it is a private inner class, the invoker can never pass in an instance to the tester",tester for equals and hashcode methods of a class.,,"p this tests

ul
li comparing each object against itself returns true
li comparing each object against null returns false
li comparing each object against an instance of an incompatible class returns false
li comparing each pair of objects within the same equality group returns true
li comparing each pair of objects from different equality groups returns false
li the hash codes of any two equal objects are equal
ul",@since 100,"p the simplest use case is

pre
new equalstester .addequalitygroup foo .testequals
pre

p this tests @code foo.equals foo , @code foo.equals null , and a few other operations.

p for more extensive testing, add multiple equality groups. each group should contain objects
that are equal to each other but unequal to the objects in any other group. for example

pre
new equalstester
addequalitygroup new user page , new user page
addequalitygroup new user sergey
testequals
pre

class used to test whether equals correctly handles an instance of an incompatible class.
since it is a private inner class, the invoker can never pass in an instance to the tester","@author jim mcmaster
@author jige yu",
4,FeatureSpecificTestSuiteBuilder.java,"creates, based on your criteria, a junit test suite that exhaustively tests the object generated
by a g, selecting appropriate tests by matching them against specified features.

@param b the concrete type of this builder the self type . all the builder methods of this
class such as @link #named return this type, so that builder methods of more derived
classes can be chained onto them without casting.
@param g the type of the generator to be passed to testers in the generated test suite. an
instance of g should somehow provide an instance of the class under test, plus any other
information required to parameterize the test.
@author george van den driessche","creates, based on your criteria, a junit test suite that exhaustively tests the object generated
by a g",", selecting appropriate tests by matching them against specified features.",,,"@param b the concrete type of this builder the self type . all the builder methods of this
class such as @link #named return this type, so that builder methods of more derived
classes can be chained onto them without casting.
@param g the type of the generator to be passed to testers in the generated test suite. an
instance of g should somehow provide an instance of the class under test, plus any other
information required to parameterize the test.",@author george van den driessche,
4,ForwardingBlockingDequeTest.java,"test for @link forwardingblockingdeque

@author emily soldal",test for @link forwardingblockingdeque,,,,,@author emily soldal,
4,ForwardingImmutableSet.java,"gwt implementation of @link immutableset that forwards to another @code set implementation.

@author hayward chan",gwt implementation of @link immutableset that forwards to another @code set implementation.,,,,,@author hayward chan,@link immutableset
4,ForwardingQueueTest.java,"tests for @code forwardingqueue .

@author robert konigsberg
@author louis wasserman",tests for @code forwardingqueue .,,,,,"@author robert konigsberg
@author louis wasserman",
4,GwtTestSuite.java,"runs all gwt tests. grouping them into a suite is much faster than running each as a one test
suite, as the per suite setup is expensive.",runs all gwt tests.,,"grouping them into a suite is much faster than running each as a one test
suite, as the per suite setup is expensive.",,,,
4,HashFunctionEnum.java,"an enum that contains all of the known hash functions.

@author kurt alfred kluever",an enum that contains all of the known hash functions.,,,,,@author kurt alfred kluever,
4,HostAndPort.java,"an immutable representation of a host and port.

p example usage

pre
hostandport hp hostandport.fromstring 2001 db8 1
withdefaultport 80
requirebracketsforipv6
hp.gethost returns 2001 db8 1
hp.getport returns 80
hp.tostring returns 2001 db8 1 80
pre

p here are some examples of recognized formats

ul
li example.com
li example.com 80
li 1920.21
li 1920.21 80
li 2001 db8 1 @link #gethost omits brackets
li 2001 db8 1 80 @link #gethost omits brackets
li 2001 db8 1 use @link #requirebracketsforipv6 to prohibit this
ul

p note that this is not an exhaustive list, because these methods are only concerned with
brackets, colons, and port numbers. full validation of the host field if desired is the
caller s responsibility.

@author paul marks
@since 100",an immutable representation of a host and port.,,,@since 100,"p example usage

pre
hostandport hp hostandport.fromstring 2001 db8 1
withdefaultport 80
requirebracketsforipv6
hp.gethost returns 2001 db8 1
hp.getport returns 80
hp.tostring returns 2001 db8 1 80
pre

p here are some examples of recognized formats

ul
li example.com
li example.com 80
li 1920.21
li 1920.21 80
li 2001 db8 1 @link #gethost omits brackets
li 2001 db8 1 80 @link #gethost omits brackets
li 2001 db8 1 use @link #requirebracketsforipv6 to prohibit this
ul

p note that this is not an exhaustive list, because these methods are only concerned with
brackets, colons, and port numbers. full validation of the host field if desired is the
caller s responsibility.",@author paul marks,
4,ImmutableSetHashFloodingDetectionBenchmark.java,benchmark of implementations of @link immutableset#hashfloodingdetected object .,benchmark of implementations of @link immutableset#hashfloodingdetected object .,,,,,,@link immutableset#hashfloodingdetected object .
4,ImmutableTable_CustomFieldSerializerBase.java,"this class contains static utility methods for writing @link immutabletable gwt field
serializers. serializers should delegate to @link #serialize and @link #instantiate .

@author chris povirk","this class contains static utility methods for writing @link immutabletable gwt field
serializers.",,,,serializers should delegate to @link #serialize and @link #instantiate .,@author chris povirk,
4,LazyStackTraceBenchmark.java,"quick and dirty benchmark of @link throwables#lazystacktrace throwable . we benchmark a caller
finder implementation that might be used in a logging framework.",quick and dirty benchmark of @link throwables#lazystacktrace throwable .,,"we benchmark a caller
finder implementation that might be used in a logging framework.",,,,quick and dirty benchmark of @link throwables#lazystacktrace throwable .
4,LongMathBenchmark.java,"benchmarks for the non rounding methods of @code longmath .

@author louis wasserman",benchmarks for the non rounding methods of @code longmath .,,,,,@author louis wasserman,
4,MapPutAllTester.java,"a generic junit test which tests @code putall operations on a map. can t be invoked directly
please see @link com.google.common.collect.testing.maptestsuitebuilder .

@author chris povirk
@author kevin bourrillion",a generic junit test which tests @code putall operations on a map,,,,,"@author chris povirk
@author kevin bourrillion",please see @link com.google.common.collect.testing.maptestsuitebuilder .
4,MapSerializationTester.java,"basic serialization test for maps.

@author louis wasserman",basic serialization test for maps.,,,,,@author louis wasserman,
4,MultimapBuilder.java,"a builder for a multimap implementation that allows customization of the backing map and value
collection implementations used in a particular multimap.

p this can be used to easily configure multimap data structure implementations not provided
explicitly in @code com.google.common.collect , for example

pre @code
listmultimap string, integer treelistmultimap
multimapbuilder.treekeys .arraylistvalues .build
setmultimap integer, myenum hashenummultimap
multimapbuilder.hashkeys .enumsetvalues myenum.class .build
pre

p @code multimapbuilder instances are immutable. invoking a configuration method has no effect
on the receiving instance you must store and use the new builder instance it returns instead.

p the generated multimaps are serializable if the key and value types are serializable, unless
stated otherwise in one of the configuration methods.

@author louis wasserman
@param k0 an upper bound on the key type of the generated multimap.
@param v0 an upper bound on the value type of the generated multimap.
@since 160

leaving k and v as upper bounds rather than the actual key and value types allows type
parameters to be left implicit more often. cachebuilder uses the same technique.

an intermediate stage in a @link multimapbuilder in which the key value collection map
implementation has been specified, but the value collection implementation has not.

@param k0 the upper bound on the key type of the generated multimap.
@since 160

leaving k and v as upper bounds rather than the actual key and value types allows type
parameters to be left implicit more often. cachebuilder uses the same technique.

a specialization of @link multimapbuilder that generates @link listmultimap instances.

@since 160

leaving k and v as upper bounds rather than the actual key and value types allows type
parameters to be left implicit more often. cachebuilder uses the same technique.

a specialization of @link multimapbuilder that generates @link setmultimap instances.

@since 160

leaving k and v as upper bounds rather than the actual key and value types allows type
parameters to be left implicit more often. cachebuilder uses the same technique.

a specialization of @link multimapbuilder that generates @link sortedsetmultimap instances.

@since 160","a builder for a multimap implementation that allows customization of the backing map and value
collection implementations used in a particular multimap.","this can be used to easily configure multimap data structure implementations not provided
explicitly in @code com.google.common.collect ,",,@since 160,"p this can be used to easily configure multimap data structure implementations not provided
explicitly in @code com.google.common.collect , for example

pre @code
listmultimap string, integer treelistmultimap
multimapbuilder.treekeys .arraylistvalues .build
setmultimap integer, myenum hashenummultimap
multimapbuilder.hashkeys .enumsetvalues myenum.class .build
pre

p @code multimapbuilder instances are immutable. invoking a configuration method has no effect
on the receiving instance you must store and use the new builder instance it returns instead.

p the generated multimaps are serializable if the key and value types are serializable, unless
stated otherwise in one of the configuration methods.

@param k0 an upper bound on the key type of the generated multimap.
@param v0 an upper bound on the value type of the generated multimap.

leaving k and v as upper bounds rather than the actual key and value types allows type
parameters to be left implicit more often. cachebuilder uses the same technique.

an intermediate stage in a @link multimapbuilder in which the key value collection map
implementation has been specified, but the value collection implementation has not.

@param k0 the upper bound on the key type of the generated multimap.
@since 160

leaving k and v as upper bounds rather than the actual key and value types allows type
parameters to be left implicit more often. cachebuilder uses the same technique.

a specialization of @link multimapbuilder that generates @link listmultimap instances.",@author louis wasserman,
4,MultimapBuilderTest.java,"tests for @link multimapbuilder .

@author louis wasserman",tests for @link multimapbuilder .,,,,,@author louis wasserman,
4,NullsLastOrdering_CustomFieldSerializer.java,"this class implements the gwt serialization of @link nullslastordering .

@author chris povirk",this class implements the gwt serialization of @link nullslastordering .,,,,,@author chris povirk,
4,ObjectCountHashMap.java,"objectcounthashmap is an implementation of @code abstractobjectcountmap that uses arrays to
store key objects and count values. comparing to using a traditional @code hashmap
implementation which stores keys and count values as map entries, @code objectcounthashmap
minimizes object allocation and reduces memory footprint.

p in the absence of element deletions, this will iterate over elements in insertion order.","objectcounthashmap is an implementation of @code abstractobjectcountmap that uses arrays to
store key objects and count values.",,"comparing to using a traditional @code hashmap
implementation which stores keys and count values as map entries, @code objectcounthashmap
minimizes object allocation and reduces memory footprint.",,"p in the absence of element deletions, this will iterate over elements in insertion order.",,
4,PeekingIterator.java,"an iterator that supports a one element lookahead while iterating.

p see the guava user guide article on a href
https github.com google guava wiki collectionhelpersexplained#peekingiterator @code
peekingiterator a .

@author mick killianey
@since 20",an iterator that supports a one element lookahead while iterating.,,,,,"@author mick killianey
@since 20","p see the guava user guide article on a href
https github.com google guava wiki collectionhelpersexplained#peekingiterator @code
peekingiterator a ."
4,Preconditions.java,"static convenience methods that help a method or constructor check whether it was invoked
correctly that is, whether its i preconditions i were met .

p if the precondition is not met, the @code preconditions method throws an unchecked exception
of a specified type, which helps the method in which the exception was thrown communicate that
its caller has made a mistake. this allows constructs such as

pre @code
public static double sqrt double value
if value 0
throw new illegalargumentexception input is negative value

calculate square root

pre

p to be replaced with the more compact

pre @code
public static double sqrt double value
checkargument value 0, input is negative %s , value
calculate square root

pre

p so that a hypothetical bad caller of this method, such as

pre @code
void examplebadcaller
double d sqrt 10

pre

p would be flagged as having called @code sqrt with an illegal argument.

h3 performance h3

p avoid passing message arguments that are expensive to compute your code will always compute
them, even though they usually won t be needed. if you have such arguments, use the conventional
if throw idiom instead.

p depending on your message arguments, memory may be allocated for boxing and varargs array
creation. however, the methods of this class have a large number of overloads that prevent such
allocations in many common cases.

p the message string is not formatted unless the exception will be thrown, so the cost of the
string formatting itself should not be a concern.

p as with any performance concerns, you should consider profiling your code in a production
environment if possible before spending a lot of effort on tweaking a particular element.

h3 other types of preconditions h3

p not every type of precondition failure is supported by these methods. continue to throw
standard jdk exceptions such as @link java.util.nosuchelementexception or @link
unsupportedoperationexception in the situations they are intended for.

h3 non preconditions h3

p it is of course possible to use the methods of this class to check for invalid conditions
which are i not the caller s fault i . doing so is b not recommended b because it is
misleading to future readers of the code and of stack traces. see a
href https github.com google guava wiki conditionalfailuresexplained conditional failures
explained a in the guava user guide for more advice. notably, @link verify offers assertions
similar to those in this class for non precondition checks.

h3 @code java.util.objects.requirenonnull h3

p projects which use @code com.google.common should generally avoid the use of @link
java.util.objects#requirenonnull object . instead, use whichever of @link
#checknotnull object or @link verify#verifynotnull object is appropriate to the situation.
the same goes for the message accepting overloads.

h3 only @code %s is supported h3

p @code preconditions uses @link strings#lenientformat to format error message template
strings. this only supports the @code %s specifier, not the full range of @link
java.util.formatter specifiers. however, note that if the number of arguments does not match the
number of occurrences of @code %s in the format string, @code preconditions will still
behave as expected, and will still include all argument values in the error message the message
will simply not be formatted exactly as intended.

h3 more information h3

p see the guava user guide on a
href https github.com google guava wiki preconditionsexplained using @code
preconditions a .

@author kevin bourrillion
@since 20","static convenience methods that help a method or constructor check whether it was invoked
correctly that is, whether its i preconditions i were met .","p if the precondition is not met, the @code preconditions method throws an unchecked exception
of a specified type, which helps the method in which the exception was thrown communicate that
its caller has made a mistake. this allows constructs such as

pre @code
public static double sqrt double value
if value 0
throw new illegalargumentexception input is negative value

calculate square root

pre",,@since 20,"this allows constructs such as

pre @code
public static double sqrt double value
if value 0
throw new illegalargumentexception input is negative value

calculate square root

pre

p to be replaced with the more compact

pre @code
public static double sqrt double value
checkargument value 0, input is negative %s , value
calculate square root

pre

p so that a hypothetical bad caller of this method, such as

pre @code
void examplebadcaller
double d sqrt 10

pre

p would be flagged as having called @code sqrt with an illegal argument.

h3 performance h3

p avoid passing message arguments that are expensive to compute your code will always compute
them, even though they usually won t be needed. if you have such arguments, use the conventional
if throw idiom instead.

p depending on your message arguments, memory may be allocated for boxing and varargs array
creation. however, the methods of this class have a large number of overloads that prevent such
allocations in many common cases.

p the message string is not formatted unless the exception will be thrown, so the cost of the
string formatting itself should not be a concern.

p as with any performance concerns, you should consider profiling your code in a production
environment if possible before spending a lot of effort on tweaking a particular element.

h3 other types of preconditions h3

p not every type of precondition failure is supported by these methods. continue to throw
standard jdk exceptions such as @link java.util.nosuchelementexception or @link
unsupportedoperationexception in the situations they are intended for.

h3 non preconditions h3

p it is of course possible to use the methods of this class to check for invalid conditions
which are i not the caller s fault i . doing so is b not recommended b because it is
misleading to future readers of the code and of stack traces. see a
href https github.com google guava wiki conditionalfailuresexplained conditional failures
explained a in the guava user guide for more advice. notably, @link verify offers assertions
similar to those in this class for non precondition checks.

h3 @code java.util.objects.requirenonnull h3

p projects which use @code com.google.common should generally avoid the use of @link
java.util.objects#requirenonnull object . instead, use whichever of @link
#checknotnull object or @link verify#verifynotnull object is appropriate to the situation.
the same goes for the message accepting overloads.

h3 only @code %s is supported h3

p @code preconditions uses @link strings#lenientformat to format error message template
strings. this only supports the @code %s specifier, not the full range of @link
java.util.formatter specifiers. however, note that if the number of arguments does not match the
number of occurrences of @code %s in the format string, @code preconditions will still
behave as expected, and will still include all argument values in the error message the message
will simply not be formatted exactly as intended.",@author kevin bourrillion,"h3 more information h3

p see the guava user guide on a
href https github.com google guava wiki preconditionsexplained using @code
preconditions a .
see a
href https github.com google guava wiki conditionalfailuresexplained conditional failures
explained a in the guava user guide for more advice

notably, @link verify offers assertions
similar to those in this class for non precondition checks."
4,RegularImmutableList_CustomFieldSerializer.java,"this class implements the gwt serialization of @link regularimmutablelist .

@author hayward chan",this class implements the gwt serialization of @link regularimmutablelist .,,,,,@author hayward chan,@link regularimmutablelist .
4,ReserializingTestCollectionGenerator.java,"reserializes the sets created by another test set generator.

p todo make collectiontestsuitebuilder test reserialized collections

@author jesse wilson",reserializes the sets created by another test set generator.,,,,,@author jesse wilson,
4,Resources.java,"provides utility methods for working with resources in the classpath. note that even though these
methods use @link url parameters, they are usually not appropriate for http or other
non classpath resources.

p all method parameters must be non null unless documented otherwise.

@author chris nokleberg
@author ben yu
@author colin decker
@since 10
a byte source that reads from a url using @link url#openstream .",provides utility methods for working with resources in the classpath.,a byte source that reads from a url using @link url#openstream,,@since 10,p all method parameters must be non null unless documented otherwise.,"@author chris nokleberg
@author ben yu
@author colin decker",
4,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?

the primary feature of a ratelimiter is its stable rate , the maximum rate that is should
allow at normal conditions. this is enforced by throttling incoming requests as needed, ie
compute, for an incoming request, the appropriate throttle time, and make the calling thread
wait as much.

the simplest way to maintain a rate of qps is to keep the timestamp of the last granted
request, and ensure that 1 qps seconds have elapsed since then. for example, for a rate of
qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after
the last one, then we achieve the intended rate. if a request comes and the last request was
granted only 100ms ago, then we wait for another 100ms. at this rate, serving 15 fresh permits
ie for an acquire 15 request naturally takes 3 seconds.

it is important to realize that such a ratelimiter has a very superficial memory of the past
it only remembers the last request. what if the ratelimiter was unused for a long period of
time, then a request arrived and was immediately granted? this ratelimiter would immediately
forget about that past underutilization. this may result in either underutilization or
overflow, depending on the real world consequences of not using the expected rate.

past underutilization could mean that excess resources are available. then, the ratelimiter
should speed up for a while, to take advantage of these resources. this is important when the
rate is applied to networking limiting bandwidth , where past underutilization typically
translates to almost empty buffers , which can be filled immediately.

on the other hand, past underutilization could mean that the server responsible for handling
the request has become less ready for future requests , ie its caches become stale, and
requests become more likely to trigger expensive operations a more extreme case of this
example is when a server has just booted, and it is mostly busy with getting itself up to
speed .

to deal with such scenarios, we add an extra dimension, that of past underutilization ,
modeled by storedpermits variable. this variable is zero when there is no underutilization,
and it can grow up to maxstoredpermits, for sufficiently large underutilization. so, the
requested permits, by an invocation acquire permits , are served from

stored permits if available

fresh permits for any remaining permits

how this works is best explained with an example

for a ratelimiter that produces 1 token per second, every second that goes by with the
ratelimiter being unused, we increase storedpermits by 1. say we leave the ratelimiter unused
for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before
a request actually arrives this is also related to the point made in the last paragraph , thus
storedpermits becomes 100 assuming maxstoredpermits 100 . at that point, a request of
acquire 3 arrives. we serve this request out of storedpermits, and reduce that to 70 how
this is translated to throttling time is discussed later . immediately after, assume that an
acquire 10 request arriving. we serve the request partly from storedpermits, using all the
remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the
rate limiter.

we already know how much time it takes to serve 3 fresh permits if the rate is
1 token per second , then this will take 3 seconds. but what does it mean to serve 7 stored
permits? as explained above, there is no unique answer. if we are primarily interested to deal
with underutilization, then we want stored permits to be given out faster than fresh ones,
because underutilization free resources for the taking. if we are primarily interested to
deal with overflow, then stored permits could be given out slower than fresh ones. thus, we
require a different in each case function that translates storedpermits to throttling time.

this role is played by storedpermitstowaittime double storedpermits, double permitstotake . the
underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits
onto the 1 rate ie intervals that is effective at the given storedpermits. storedpermits
essentially measure unused time we spend unused time buying storing permits. rate is
permits time , thus 1 rate time permits . thus, 1 rate time permits times
permits gives time, ie, integrals on this function which is what storedpermitstowaittime
computes correspond to minimum intervals between subsequent requests, for the specified number
of requested permits.

here is an example of storedpermitstowaittime if storedpermits 100, and we want 3 permits,
we take them from storedpermits, reducing them to 70, and compute the throttling for these as
a call to storedpermitstowaittime storedpermits 100, permitstotake 30 , which will
evaluate the integral of the function from 70 to 100.

using integrals guarantees that the effect of a single acquire 3 is equivalent to
acquire 1 acquire 1 acquire 1 , or acquire 2 acquire 1 , etc, since the integral
of the function in 70, 100 is equivalent to the sum of the integrals of 70, 80 , 80,
90 , 90, 100 and so on , no matter what the function is. this guarantees that we handle
correctly requests of varying weight permits , no matter what the actual function is so we
can tweak the latter freely. the only requirement, obviously, is that we can compute its
integrals .

note well that if, for this function, we chose a horizontal line, at height of exactly 1 qps ,
then the effect of the function is non existent we serve storedpermits at exactly the same
cost as fresh ones 1 qps is the cost for each . we use this trick later.

if we pick a function that goes below that horizontal line, it means that we reduce the area
of the function, thus time. thus, the ratelimiter becomes faster after a period of
underutilization. if, on the other hand, we pick a function that goes above that horizontal
line, then it means that the area time is increased, thus storedpermits are more costly than
fresh permits, thus the ratelimiter becomes slower after a period of underutilization.

last, but not least consider a ratelimiter with rate of 1 permit per second, currently
completely unused, and an expensive acquire 100 request comes. it would be nonsensical to just
wait for 100 seconds, and then start the actual task. why wait without doing anything? a much
better approach is to allow the request right away as if it was an acquire 1 request
instead , and postpone subsequent requests as needed. in this version, we allow starting the
task immediately, and postpone by 100 seconds future requests, thus we allow for work to get
done in the meantime instead of waiting idly.

this has important consequences it means that the ratelimiter doesn t remember the time of the
last request, but it remembers the expected time of the next request. this also enables
us to tell immediately see tryacquire timeout whether a particular timeout is enough to get
us to the point of the next scheduling time, since we always maintain that. and what we mean by
an unused ratelimiter is also defined by that notion when we observe that the
expected arrival time of the next request is actually in the past, then the difference now
past is the amount of time that the ratelimiter was formally unused, and it is that amount of
time which we translate to storedpermits. we increase storedpermits with the amount of permits
that would have been produced in that idle time . so, if rate 1 permit per second, and
arrivals come exactly one second after the previous, then storedpermits is never increased
we would only increase it for arrivals later than the expected one second.

the time when the next request no matter its size will be granted. after granting a request,
this is pushed further in the future. large requests push this further than small requests.

this implements the following function where coldinterval coldfactor stableinterval.

pre
^ throttling

cold
interval .

warmup period is the area of the trapezoid between
thresholdpermits and maxpermits



stable warm .
interval . up .
period.

0 storedpermits
0 thresholdpermits maxpermits
pre

before going into the details of this particular function, let s keep in mind the basics

ol
li the state of the ratelimiter storedpermits is a vertical line in this figure.
li when the ratelimiter is not used, this goes right up to maxpermits
li when the ratelimiter is used, this goes left down to zero , since if we have
storedpermits, we serve from those first
li when unused , we go right at a constant rate! the rate at which we move to the right is
chosen as maxpermits warmupperiod. this ensures that the time it takes to go from 0 to
maxpermits is equal to warmupperiod.
li when used , the time it takes, as explained in the introductory class note, is equal to
the integral of our function, between x permits and x k permits, assuming we want to
spend k saved permits.
ol

p in summary, the time it takes to move to the left spend k permits , is equal to the area of
the function of width k.

p assuming we have saturated demand, the time to go from maxpermits to thresholdpermits is
equal to warmupperiod. and the time to go from thresholdpermits to 0 is warmupperiod 2. the
reason that this is warmupperiod 2 is to maintain the behavior of the original implementation
where coldfactor was hard coded as 3.

p it remains to calculate thresholdspermits and maxpermits.

ul
li the time to go from thresholdpermits to 0 is equal to the integral of the function
between 0 and thresholdpermits. this is thresholdpermits stableintervals. by 5 it is
also equal to warmupperiod 2. therefore
blockquote
thresholdpermits 05 warmupperiod stableinterval
blockquote
li the time to go from maxpermits to thresholdpermits is equal to the integral of the
function between thresholdpermits and maxpermits. this is the area of the pictured
trapezoid, and it is equal to 05 stableinterval coldinterval maxpermits
thresholdpermits . it is also equal to warmupperiod, so
blockquote
maxpermits thresholdpermits 2 warmupperiod stableinterval coldinterval
blockquote
ul

how is the ratelimiter designed, and why?

the primary feature of a ratelimiter is its stable rate , the maximum rate that is should
allow at normal conditions. this is enforced by throttling incoming requests as needed, ie
compute, for an incoming request, the appropriate throttle time, and make the calling thread
wait as much.

the simplest way to maintain a rate of qps is to keep the timestamp of the last granted
request, and ensure that 1 qps seconds have elapsed since then. for example, for a rate of
qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after
the last one, then we achieve the intended rate. if a request comes and the last request was
granted only 100ms ago, then we wait for another 100ms. at this rate, serving 15 fresh permits
ie for an acquire 15 request naturally takes 3 seconds.

it is important to realize that such a ratelimiter has a very superficial memory of the past
it only remembers the last request. what if the ratelimiter was unused for a long period of
time, then a request arrived and was immediately granted? this ratelimiter would immediately
forget about that past underutilization. this may result in either underutilization or
overflow, depending on the real world consequences of not using the expected rate.

past underutilization could mean that excess resources are available. then, the ratelimiter
should speed up for a while, to take advantage of these resources. this is important when the
rate is applied to networking limiting bandwidth , where past underutilization typically
translates to almost empty buffers , which can be filled immediately.

on the other hand, past underutilization could mean that the server responsible for handling
the request has become less ready for future requests , ie its caches become stale, and
requests become more likely to trigger expensive operations a more extreme case of this
example is when a server has just booted, and it is mostly busy with getting itself up to
speed .

to deal with such scenarios, we add an extra dimension, that of past underutilization ,
modeled by storedpermits variable. this variable is zero when there is no underutilization,
and it can grow up to maxstoredpermits, for sufficiently large underutilization. so, the
requested permits, by an invocation acquire permits , are served from

stored permits if available

fresh permits for any remaining permits

how this works is best explained with an example

for a ratelimiter that produces 1 token per second, every second that goes by with the
ratelimiter being unused, we increase storedpermits by 1. say we leave the ratelimiter unused
for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before
a request actually arrives this is also related to the point made in the last paragraph , thus
storedpermits becomes 100 assuming maxstoredpermits 100 . at that point, a request of
acquire 3 arrives. we serve this request out of storedpermits, and reduce that to 70 how
this is translated to throttling time is discussed later . immediately after, assume that an
acquire 10 request arriving. we serve the request partly from storedpermits, using all the
remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the
rate limiter.

we already know how much time it takes to serve 3 fresh permits if the rate is
1 token per second , then this will take 3 seconds. but what does it mean to serve 7 stored
permits? as explained above, there is no unique answer. if we are primarily interested to deal
with underutilization, then we want stored permits to be given out faster than fresh ones,
because underutilization free resources for the taking. if we are primarily interested to
deal with overflow, then stored permits could be given out slower than fresh ones. thus, we
require a different in each case function that translates storedpermits to throttling time.

this role is played by storedpermitstowaittime double storedpermits, double permitstotake . the
underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits
onto the 1 rate ie intervals that is effective at the given storedpermits. storedpermits
essentially measure unused time we spend unused time buying storing permits. rate is
permits time , thus 1 rate time permits . thus, 1 rate time permits times
permits gives time, ie, integrals on this function which is what storedpermitstowaittime
computes correspond to minimum intervals between subsequent requests, for the specified number
of requested permits.

here is an example of storedpermitstowaittime if storedpermits 100, and we want 3 permits,
we take them from storedpermits, reducing them to 70, and compute the throttling for these as
a call to storedpermitstowaittime storedpermits 100, permitstotake 30 , which will
evaluate the integral of the function from 70 to 100.

using integrals guarantees that the effect of a single acquire 3 is equivalent to
acquire 1 acquire 1 acquire 1 , or acquire 2 acquire 1 , etc, since the integral
of the function in 70, 100 is equivalent to the sum of the integrals of 70, 80 , 80,
90 , 90, 100 and so on , no matter what the function is. this guarantees that we handle
correctly requests of varying weight permits , no matter what the actual function is so we
can tweak the latter freely. the only requirement, obviously, is that we can compute its
integrals .

note well that if, for this function, we chose a horizontal line, at height of exactly 1 qps ,
then the effect of the function is non existent we serve storedpermits at exactly the same
cost as fresh ones 1 qps is the cost for each . we use this trick later.

if we pick a function that goes below that horizontal line, it means that we reduce the area
of the function, thus time. thus, the ratelimiter becomes faster after a period of
underutilization. if, on the other hand, we pick a function that goes above that horizontal
line, then it means that the area time is increased, thus storedpermits are more costly than
fresh permits, thus the ratelimiter becomes slower after a period of underutilization.

last, but not least consider a ratelimiter with rate of 1 permit per second, currently
completely unused, and an expensive acquire 100 request comes. it would be nonsensical to just
wait for 100 seconds, and then start the actual task. why wait without doing anything? a much
better approach is to allow the request right away as if it was an acquire 1 request
instead , and postpone subsequent requests as needed. in this version, we allow starting the
task immediately, and postpone by 100 seconds future requests, thus we allow for work to get
done in the meantime instead of waiting idly.

this has important consequences it means that the ratelimiter doesn t remember the time of the
last request, but it remembers the expected time of the next request. this also enables
us to tell immediately see tryacquire timeout whether a particular timeout is enough to get
us to the point of the next scheduling time, since we always maintain that. and what we mean by
an unused ratelimiter is also defined by that notion when we observe that the
expected arrival time of the next request is actually in the past, then the difference now
past is the amount of time that the ratelimiter was formally unused, and it is that amount of
time which we translate to storedpermits. we increase storedpermits with the amount of permits
that would have been produced in that idle time . so, if rate 1 permit per second, and
arrivals come exactly one second after the previous, then storedpermits is never increased
we would only increase it for arrivals later than the expected one second.

the time when the next request no matter its size will be granted. after granting a request,
this is pushed further in the future. large requests push this further than small requests.

this implements a bursty ratelimiter, where storedpermits are translated to zero throttling.
the maximum number of permits that can be saved when the ratelimiter is unused is defined in
terms of time, in this sense if a ratelimiter is 2qps, and this time is specified as 10
seconds, we can save up to 2 10 20 permits.","the primary feature of a ratelimiter is its stable rate , the maximum rate that is should
allow at normal conditions. this is enforced by throttling incoming requests as needed, ie
compute, for an incoming request, the appropriate throttle time, and make the calling thread
wait as much.
p in summary, the time it takes to move to the left spend k permits , is equal to the area of
the function of width k","the simplest way to maintain a rate of qps is to keep the timestamp of the last granted
request, and ensure that 1 qps seconds have elapsed since then. for example, for a rate of
qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after
the last one, then we achieve the intended rate. if a request comes and the last request was
granted only 100ms ago, then we wait for another 100ms. at this rate, serving 15 fresh permits
ie for an acquire 15 request naturally takes 3 seconds.

it is important to realize that such a ratelimiter has a very superficial memory of the past
it only remembers the last request. what if the ratelimiter was unused for a long period of
time, then a request arrived and was immediately granted? this ratelimiter would immediately
forget about that past underutilization. this may result in either underutilization or
overflow, depending on the real world consequences of not using the expected rate.

past underutilization could mean that excess resources are available. then, the ratelimiter
should speed up for a while, to take advantage of these resources. this is important when the
rate is applied to networking limiting bandwidth , where past underutilization typically
translates to almost empty buffers , which can be filled immediately.

on the other hand, past underutilization could mean that the server responsible for handling
the request has become less ready for future requests , ie its caches become stale, and
requests become more likely to trigger expensive operations a more extreme case of this
example is when a server has just booted, and it is mostly busy with getting itself up to
speed .

to deal with such scenarios, we add an extra dimension, that of past underutilization ,
modeled by storedpermits variable. this variable is zero when there is no underutilization,
and it can grow up to maxstoredpermits, for sufficiently large underutilization. so, the
requested permits, by an invocation acquire permits , are served from

stored permits if available

fresh permits for any remaining permits

this implements the following function where coldinterval coldfactor stableinterval.

pre
^ throttling

cold
interval .

warmup period is the area of the trapezoid between
thresholdpermits and maxpermits



stable warm .
interval . up .
period.

0 storedpermits
0 thresholdpermits maxpermits
pre

before going into the details of this particular function, let s keep in mind the basics

ol
li the state of the ratelimiter storedpermits is a vertical line in this figure.
li when the ratelimiter is not used, this goes right up to maxpermits
li when the ratelimiter is used, this goes left down to zero , since if we have
storedpermits, we serve from those first
li when unused , we go right at a constant rate! the rate at which we move to the right is
chosen as maxpermits warmupperiod. this ensures that the time it takes to go from 0 to
maxpermits is equal to warmupperiod.
li when used , the time it takes, as explained in the introductory class note, is equal to
the integral of our function, between x permits and x k permits, assuming we want to
spend k saved permits.
ol","this implements a bursty ratelimiter, where storedpermits are translated to zero throttling.
the maximum number of permits that can be saved when the ratelimiter is unused is defined in
terms of time, in this sense if a ratelimiter is 2qps, and this time is specified as 10
seconds, we can save up to 2 10 20 permits.
it is important to realize that such a ratelimiter has a very superficial memory of the past
it only remembers the last request. what if the ratelimiter was unused for a long period of
time, then a request arrived and was immediately granted? this ratelimiter would immediately
forget about that past underutilization. this may result in either underutilization or
overflow, depending on the real world consequences of not using the expected rate.",,"how this works is best explained with an example

for a ratelimiter that produces 1 token per second, every second that goes by with the
ratelimiter being unused, we increase storedpermits by 1. say we leave the ratelimiter unused
for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before
a request actually arrives this is also related to the point made in the last paragraph , thus
storedpermits becomes 100 assuming maxstoredpermits 100 . at that point, a request of
acquire 3 arrives. we serve this request out of storedpermits, and reduce that to 70 how
this is translated to throttling time is discussed later . immediately after, assume that an
acquire 10 request arriving. we serve the request partly from storedpermits, using all the
remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the
rate limiter.

we already know how much time it takes to serve 3 fresh permits if the rate is
1 token per second , then this will take 3 seconds. but what does it mean to serve 7 stored
permits? as explained above, there is no unique answer. if we are primarily interested to deal
with underutilization, then we want stored permits to be given out faster than fresh ones,
because underutilization free resources for the taking. if we are primarily interested to
deal with overflow, then stored permits could be given out slower than fresh ones. thus, we
require a different in each case function that translates storedpermits to throttling time.

this role is played by storedpermitstowaittime double storedpermits, double permitstotake . the
underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits
onto the 1 rate ie intervals that is effective at the given storedpermits. storedpermits
essentially measure unused time we spend unused time buying storing permits. rate is
permits time , thus 1 rate time permits . thus, 1 rate time permits times
permits gives time, ie, integrals on this function which is what storedpermitstowaittime
computes correspond to minimum intervals between subsequent requests, for the specified number
of requested permits.

here is an example of storedpermitstowaittime if storedpermits 100, and we want 3 permits,
we take them from storedpermits, reducing them to 70, and compute the throttling for these as
a call to storedpermitstowaittime storedpermits 100, permitstotake 30 , which will
evaluate the integral of the function from 70 to 100.

using integrals guarantees that the effect of a single acquire 3 is equivalent to
acquire 1 acquire 1 acquire 1 , or acquire 2 acquire 1 , etc, since the integral
of the function in 70, 100 is equivalent to the sum of the integrals of 70, 80 , 80,
90 , 90, 100 and so on , no matter what the function is. this guarantees that we handle
correctly requests of varying weight permits , no matter what the actual function is so we
can tweak the latter freely. the only requirement, obviously, is that we can compute its
integrals .
if we pick a function that goes below that horizontal line, it means that we reduce the area
of the function, thus time. thus, the ratelimiter becomes faster after a period of
underutilization. if, on the other hand, we pick a function that goes above that horizontal
line, then it means that the area time is increased, thus storedpermits are more costly than
fresh permits, thus the ratelimiter becomes slower after a period of underutilization.

last, but not least consider a ratelimiter with rate of 1 permit per second, currently
completely unused, and an expensive acquire 100 request comes. it would be nonsensical to just
wait for 100 seconds, and then start the actual task. why wait without doing anything? a much
better approach is to allow the request right away as if it was an acquire 1 request
instead , and postpone subsequent requests as needed. in this version, we allow starting the
task immediately, and postpone by 100 seconds future requests, thus we allow for work to get
done in the meantime instead of waiting idly.

this has important consequences it means that the ratelimiter doesn t remember the time of the
last request, but it remembers the expected time of the next request. this also enables
us to tell immediately see tryacquire timeout whether a particular timeout is enough to get
us to the point of the next scheduling time, since we always maintain that. and what we mean by
an unused ratelimiter is also defined by that notion when we observe that the
expected arrival time of the next request is actually in the past, then the difference now
past is the amount of time that the ratelimiter was formally unused, and it is that amount of
time which we translate to storedpermits. we increase storedpermits with the amount of permits
that would have been produced in that idle time . so, if rate 1 permit per second, and
arrivals come exactly one second after the previous, then storedpermits is never increased
we would only increase it for arrivals later than the expected one second.

the time when the next request no matter its size will be granted. after granting a request,
this is pushed further in the future. large requests push this further than small requests.",,
4,SortedSetNavigationTester.java,"a generic junit test which tests operations on a sortedset. can t be invoked directly please see
@code sortedsettestsuitebuilder .

@author jesse wilson
@author louis wasserman",a generic junit test which tests operations on a sortedset.,,,,can t be invoked directly,"@author jesse wilson
@author louis wasserman","can t be invoked directly please see
@code sortedsettestsuitebuilder ."
4,SubscriberTest.java,"tests for @link subscriber .

@author cliff biffle
@author colin decker
local exception subclass to check variety of exception thrown. local error subclass to check variety of error thrown.",tests for @link subscriber .,,,,,"@author cliff biffle
@author colin decker",
4,TesterRequirements.java,"encapsulates the constraints that a class under test must satisfy in order for a tester method to
be run against that class.

@author george van den driessche","encapsulates the constraints that a class under test must satisfy in order for a tester method to
be run against that class.",,,,,@author george van den driessche,
4,TestStringListGenerator.java,"todo javadoc.

@author kevin bourrillion",,,,,,@author kevin bourrillion,
4,WrappingScheduledExecutorService.java,"an abstract @code scheduledexecutorservice that allows subclasses to @linkplain
#wraptask callable wrap tasks before they are submitted to the underlying executor.

p note that task wrapping may occur even if the task is never executed.

@author luke sandberg","an abstract @code scheduledexecutorservice that allows subclasses to @linkplain
#wraptask callable wrap tasks before they are submitted to the underlying executor.",,,,p note that task wrapping may occur even if the task is never executed.,@author luke sandberg,
5,AbstractModule.java,"a support class for @link module s which reduces repetition and results in a more readable
configuration. simply extend this class, implement @link #configure , and call the inherited
methods which mirror those found in @link binder . for example

pre
public class mymodule extends abstractmodule
protected void configure
bind service.class .to serviceimpl.class .in singleton.class
bind creditcardpaymentservice.class
bind paymentservice.class .to creditcardpaymentservice.class
bindconstant .annotatedwith names.named port .to 8080

pre

@author crazybob@google.com bob lee","a support class for @link module s which reduces repetition and results in a more readable
configuration.",,,,"simply extend this class, implement @link #configure , and call the inherited
methods which mirror those found in @link binder . for example

pre
public class mymodule extends abstractmodule
protected void configure
bind service.class .to serviceimpl.class .in singleton.class
bind creditcardpaymentservice.class
bind paymentservice.class .to creditcardpaymentservice.class
bindconstant .annotatedwith names.named port .to 8080

pre",@author crazybob@google.com bob lee,
5,Binder.java,"collects configuration information primarily i bindings i which will be used to create an
@link injector . guice provides this object to your application s @link module implementors so
they may each contribute their own bindings and other registrations.

h3 the guice binding edsl h3

guice uses an i embedded domain specific language i , or edsl, to help you create bindings
simply and readably. this approach is great for overall usability, but it does come with a small
cost b it is difficult to learn how to use the binding edsl by reading method level
javadocs b . instead, you should consult the series of examples below. to save space, these
examples omit the opening @code binder , just as you will if your module extends @link
abstractmodule .

pre
bind serviceimpl.class pre

this statement does essentially nothing it binds the @code serviceimpl class to itself and
does not change guice s default behavior. you may still want to use this if you prefer your
@link module class to serve as an explicit i manifest i for the services it provides. also,
in rare cases, guice may be unable to validate a binding at injector creation time unless it is
given explicitly.

pre
bind service.class .to serviceimpl.class pre

specifies that a request for a @code service instance with no binding annotations should be
treated as if it were a request for a @code serviceimpl instance. this i overrides i the
function of any @link implementedby @implementedby or @link providedby @providedby
annotations found on @code service , since guice will have already moved on to @code
serviceimpl before it reaches the point when it starts looking for these annotations.

pre
bind service.class .toprovider serviceprovider.class pre

in this example, @code serviceprovider must extend or implement @code provider service . this
binding specifies that guice should resolve an unannotated injection request for @code service
by first resolving an instance of @code serviceprovider in the regular way, then calling @link
provider#get get on the resulting provider instance to obtain the @code service instance.

p the @link provider you use here does not have to be a factory that is, a provider which
always i creates i each instance it provides. however, this is generally a good practice to
follow. you can then use guice s concept of @link scope scopes to guide when creation should
happen letting guice work for you .

pre
bind service.class .annotatedwith red.class .to serviceimpl.class pre

like the previous example, but only applies to injection requests that use the binding annotation
@code @red . if your module also includes bindings for particular i values i of the
@code @red annotation see below , then this binding will serve as a catch all for any values
of @code @red that have no exact match in the bindings.

pre
bind serviceimpl.class .in singleton.class
or, alternatively
bind serviceimpl.class .in scopes.singleton pre

either of these statements places the @code serviceimpl class into singleton scope. guice will
create only one instance of @code serviceimpl and will reuse it for all injection requests of
this type. note that it is still possible to bind another instance of @code serviceimpl if the
second binding is qualified by an annotation as in the previous example. guice is not overly
concerned with i preventing i you from creating multiple instances of your singletons , only
with i enabling i your application to share only one instance if that s all you tell guice you
need.

p b note b a scope specified in this way i overrides i any scope that was specified with
an annotation on the @code serviceimpl class.

p besides @link singleton @link scopes#singleton , there are servlet specific scopes
available in @code com.google.inject.servlet.servletscopes , and your modules can contribute
their own custom scopes for use here as well.

pre
bind new typeliteral&lt paymentservice&lt creditcard
to creditcardpaymentservice.class pre

this admittedly odd construct is the way to bind a parameterized type. it tells guice how to
honor an injection request for an element of type @code paymentservice creditcard . the class
@code creditcardpaymentservice must implement the @code paymentservice creditcard interface.
guice cannot currently bind or inject a generic type, such as @code set e all type parameters
must be fully specified.

pre
bind service.class .toinstance new serviceimpl
or, alternatively
bind service.class .toinstance somelegacyregistry.getservice pre

in this example, your module itself, i not guice i , takes responsibility for obtaining a
@code serviceimpl instance, then asks guice to always use this single instance to fulfill all
@code service injection requests. when the @link injector is created, it will automatically
perform field and method injection for this instance, but any injectable constructor on @code
serviceimpl is simply ignored. note that using this approach results in eager loading behavior
that you can t control.

pre
bindconstant .annotatedwith serverhost.class .to args 0 pre

sets up a constant binding. constant injections must always be annotated. when a constant
binding s value is a string, it is eligible for conversion to all primitive types, to @link
enum#valueof class, string all enums , and to @link class#forname class literals . conversions
for other types can be configured using @link #converttotypes matcher, typeconverter
converttotypes .

pre
@literal @ color red color red a member variable field

red mymodule.class.getdeclaredfield red .getannotation color.class
bind service.class .annotatedwith red .to redservice.class pre

if your binding annotation has parameters you can apply different bindings to different specific
values of your annotation. getting your hands on the right instance of the annotation is a bit of
a pain one approach, shown above, is to apply a prototype annotation to a field in your module
class, so that you can read this annotation instance and give it to guice.

pre
bind service.class
annotatedwith names.named blue
to blueservice.class pre

differentiating by names is a common enough use case that we provided a standard annotation,
@link com.google.inject.name.named @named . because of guice s library support, binding by name
is quite easier than in the arbitrary binding annotation case we just saw. however, remember that
these names will live in a single flat namespace with all the other names used in your
application.

pre
constructor t lonector getlonectorfromserviceimplviareflection
bind serviceimpl.class
toconstructor lonector pre

in this example, we directly tell guice which constructor to use in a concrete class
implementation. it means that we do not need to place @literal @ inject on any of the
constructors and that guice treats the provided constructor as though it were annotated so. it is
useful for cases where you cannot modify existing classes and is a bit simpler than using a
@link provider .

p the above list of examples is far from exhaustive. if you can think of how the concepts of one
example might coexist with the concepts from another, you can most likely weave the two together.
if the two concepts make no sense with each other, you most likely won t be able to do it. in a
few cases guice will let something bogus slip by, and will then inform you of the problems at
runtime, as soon as you try to create your injector.

p the other methods of binder such as @link #bindscope , @link #bindinterceptor , @link
#install , @link #requeststaticinjection , @link #adderror and @link #currentstage are not
part of the binding edsl you can learn how to use these in the usual way, from the method
documentation.

@author crazybob@google.com bob lee
@author jessewilson@google.com jesse wilson
@author kevinb@google.com kevin bourrillion","collects configuration information primarily i bindings i which will be used to create an
@link injector . guice provides this object to your application s @link module implementors so
they may each contribute their own bindings and other registrations.",,,,"h3 the guice binding edsl h3

guice uses an i embedded domain specific language i , or edsl, to help you create bindings
simply and readably. this approach is great for overall usability, but it does come with a small
cost b it is difficult to learn how to use the binding edsl by reading method level
javadocs b . instead, you should consult the series of examples below. to save space, these
examples omit the opening @code binder , just as you will if your module extends @link
abstractmodule .

pre
bind serviceimpl.class pre

this statement does essentially nothing it binds the @code serviceimpl class to itself and
does not change guice s default behavior. you may still want to use this if you prefer your
@link module class to serve as an explicit i manifest i for the services it provides. also,
in rare cases, guice may be unable to validate a binding at injector creation time unless it is
given explicitly.

pre
bind service.class .to serviceimpl.class pre

specifies that a request for a @code service instance with no binding annotations should be
treated as if it were a request for a @code serviceimpl instance. this i overrides i the
function of any @link implementedby @implementedby or @link providedby @providedby
annotations found on @code service , since guice will have already moved on to @code
serviceimpl before it reaches the point when it starts looking for these annotations.

pre
bind service.class .toprovider serviceprovider.class pre

in this example, @code serviceprovider must extend or implement @code provider service . this
binding specifies that guice should resolve an unannotated injection request for @code service
by first resolving an instance of @code serviceprovider in the regular way, then calling @link
provider#get get on the resulting provider instance to obtain the @code service instance.

p the @link provider you use here does not have to be a factory that is, a provider which
always i creates i each instance it provides. however, this is generally a good practice to
follow. you can then use guice s concept of @link scope scopes to guide when creation should
happen letting guice work for you .

pre
bind service.class .annotatedwith red.class .to serviceimpl.class pre

like the previous example, but only applies to injection requests that use the binding annotation
@code @red . if your module also includes bindings for particular i values i of the
@code @red annotation see below , then this binding will serve as a catch all for any values
of @code @red that have no exact match in the bindings.

pre
bind serviceimpl.class .in singleton.class
or, alternatively
bind serviceimpl.class .in scopes.singleton pre

either of these statements places the @code serviceimpl class into singleton scope. guice will
create only one instance of @code serviceimpl and will reuse it for all injection requests of
this type. note that it is still possible to bind another instance of @code serviceimpl if the
second binding is qualified by an annotation as in the previous example. guice is not overly
concerned with i preventing i you from creating multiple instances of your singletons , only
with i enabling i your application to share only one instance if that s all you tell guice you
need.

p b note b a scope specified in this way i overrides i any scope that was specified with
an annotation on the @code serviceimpl class.

p besides @link singleton @link scopes#singleton , there are servlet specific scopes
available in @code com.google.inject.servlet.servletscopes , and your modules can contribute
their own custom scopes for use here as well.

pre
bind new typeliteral&lt paymentservice&lt creditcard
to creditcardpaymentservice.class pre

this admittedly odd construct is the way to bind a parameterized type. it tells guice how to
honor an injection request for an element of type @code paymentservice creditcard . the class
@code creditcardpaymentservice must implement the @code paymentservice creditcard interface.
guice cannot currently bind or inject a generic type, such as @code set e all type parameters
must be fully specified.

pre
bind service.class .toinstance new serviceimpl
or, alternatively
bind service.class .toinstance somelegacyregistry.getservice pre

in this example, your module itself, i not guice i , takes responsibility for obtaining a
@code serviceimpl instance, then asks guice to always use this single instance to fulfill all
@code service injection requests. when the @link injector is created, it will automatically
perform field and method injection for this instance, but any injectable constructor on @code
serviceimpl is simply ignored. note that using this approach results in eager loading behavior
that you can t control.

pre
bindconstant .annotatedwith serverhost.class .to args 0 pre

sets up a constant binding. constant injections must always be annotated. when a constant
binding s value is a string, it is eligible for conversion to all primitive types, to @link
enum#valueof class, string all enums , and to @link class#forname class literals . conversions
for other types can be configured using @link #converttotypes matcher, typeconverter
converttotypes .

pre
@literal @ color red color red a member variable field

red mymodule.class.getdeclaredfield red .getannotation color.class
bind service.class .annotatedwith red .to redservice.class pre

if your binding annotation has parameters you can apply different bindings to different specific
values of your annotation. getting your hands on the right instance of the annotation is a bit of
a pain one approach, shown above, is to apply a prototype annotation to a field in your module
class, so that you can read this annotation instance and give it to guice.

pre
bind service.class
annotatedwith names.named blue
to blueservice.class pre

differentiating by names is a common enough use case that we provided a standard annotation,
@link com.google.inject.name.named @named . because of guice s library support, binding by name
is quite easier than in the arbitrary binding annotation case we just saw. however, remember that
these names will live in a single flat namespace with all the other names used in your
application.

pre
constructor t lonector getlonectorfromserviceimplviareflection
bind serviceimpl.class
toconstructor lonector pre

in this example, we directly tell guice which constructor to use in a concrete class
implementation. it means that we do not need to place @literal @ inject on any of the
constructors and that guice treats the provided constructor as though it were annotated so. it is
useful for cases where you cannot modify existing classes and is a bit simpler than using a
@link provider .

p the above list of examples is far from exhaustive. if you can think of how the concepts of one
example might coexist with the concepts from another, you can most likely weave the two together.
if the two concepts make no sense with each other, you most likely won t be able to do it. in a
few cases guice will let something bogus slip by, and will then inform you of the problems at
runtime, as soon as you try to create your injector.

p the other methods of binder such as @link #bindscope , @link #bindinterceptor , @link
#install , @link #requeststaticinjection , @link #adderror and @link #currentstage are not
part of the binding edsl you can learn how to use these in the usual way, from the method
documentation.","@author crazybob@google.com bob lee
@author jessewilson@google.com jesse wilson
@author kevinb@google.com kevin bourrillion",
5,DefaultMethodInterceptionTest.java,"tests for interception of default methods.

@author cgdecker@google.com colin decker
interface with a default method annotated to be intercepted. foo implementation that does not override the default method. a base class defining a method with the same signature as foo s default method. foo implementation that should use superclass method rather than default method.
a base class defining an intercepted method with the same signature as foo s default method.

foo implementation that should use intercepted superclass method rather than default method.",tests for interception of default methods.,,,,interface with a default method annotated to be intercepted. foo implementation that does not override the default method. a base class defining a method with the same signature as foo s default method. foo implementation that should use superclass method rather than default method.,@author cgdecker@google.com colin decker,
5,Element.java,"an internal binding annotation applied to each element in a multibinding. all elements are
assigned a globally unique id to allow different modules to contribute multibindings
independently.

@author jessewilson@google.com jesse wilson",an internal binding annotation applied to each element in a multibinding,"all elements are
assigned a globally unique id to allow different modules to contribute multibindings
independently.",,,,@author jessewilson@google.com jesse wilson,
5,EncounterImpl.java,@author jessewilson@google.com jesse wilson,,,,,,@author jessewilson@google.com jesse wilson,
5,ImplicitBindingTest.java,"@author crazybob@google.com bob lee an enum cannot be implemented by anything, so it should not be possible to have a successful valid jitable binding",,,"an enum cannot be implemented by anything, so it should not be possible to have a successful valid jitable binding",,,@author crazybob@google.com bob lee,
5,ManagedFilterPipeline.java,"central routing dispatch class handles lifecycle of managed filters, and delegates to the servlet
pipeline.

@author dhanji@gmail.com dhanji r. prasanna","central routing dispatch class handles lifecycle of managed filters, and delegates to the servlet
pipeline.",,,,,@author dhanji@gmail.com dhanji r. prasanna,
5,PrivateElementProcessor,"handles @code binder.newprivatebinder elements.

@author jessewilson@google.com jesse wilson",handles @code binder.newprivatebinder elements.,,,,,@author jessewilson@google.com jesse wilson,
5,ProxyFactoryTest.java,@author crazybob@google.com bob lee,,,,,,@author crazybob@google.com bob lee,
5,SpiUtils.java,"utilities for testing the multibinder & mapbinder extension spi.

@author sameb@google.com sam berlin
the kind of test we should perform. a live injector, a raw elements module test, or both. the kind of binding. the result of the binding.",utilities for testing the multibinder & mapbinder extension spi.,the kind of binding. the result of the binding.,,,,@author sameb@google.com sam berlin,
6,AbstractFocusable.java,"an abstract base class for focusable components. includes api for setting the
tab index, programmatic focusing, and adding focus and blur listeners.

@since 76
@author vaadin ltd",an abstract base class for focusable components.,"includes api for setting the tab index, programmatic focusing, and adding focus and blur listeners.",,@since 76,,@author vaadin ltd,
6,AbstractMultiSelectState.java,"shared state for @code abstractmultiselect .

@author vaadin ltd
@since 80",shared state for @code abstractmultiselect .,,,@since 80,,@author vaadin ltd,shared state for @code abstractmultiselect .
6,AbstractProperty.java,"abstract base class for @link property implementations.

handles listener management for @link valuechangelistener s and
@link readonlystatuschangelistener s.

@since 66

@deprecated as of 80, replaced by @link valueprovider , @link setter , see
@link binder
legacypropertyhelper has been removed in vaadin 8 events
an code event code object specifying the property whose read only
status has been changed.
legacypropertyhelper has been removed in vaadin 8 events
an code event code object specifying the property whose value has been
changed.","abstract base class for @link property implementations. handles listener management for @link valuechangelistener s and
@link readonlystatuschangelistener s.","an code event code object specifying the property whose read only
status has been changed.",,"@since 66
@deprecated as of 80, replaced by @link valueprovider , @link setter , see
@link binder
legacypropertyhelper has been removed in vaadin 8 events",,,"handles listener management for @link valuechangelistener s and
@link readonlystatuschangelistener s.
@deprecated as of 80, replaced by @link valueprovider , @link setter , see
@link binder
@link property"
6,AbstractSingleComponentContainerState.java,"default shared state implementation for abstractsinglecomponentcontainer.

@since 80",default shared state implementation for abstractsinglecomponentcontainer,,,@since 80,,,
6,AdjacentElementsWithTooltipsTest.java,"test to see if tooltips obey quickopendelay when moving between directly
adjacent elements.

@author vaadin ltd",test to see if tooltips obey quickopendelay when moving between directly adjacent elements.,,,,,@author vaadin ltd,
6,ApplicationConfiguration.java,"helper class for reading configuration options from the bootstap
javascript

@since 70

wraps a native javascript object containing fields for an error message.

@since 70","helper class for reading configuration options from the bootstap.
wraps a native javascript object containing fields for an error message.",,,"@since 70
@since 70",,,
6,BootstrapPageResponse.java,"a representation of a bootstrap page being generated. the bootstrap page
contains of the full dom of the html document as well as the http headers
that will be included in the corresponding http response.

@author vaadin ltd
@since 70.0",a representation of a bootstrap page being generated.,"the bootstrap page
contains of the full dom of the html document as well as the http headers
that will be included in the corresponding http response.",,@since 70.0,,@author vaadin ltd,
6,ButtonRenderer.java,"a renderer that displays a button with a textual caption. the value of the
corresponding property is used as the caption. click listeners can be added
to the renderer, invoked when any of the rendered buttons is clicked.

@since 74
@author vaadin ltd",a renderer that displays a button with a textual caption.,"the value of the
corresponding property is used as the caption",,@since 74,"click listeners can be added
to the renderer, invoked when any of the rendered buttons is clicked.",@author vaadin ltd,
6,ClientRpcWriter.java,"serializes @link clientrpc client rpc invocations to json.

@author vaadin ltd
@since 71",serializes @link clientrpc client rpc invocations to json,,,@since 71,,@author vaadin ltd,
6,ColorPickerServerRpc.java,"rpc interface for abstractcolorpicker.

@since 70.0",rpc interface for abstractcolorpicker.,,,@since 70.0,,,
6,ComboBoxState.java,"shared state for the combobox component.

@since 70",shared state for the combobox component.,,,@since 70,,,
6,DeclarativeValueProvider.java,"value provider class for declarative support.
p
provides a straightforward mapping between an item and its value.

@param t
item type",value provider class for declarative support. provides a straightforward mapping between an item and its value.,,,,"@param t
item type",,
6,DoubleRangeValidator.java,"validator for validating that a @link double is inside a given range.

@author vaadin ltd.
@since 80",validator for validating that a @link double is inside a given range.,,,@since 80,,@author vaadin ltd.,serializes @link clientrpc client rpc invocations to json
6,FooterDoubleClickHandler.java,"handler for @link griddoubleclickevent s that happen in the footer of the
grid.

@since 74
@author vaadin ltd","handler for @link griddoubleclickevent s that happen in the footer of the
grid.",,,@since 74,,@author vaadin ltd,@link griddoubleclickevent s
6,Grid.java,"a grid component for displaying tabular data.

@author vaadin ltd
@since 80

@param t
the grid bean type
header and footer
a callback method for fetching items. the callback is provided with a
list of sort orders, offset index and limit.

@param t
the grid bean type
header and footer
selection mode representing the built in selection models in grid.
p
these enums can be used in @link grid#setselectionmode selectionmode
to easily switch between the build in selection models.

@see grid#setselectionmode selectionmode
@see grid#setselectionmodel gridselectionmodel
header and footer
an event that is fired when the columns are reordered.
header and footer
an event that is fired when a column is resized, either programmatically
or by the user.
header and footer
an event fired when an item in the grid has been clicked.

@param t
the grid bean type
header and footer
contextclickevent for the grid component.

p
usage

pre
grid.addcontextclicklistener event &gt notification.show
gridcontextclickevent&lt person&gt event .getitem clicked
pre

@param t
the grid bean type
header and footer
an event that is fired when a column s visibility changes.

@since 75.0
header and footer
a helper base class for creating extensions for the grid component.

@param t
header and footer
class for managing visible details rows.

@param t
the grid bean type
header and footer
this extension manages the configuration and data communication for a
column inside of a grid component.

@param t
the grid bean type
@param v
the column value type

behavior when parsing nested properties which may contain
code null code values in the property chain",a grid component for displaying tabular data.,,,"@since 80
@since 75.0","@param t
the grid bean type
usage

pre
grid.addcontextclicklistener event &gt notification.show
gridcontextclickevent&lt person&gt event .getitem clicked
pre
@param t
the grid bean type
header and footer
an event that is fired when a column s visibility changes.

@since 75.0
header and footer
a helper base class for creating extensions for the grid component.

@param t
header and footer
class for managing visible details rows.

@param t
the grid bean type",@author vaadin ltd,"@link grid#setselectionmode selectionmode
@see grid#setselectionmode selectionmode
@see grid#setselectionmodel gridselectionmodel"
6,GridManyColumnsV7.java,test ui for grid initial rendering performance profiling.,test ui for grid initial rendering performance profiling,,,,,,
6,GridSelectionModel.java,"the server side interface that controls grid s selection state.
selectionmodel should extend @link abstractgridextension .

@author vaadin ltd
@since 80

@param t
the grid bean type
@see abstractselectionmodel
@see singleselectionmodel
@see multiselectionmodel",the server side interface that controls grid s selection state.,,,,"@param t
the grid bean type",@author vaadin ltd,"selectionmodel should extend @link abstractgridextension . @see abstractselectionmodel
@see singleselectionmodel
@see multiselectionmodel"
6,HeaderRow.java,"a header row in a grid.

@author vaadin ltd
@since 80",a header row in a grid.,,,@since 80,,@author vaadin ltd,
6,InternalContainerAnnotationForJS.java,"annotation enabling using multiple @link javascript @javascript
annotations.
p
b not meant to be used b , for multiple javascript dependencies,
@link javascript @javascript should be used instead.

@author vaadin ltd
@since 80","annotation enabling using multiple @link javascript @javascript
annotations.",,,@since 80,,@author vaadin ltd,
6,MyPickerConnector.java,"mini tutorial code for
https vaadin.com wiki wiki main widget%20styling%20using%20only%20css,
https
vaadin.com wiki wiki main lightweight%20calculations%20of%20widget%20l
ayout and https vaadin.com wiki wiki main complex%20widget%20layouts

@author vaadin ltd
@since 70.0",mini tutorial code for,,,@since 70.0,,@author vaadin ltd,"mini tutorial code for
https vaadin.com wiki wiki main widget%20styling%20using%20only%20css,
https
vaadin.com wiki wiki main lightweight%20calculations%20of%20widget%20l
ayout and https vaadin.com wiki wiki main complex%20widget%20layouts"
6,NotEmptyValidatorTest.java,@author vaadin ltd,,,,,,@author vaadin ltd,
6,PopupView.java,"a component for displaying a two different views to data. the minimized view
is normally used to render the component, and when it is clicked the full
view is displayed on a popup. the inner class @link popupview.content is
used to deliver contents to this component.

@author vaadin ltd.
constructors
methods inherited from abstractcomponentcontainer. these are unnecessary
but mandatory . most of them are not supported in this implementation.

used to deliver customized content packages to the popupview. these are
dynamically loaded when they are redrawn. the user must take care that
neither of these methods ever return null.
constructors
methods inherited from abstractcomponentcontainer. these are unnecessary
but mandatory . most of them are not supported in this implementation.

this event is received by the popupvisibilitylisteners when the
visibility of the popup changes. you can get the new visibility directly
with @link #ispopupvisible , or get the popupview that produced the
event with @link #getpopupview .

constructors
methods inherited from abstractcomponentcontainer. these are unnecessary
but mandatory . most of them are not supported in this implementation.

defines a listener that can receive a popupvisibilityevent when the
visibility of the popup changes.","a component for displaying a two different views to data. the minimized view
is normally used to render the component, and when it is clicked the full
view is displayed on a popup. the inner class @link popupview.content is
used to deliver contents to this component.","constructors
methods inherited from abstractcomponentcontainer. these are unnecessary
but mandatory . most of them are not supported in this implementation.

this event is received by the popupvisibilitylisteners when the
visibility of the popup changes. you can get the new visibility directly
with @link #ispopupvisible , or get the popupview that produced the
event with @link #getpopupview .

constructors
methods inherited from abstractcomponentcontainer. these are unnecessary
but mandatory . most of them are not supported in this implementation.

defines a listener that can receive a popupvisibilityevent when the
visibility of the popup changes.","constructors
methods inherited from abstractcomponentcontainer. these are unnecessary
but mandatory . most of them are not supported in this implementation.",,,@author vaadin ltd.,
6,PortletDummyRequestHandler.java,"request handler which provides a dummy html response to any resource request
with the resource id dummy.

@author vaadin ltd
@since 71","request handler which provides a dummy html response to any resource request
with the resource id dummy.",,,@since 71,,@author vaadin ltd,
6,QueryBuilder.java,"@deprecated as of 80, no replacement available.",,,,"@deprecated as of 80, no replacement available.",,,
6,RequiredTextFieldTest.java,"test for .v required style

@author vaadin ltd",test for .v required style,,,,,@author vaadin ltd,
6,RpcDataProviderExtension.java,"provides vaadin server side container data source to a
@link com.vaadin.v7.client.connectors.gridconnector gridconnector . this is currently
implemented as an extension hardcoded to support a specific connector type.
this will be changed once framework support for something more flexible has
been implemented.

@since 74
@author vaadin ltd

@deprecated as of 80, no replacement available.

class for keeping track of current items and valuechangelisteners.

@since 76

a class to listen to changes in property values in the container added
with @link grid#setcontainerdatasource com.vaadin.v7.data.container.indexed
grid#setcontainerdatasource container.indexed ,
and notifies the data source to update the client side representation
of the modified item.
p
one instance of this class can and should be reused for all the
properties in an item, since this class will inform that the entire row
needs to be re evaluated in contrast to a property based change
management
p
since there s no container wide possibility to listen to any kind of
value changes, an instance of this class needs to be attached to each and
every item s property in the container.

@see grid#addvaluechangelistener com.vaadin.v7.data.container, object, object
grid#addvaluechangelistener container, object, object
@see grid#valuechangelisteners","provides vaadin server side container data source to a
@link com.vaadin.v7.client.connectors.gridconnector gridconnector . this is currently
implemented as an extension hardcoded to support a specific connector type.
class for keeping track of current items and valuechangelisteners.",,,"@since 74
@deprecated as of 80, no replacement available.
@since 76",,@author vaadin ltd,"@see grid#addvaluechangelistener com.vaadin.v7.data.container, object, object
grid#addvaluechangelistener container, object, object
@see grid#valuechangelisteners"
6,SelectAllEvent.java,"a select all event, fired by the grid when it needs all rows in data source
to be selected, or when all rows have been selected and are now deselected.

@since 74
@author vaadin ltd
@param t
the type of the rows in grid","a select all event, fired by the grid when it needs all rows in data source
to be selected, or when all rows have been selected and are now deselected.",,"a select all event, fired by the grid when it needs all rows in data source
to be selected, or when all rows have been selected and are now deselected.",@since 74,"@param t
the type of the rows in grid",@author vaadin ltd,
6,ShouldWriteDataDelegate.java,"delegate used by @link designcontext to determine whether container data
should be written out for a component.

@see designcontext#shouldwritedata component

@since 75.0
@author vaadin ltd","delegate used by @link designcontext to determine whether container data
should be written out for a component.",,"delegate used by @link designcontext to determine whether container data
should be written out for a component.",@since 75.0,,@author vaadin ltd,"delegate used by @link designcontext to determine whether container data
should be written out for a component.
@see designcontext#shouldwritedata component"
6,SimpleGridUI.java,@author vaadin ltd,,,,,,@author vaadin ltd,
6,SpacerVisibilityChangedEvent.java,"event fired when a spacer element is hidden or shown in escalator.

@author vaadin ltd
@since 77.13",,,event fired when a spacer element is hidden or shown in escalator.,@since 77.13,,@author vaadin ltd,
6,TargetDetailsImpl.java,"a hashmap backed implementation of @link targetdetails for termina...n.

@since 63
@deprecated replaced in 81 by @link dropevent#gettransferdata string",a hashmap backed implementation of @link targetdetails for termina...n.,,,"@since 63
@deprecated replaced in 81 by @link dropevent#gettransferdata string",,,a hashmap backed implementation of @link targetdetails for termina...n.
6,UnknownExtensionConnector.java,"connector used as a placeholder for extensions that are not present in the
widgetset.

@since 77.4
@author vaadin ltd","connector used as a placeholder for extensions that are not present in the
widgetset.",,,@since 77.4,,@author vaadin ltd,
6,VaadinPortlet.java,"portlet 20 base class. this replaces the servlet in servlet portlet 10
deployments and handles various portlet requests from the browser.

@author vaadin ltd
todo some parts could be shared with abstractapplicationservlet todo can we close the application when the portlet is removed? do we know when the portlet is removed?
base class for portlet requests that need access to http servlet
requests.
todo some parts could be shared with abstractapplicationservlet todo can we close the application when the portlet is removed? do we know when the portlet is removed?
portlet request for liferay.
todo some parts could be shared with abstractapplicationservlet todo can we close the application when the portlet is removed? do we know when the portlet is removed?
portlet request for gatein.
todo some parts could be shared with abstractapplicationservlet todo can we close the application when the portlet is removed? do we know when the portlet is removed?
portlet request for websphere portal.
todo some parts could be shared with abstractapplicationservlet todo can we close the application when the portlet is removed? do we know when the portlet is removed?
portlet request for websphere portal.
todo some parts could be shared with abstractapplicationservlet todo can we close the application when the portlet is removed? do we know when the portlet is removed?
@author vaadin ltd

@deprecated as of 70. this is no longer used and only provided for
backwards compatibility. each @link requesthandler can
individually decide whether it wants to handle a request or
not.","portlet 20 base class. this replaces the servlet in servlet portlet 10
deployments and handles various portlet requests from the browser.","base class for portlet requests that need access to http servlet.
portlet request for liferay.
portlet request for gatein.
portlet request for websphere portal.",,"@deprecated as of 70. this is no longer used and only provided for
backwards compatibility. each @link requesthandler can
individually decide whether it wants to handle a request or
not.",,@author vaadin ltd,
6,VaadinServiceInitListener.java,"listener for @link vaadinservice initialization events. the listener can
add listeners and request handlers the service.
p
listener instances are by default discovered and instantiated using
@link serviceloader . this means that all implementations must have a
zero argument constructor and the fully qualified name of the implementation
class must be listed on a separate line in a
meta inf services com.vaadin.server.vaadinserviceinitlistener file present in
the jar file containing the implementation class.
p
integrations for specific runtime environments, such as osgi or spring, might
also provide other ways of discovering listeners.

@since 80
@author vaadin ltd","listener for @link vaadinservice initialization events. the listener can
add listeners and request handlers the service.","listener instances are by default discovered and instantiated using
@link serviceloader . this means that all implementations must have a
zero argument constructor and the fully qualified name of the implementation
class must be listed on a separate line in a
meta inf services com.vaadin.server.vaadinserviceinitlistener file present in
the jar file containing the implementation class.
integrations for specific runtime environments, such as osgi or spring, might
also provide other ways of discovering listeners.",,@since 80,,@author vaadin ltd,
6,VGridLayout.java,"private helper class.
for internal use only. may be removed or replaced in the future.",private helper class.,,,,,,
6,VLazyInitItemIdentifiers.java,"@author vaadin ltd
@deprecated replaced in 81 with
ragovercriteria string and
@link droptargetextension#setdropcriteria string",,,,"@deprecated replaced in 81 with
ragovercriteria string and
@link droptargetextension#setdropcriteria string",,@author vaadin ltd,
6,VScrollTable.java,"vscrolltable

vscrolltable is a flowpanel having two widgets in it tablehead component
scrollpanel

tablehead contains table s header and widgets logic for resizing,
reordering and hiding columns.

scrollpanel contains vscrolltablebody object which handles content. to save
some bandwidth and to improve clients responsiveness with loads of data, in
vscrolltablebody all rows are not necessary rendered. there are spacers in
vscrolltablebody to use the exact same space as non rendered rows would use.
this way we can use seamlessly traditional scrollbars and scrolling to fetch
more rows instead of paging .

in vscrolltable we listen to scroll events. on horizontal scrolling we also
update tableheads scroll position which has its scrollbars hidden. on
vertical scroll events we will check if we are reaching the end of area where
we have rows rendered and

todo implement unregistering for child components in cells
to detect if the first visible
these are used when jumping between pages when pressing home and end

changes to manage mousedown and mouseup

overridden due table might not survive of visibility change scroll pos
lost . example itabpanel just set contained components invisible and back
when changing tabs.
updates first visible row for the case we cannot wait
this method has logic which rows needs to be requested from server when
user scrolls.

non javadoc

@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus

simple interface for parts of the table capable of owning a context menu.

@since 72
@author vaadin ltd
to detect if the first visible
these are used when jumping between pages when pressing home and end

changes to manage mousedown and mouseup

overridden due table might not survive of visibility change scroll pos
lost . example itabpanel just set contained components invisible and back
when changing tabs.
updates first visible row for the case we cannot wait
this method has logic which rows needs to be requested from server when
user scrolls.

non javadoc

@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus

handles showing context menu on long press from a touch screen.

@since 72
@author vaadin ltd
to detect if the first visible
these are used when jumping between pages when pressing home and end

changes to manage mousedown and mouseup

overridden due table might not survive of visibility change scroll pos
lost . example itabpanel just set contained components invisible and back
when changing tabs.
updates first visible row for the case we cannot wait
this method has logic which rows needs to be requested from server when
user scrolls.

non javadoc

@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus

represents a select range of rows
to detect if the first visible
these are used when jumping between pages when pressing home and end

changes to manage mousedown and mouseup

overridden due table might not survive of visibility change scroll pos
lost . example itabpanel just set contained components invisible and back
when changing tabs.
updates first visible row for the case we cannot wait
this method has logic which rows needs to be requested from server when
user scrolls.

non javadoc

@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus

for internal use only. may be removed or replaced in the future.

overwrites onbrowserevent function on focusablescrollpanel to give event
access to touchcontextprovider. has to be public to give tableconnector
access to the scrollbodypanel field.

@since 72
@author vaadin ltd
to detect if the first visible
these are used when jumping between pages when pressing home and end

changes to manage mousedown and mouseup

overridden due table might not survive of visibility change scroll pos
lost . example itabpanel just set contained components invisible and back
when changing tabs.
updates first visible row for the case we cannot wait
this method has logic which rows needs to be requested from server when
user scrolls.

non javadoc

@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus

used to recall the position of an open context menu if we need to close
and reopen it during a row update.
p
for internal use only. may be removed or replaced in the future.
to detect if the first visible
these are used when jumping between pages when pressing home and end

changes to manage mousedown and mouseup

overridden due table might not survive of visibility change scroll pos
lost . example itabpanel just set contained components invisible and back
when changing tabs.
updates first visible row for the case we cannot wait
this method has logic which rows needs to be requested from server when
user scrolls.

non javadoc

@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus
for internal use only. may be removed or replaced in the future. to detect if the first visible
these are used when jumping between pages when pressing home and end

changes to manage mousedown and mouseup

overridden due table might not survive of visibility change scroll pos
lost . example itabpanel just set contained components invisible and back
when changing tabs.
updates first visible row for the case we cannot wait
this method has logic which rows needs to be requested from server when
user scrolls.

non javadoc

@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus

headercell that is header cell for row headers.

reordering disabled and clicking on it resets sorting.
to detect if the first visible
these are used when jumping between pages when pressing home and end

changes to manage mousedown and mouseup

overridden due table might not survive of visibility change scroll pos
lost . example itabpanel just set contained components invisible and back
when changing tabs.
updates first visible row for the case we cannot wait
this method has logic which rows needs to be requested from server when
user scrolls.

non javadoc

@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus

a cell in the footer.
to detect if the first visible
these are used when jumping between pages when pressing home and end

changes to manage mousedown and mouseup

overridden due table might not survive of visibility change scroll pos
lost . example itabpanel just set contained components invisible and back
when changing tabs.
updates first visible row for the case we cannot wait
this method has logic which rows needs to be requested from server when
user scrolls.

non javadoc

@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus

headercell that is header cell for row headers.

reordering disabled and clicking on it resets sorting.
to detect if the first visible
these are used when jumping between pages when pressing home and end

changes to manage mousedown and mouseup

overridden due table might not survive of visibility change scroll pos
lost . example itabpanel just set contained components invisible and back
when changing tabs.
updates first visible row for the case we cannot wait
this method has logic which rows needs to be requested from server when
user scrolls.

non javadoc

@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus

the footer of the table which can be seen in the bottom of the table.
to detect if the first visible
these are used when jumping between pages when pressing home and end

changes to manage mousedown and mouseup

overridden due table might not survive of visibility change scroll pos
lost . example itabpanel just set contained components invisible and back
when changing tabs.
updates first visible row for the case we cannot wait
this method has logic which rows needs to be requested from server when
user scrolls.

non javadoc

@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus

this panel can only contain vscrolltablerow type of widgets. this
simulates very large table, keeping spacers which take room of
unrendered rows.","vscrolltable is a flowpanel having two widgets in it tablehead component
scrollpanel

tablehead contains table s header and widgets logic for resizing,
reordering and hiding columns.

scrollpanel contains vscrolltablebody object which handles content. to save
some bandwidth and to improve clients responsiveness with loads of data, in
vscrolltablebody all rows are not necessary rendered. there are spacers in
vscrolltablebody to use the exact same space as non rendered rows would use.
this way we can use seamlessly traditional scrollbars and scrolling to fetch
more rows instead of paging .","in vscrolltable we listen to scroll events. on horizontal scrolling we also
update tableheads scroll position which has its scrollbars hidden. on
vertical scroll events we will check if we are reaching the end of area where
we have rows rendered and","to detect if the first visible
these are used when jumping between pages when pressing home and end

changes to manage mousedown and mouseup

overridden due table might not survive of visibility change scroll pos
lost . example itabpanel just set contained components invisible and back
when changing tabs.
updates first visible row for the case we cannot wait
this method has logic which rows needs to be requested from server when
user scrolls.

this panel can only contain vscrolltablerow type of widgets. this
simulates very large table, keeping spacers which take room of
unrendered rows.",@since 72,,@author vaadin ltd,"@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus
@see
com.google.gwt.event.dom.client.focushandler#onfocus com.google.gwt.event
dom.client.focusevent

non javadoc

@see
com.google.gwt.event.dom.client.blurhandler#onblur com.google.gwt.event
dom.client.blurevent

non javadoc

@see com.vaadin.client.focusable#focus

handles showing context menu on long press from a touch screen."
6,VTextArea.java,"this class represents a multiline textfield textarea .

todo consider replacing this with a richtextarea based implementation. ie
does not support css height for textareas in strict mode

@author vaadin ltd.",this class represents a multiline textfield textarea .,,,,,@author vaadin ltd.,
6,VUpload.java,"note, we are not using gwt formpanel as we want to listen submitcomplete
events even though the upload component is already detached.

@author vaadin ltd",,,,,,@author vaadin ltd,
6,Window.java,"a component that represents a floating popup window that can be added to a
@link ui . a window is added to a @code ui using
@link ui#addwindow window .
p
the contents of a window is set using @link #setcontent component or by
using the @link #window string, component constructor.
p
p
a window can be positioned on the screen using absolute coordinates pixels
or set to be centered using @link #center
p
p
the caption is displayed in the window header.
p
p
in vaadin versions prior to 70.0, window was also used as application level
windows. this function is now covered by the @link ui class.
p

@author vaadin ltd.
@since 30

non javadoc

@see com.vaadin.ui.panel#paintcontent com.vaadin.server.painttarget

non javadoc

@see com.vaadin.ui.panel#changevariables java.lang.object, java.util.map

event which is fired when the window order position is changed.

@see ui.windoworderupdateevent

@author vaadin ltd

non javadoc

@see com.vaadin.ui.panel#paintcontent com.vaadin.server.painttarget

non javadoc

@see com.vaadin.ui.panel#changevariables java.lang.object, java.util.map

an interface used for listening to window order change events.

@see ui.windoworderupdatelistener

non javadoc

@see com.vaadin.ui.panel#paintcontent com.vaadin.server.painttarget

non javadoc

@see com.vaadin.ui.panel#changevariables java.lang.object, java.util.map

an interface used for listening to window close events. add the
closelistener to a window and
@link closelistener#windowclose closeevent will be called whenever the
user closes the window.

p
since vaadin 65, removing a window using @link #removewindow window
fires the closelistener.
p

non javadoc

@see com.vaadin.ui.panel#paintcontent com.vaadin.server.painttarget

non javadoc

@see com.vaadin.ui.panel#changevariables java.lang.object, java.util.map

event which is fired when the mode of the window changes.

@author vaadin ltd
@since 71

non javadoc

@see com.vaadin.ui.panel#paintcontent com.vaadin.server.painttarget

non javadoc

@see com.vaadin.ui.panel#changevariables java.lang.object, java.util.map

an interface used for listening to window maximize restore events. add
the windowmodechangelistener to a window and
@link windowmodechangelistener#windowmodechanged windowmodechangeevent
will be called whenever the window is maximized
@link windowmode#maximized or restored @link windowmode#normal .

non javadoc

@see com.vaadin.ui.panel#paintcontent com.vaadin.server.painttarget

non javadoc

@see com.vaadin.ui.panel#changevariables java.lang.object, java.util.map

resize events are fired whenever the client side fires a resize event
eg the browser window is resized . the frequency may vary across
browsers.

non javadoc

@see com.vaadin.ui.panel#paintcontent com.vaadin.server.painttarget

non javadoc

@see com.vaadin.ui.panel#changevariables java.lang.object, java.util.map

listener for window resize events.

@see com.vaadin.ui.window.resizeevent

non javadoc

@see com.vaadin.ui.panel#paintcontent com.vaadin.server.painttarget

non javadoc

@see com.vaadin.ui.panel#changevariables java.lang.object, java.util.map

a @link shortcutlistener specifically made to define a keyboard
shortcut that closes the window.

pre
code
within the window using helper
window.setcloseshortcut keycode.escape, null

or globally
getui .addaction new window.closeshortcut window, keycode.escape
code
pre","a component that represents a floating popup window that can be added to a
@link ui . a window is added to a @code ui using
@link ui#addwindow window .","the contents of a window is set using @link #setcontent component or by
using the @link #window string, component constructor.
p
p
a window can be positioned on the screen using absolute coordinates pixels
or set to be centered using @link #center
p
p
the caption is displayed in the window header.
p
p
in vaadin versions prior to 70.0, window was also used as application level
windows. this function is now covered by the @link ui class.
event which is fired when the window order position is changed.
an interface used for listening to window order change events.
an interface used for listening to window close events. add the
closelistener to a window and
@link closelistener#windowclose closeevent will be called whenever the
user closes the window. an interface used for listening to window maximize restore events. add
the windowmodechangelistener to a window and
@link windowmodechangelistener#windowmodechanged windowmodechangeevent
will be called whenever the window is maximized
@link windowmode#maximized or restored @link windowmode#normal . resize events are fired whenever the client side fires a resize event
eg the browser window is resized . the frequency may vary across
browsers. a @link shortcutlistener specifically made to define a keyboard
shortcut that closes the window.",,@since 30,"pre
code
within the window using helper
window.setcloseshortcut keycode.escape, null

or globally
getui .addaction new window.closeshortcut window, keycode.escape
code
pre",@author vaadin ltd,"@see com.vaadin.ui.panel#paintcontent com.vaadin.server.painttarget

non javadoc

@see com.vaadin.ui.panel#changevariables java.lang.object, java.util.map

event which is fired when the window order position is changed.

@see ui.windoworderupdateevent"
6,XhrConnectionError.java,"xhrconnectionerror provides detail about an error which occurred during an
xhr request to the server.

@since 76
@author vaadin ltd","xhrconnectionerror provides detail about an error which occurred during an
xhr request to the server.",,,@since 76,,@author vaadin ltd,
